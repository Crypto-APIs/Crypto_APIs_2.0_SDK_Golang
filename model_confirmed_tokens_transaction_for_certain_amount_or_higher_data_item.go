/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ConfirmedTokensTransactionForCertainAmountOrHigherDataItem Defines an `item` as one result.
type ConfirmedTokensTransactionForCertainAmountOrHigherDataItem struct {
	// Represents the specific blockchain protocol name, e.g. Ethereum, Bitcoin, etc.
	Blockchain string `json:"blockchain"`
	// Represents the name of the blockchain network used; blockchain networks are usually identical as technology and software, but they differ in data, e.g. - \"mainnet\" is the live network with actual data while networks like \"testnet\", \"ropsten\", \"mordor\" are test networks.
	Network string `json:"network"`
	MinedInBlock AddressTokensTransactionConfirmedDataItemMinedInBlock `json:"minedInBlock"`
	// Defines the unique ID of the specific transaction, i.e. its identification number.
	TransactionId string `json:"transactionId"`
	// Defines the type of token sent with the transaction, e.g. ERC 20.
	TokenType string `json:"tokenType"`
	Token ConfirmedTokensTransactionForCertainAmountOrHigherToken `json:"token"`
}

// NewConfirmedTokensTransactionForCertainAmountOrHigherDataItem instantiates a new ConfirmedTokensTransactionForCertainAmountOrHigherDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfirmedTokensTransactionForCertainAmountOrHigherDataItem(blockchain string, network string, minedInBlock AddressTokensTransactionConfirmedDataItemMinedInBlock, transactionId string, tokenType string, token ConfirmedTokensTransactionForCertainAmountOrHigherToken) *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem {
	this := ConfirmedTokensTransactionForCertainAmountOrHigherDataItem{}
	this.Blockchain = blockchain
	this.Network = network
	this.MinedInBlock = minedInBlock
	this.TransactionId = transactionId
	this.TokenType = tokenType
	this.Token = token
	return &this
}

// NewConfirmedTokensTransactionForCertainAmountOrHigherDataItemWithDefaults instantiates a new ConfirmedTokensTransactionForCertainAmountOrHigherDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfirmedTokensTransactionForCertainAmountOrHigherDataItemWithDefaults() *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem {
	this := ConfirmedTokensTransactionForCertainAmountOrHigherDataItem{}
	return &this
}

// GetBlockchain returns the Blockchain field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetBlockchain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value
// and a boolean to check if the value has been set.
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetBlockchainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Blockchain, true
}

// SetBlockchain sets field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) SetBlockchain(v string) {
	o.Blockchain = v
}

// GetNetwork returns the Network field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) SetNetwork(v string) {
	o.Network = v
}

// GetMinedInBlock returns the MinedInBlock field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetMinedInBlock() AddressTokensTransactionConfirmedDataItemMinedInBlock {
	if o == nil {
		var ret AddressTokensTransactionConfirmedDataItemMinedInBlock
		return ret
	}

	return o.MinedInBlock
}

// GetMinedInBlockOk returns a tuple with the MinedInBlock field value
// and a boolean to check if the value has been set.
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetMinedInBlockOk() (*AddressTokensTransactionConfirmedDataItemMinedInBlock, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinedInBlock, true
}

// SetMinedInBlock sets field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) SetMinedInBlock(v AddressTokensTransactionConfirmedDataItemMinedInBlock) {
	o.MinedInBlock = v
}

// GetTransactionId returns the TransactionId field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetTokenType returns the TokenType field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) SetTokenType(v string) {
	o.TokenType = v
}

// GetToken returns the Token field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetToken() ConfirmedTokensTransactionForCertainAmountOrHigherToken {
	if o == nil {
		var ret ConfirmedTokensTransactionForCertainAmountOrHigherToken
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) GetTokenOk() (*ConfirmedTokensTransactionForCertainAmountOrHigherToken, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) SetToken(v ConfirmedTokensTransactionForCertainAmountOrHigherToken) {
	o.Token = v
}

func (o ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["blockchain"] = o.Blockchain
	}
	if true {
		toSerialize["network"] = o.Network
	}
	if true {
		toSerialize["minedInBlock"] = o.MinedInBlock
	}
	if true {
		toSerialize["transactionId"] = o.TransactionId
	}
	if true {
		toSerialize["tokenType"] = o.TokenType
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem struct {
	value *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem
	isSet bool
}

func (v NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem) Get() *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem {
	return v.value
}

func (v *NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem) Set(val *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem(val *ConfirmedTokensTransactionForCertainAmountOrHigherDataItem) *NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem {
	return &NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem{value: val, isSet: true}
}

func (v NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfirmedTokensTransactionForCertainAmountOrHigherDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


