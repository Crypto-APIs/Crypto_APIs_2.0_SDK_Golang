/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateCoinsTransactionRequestFromAddressRI struct for CreateCoinsTransactionRequestFromAddressRI
type CreateCoinsTransactionRequestFromAddressRI struct {
	// Represents the Secret Key value provided by the customer. This field is used for security purposes during the callback notification, in order to prove the sender of the callback as Crypto APIs.
	CallbackSecretKey *string `json:"callbackSecretKey,omitempty"`
	// Verified URL for sending callbacks
	CallbackUrl *string `json:"callbackUrl,omitempty"`
	// Represents the fee priority of the automation, whether it is \"slow\", \"standard\" or \"fast\".
	FeePriority string `json:"feePriority"`
	// Defines the destination for the transaction, i.e. the recipient(s).
	Recipients []CreateCoinsTransactionRequestFromAddressRIRecipients `json:"recipients"`
	Senders CreateCoinsTransactionRequestFromAddressRISenders `json:"senders"`
	// Defines the status of the transaction request, e.g. \"created, \"await_approval\", \"pending\", \"prepared\", \"signed\", \"broadcasted\", \"success\", \"failed\", \"rejected\", mined\".
	TransactionRequestStatus string `json:"transactionRequestStatus"`
}

// NewCreateCoinsTransactionRequestFromAddressRI instantiates a new CreateCoinsTransactionRequestFromAddressRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCoinsTransactionRequestFromAddressRI(feePriority string, recipients []CreateCoinsTransactionRequestFromAddressRIRecipients, senders CreateCoinsTransactionRequestFromAddressRISenders, transactionRequestStatus string) *CreateCoinsTransactionRequestFromAddressRI {
	this := CreateCoinsTransactionRequestFromAddressRI{}
	this.FeePriority = feePriority
	this.Recipients = recipients
	this.Senders = senders
	this.TransactionRequestStatus = transactionRequestStatus
	return &this
}

// NewCreateCoinsTransactionRequestFromAddressRIWithDefaults instantiates a new CreateCoinsTransactionRequestFromAddressRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCoinsTransactionRequestFromAddressRIWithDefaults() *CreateCoinsTransactionRequestFromAddressRI {
	this := CreateCoinsTransactionRequestFromAddressRI{}
	return &this
}

// GetCallbackSecretKey returns the CallbackSecretKey field value if set, zero value otherwise.
func (o *CreateCoinsTransactionRequestFromAddressRI) GetCallbackSecretKey() string {
	if o == nil || o.CallbackSecretKey == nil {
		var ret string
		return ret
	}
	return *o.CallbackSecretKey
}

// GetCallbackSecretKeyOk returns a tuple with the CallbackSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRI) GetCallbackSecretKeyOk() (*string, bool) {
	if o == nil || o.CallbackSecretKey == nil {
		return nil, false
	}
	return o.CallbackSecretKey, true
}

// HasCallbackSecretKey returns a boolean if a field has been set.
func (o *CreateCoinsTransactionRequestFromAddressRI) HasCallbackSecretKey() bool {
	if o != nil && o.CallbackSecretKey != nil {
		return true
	}

	return false
}

// SetCallbackSecretKey gets a reference to the given string and assigns it to the CallbackSecretKey field.
func (o *CreateCoinsTransactionRequestFromAddressRI) SetCallbackSecretKey(v string) {
	o.CallbackSecretKey = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *CreateCoinsTransactionRequestFromAddressRI) GetCallbackUrl() string {
	if o == nil || o.CallbackUrl == nil {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRI) GetCallbackUrlOk() (*string, bool) {
	if o == nil || o.CallbackUrl == nil {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *CreateCoinsTransactionRequestFromAddressRI) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl != nil {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *CreateCoinsTransactionRequestFromAddressRI) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetFeePriority returns the FeePriority field value
func (o *CreateCoinsTransactionRequestFromAddressRI) GetFeePriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeePriority
}

// GetFeePriorityOk returns a tuple with the FeePriority field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRI) GetFeePriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FeePriority, true
}

// SetFeePriority sets field value
func (o *CreateCoinsTransactionRequestFromAddressRI) SetFeePriority(v string) {
	o.FeePriority = v
}

// GetRecipients returns the Recipients field value
func (o *CreateCoinsTransactionRequestFromAddressRI) GetRecipients() []CreateCoinsTransactionRequestFromAddressRIRecipients {
	if o == nil {
		var ret []CreateCoinsTransactionRequestFromAddressRIRecipients
		return ret
	}

	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRI) GetRecipientsOk() (*[]CreateCoinsTransactionRequestFromAddressRIRecipients, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Recipients, true
}

// SetRecipients sets field value
func (o *CreateCoinsTransactionRequestFromAddressRI) SetRecipients(v []CreateCoinsTransactionRequestFromAddressRIRecipients) {
	o.Recipients = v
}

// GetSenders returns the Senders field value
func (o *CreateCoinsTransactionRequestFromAddressRI) GetSenders() CreateCoinsTransactionRequestFromAddressRISenders {
	if o == nil {
		var ret CreateCoinsTransactionRequestFromAddressRISenders
		return ret
	}

	return o.Senders
}

// GetSendersOk returns a tuple with the Senders field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRI) GetSendersOk() (*CreateCoinsTransactionRequestFromAddressRISenders, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Senders, true
}

// SetSenders sets field value
func (o *CreateCoinsTransactionRequestFromAddressRI) SetSenders(v CreateCoinsTransactionRequestFromAddressRISenders) {
	o.Senders = v
}

// GetTransactionRequestStatus returns the TransactionRequestStatus field value
func (o *CreateCoinsTransactionRequestFromAddressRI) GetTransactionRequestStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionRequestStatus
}

// GetTransactionRequestStatusOk returns a tuple with the TransactionRequestStatus field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRI) GetTransactionRequestStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionRequestStatus, true
}

// SetTransactionRequestStatus sets field value
func (o *CreateCoinsTransactionRequestFromAddressRI) SetTransactionRequestStatus(v string) {
	o.TransactionRequestStatus = v
}

func (o CreateCoinsTransactionRequestFromAddressRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CallbackSecretKey != nil {
		toSerialize["callbackSecretKey"] = o.CallbackSecretKey
	}
	if o.CallbackUrl != nil {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if true {
		toSerialize["feePriority"] = o.FeePriority
	}
	if true {
		toSerialize["recipients"] = o.Recipients
	}
	if true {
		toSerialize["senders"] = o.Senders
	}
	if true {
		toSerialize["transactionRequestStatus"] = o.TransactionRequestStatus
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCoinsTransactionRequestFromAddressRI struct {
	value *CreateCoinsTransactionRequestFromAddressRI
	isSet bool
}

func (v NullableCreateCoinsTransactionRequestFromAddressRI) Get() *CreateCoinsTransactionRequestFromAddressRI {
	return v.value
}

func (v *NullableCreateCoinsTransactionRequestFromAddressRI) Set(val *CreateCoinsTransactionRequestFromAddressRI) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCoinsTransactionRequestFromAddressRI) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCoinsTransactionRequestFromAddressRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCoinsTransactionRequestFromAddressRI(val *CreateCoinsTransactionRequestFromAddressRI) *NullableCreateCoinsTransactionRequestFromAddressRI {
	return &NullableCreateCoinsTransactionRequestFromAddressRI{value: val, isSet: true}
}

func (v NullableCreateCoinsTransactionRequestFromAddressRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCoinsTransactionRequestFromAddressRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


