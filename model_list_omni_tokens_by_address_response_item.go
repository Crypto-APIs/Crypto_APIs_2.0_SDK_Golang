/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListOmniTokensByAddressResponseItem struct for ListOmniTokensByAddressResponseItem
type ListOmniTokensByAddressResponseItem struct {
	// Defines the balance of the Omni tokens to send in the address.
	Balance string `json:"balance"`
	// Defines the amount frozen by the issuer (applies to managed properties only).
	Frozen string `json:"frozen"`
	// Defines the name of the Omni tokens to send.
	Name string `json:"name"`
	// Represents the identifier of the tokens to send.
	PropertyId int32 `json:"propertyId"`
	// Represents the amount reserved by sell offers and accepts.
	Reserved string `json:"reserved"`
}

// NewListOmniTokensByAddressResponseItem instantiates a new ListOmniTokensByAddressResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOmniTokensByAddressResponseItem(balance string, frozen string, name string, propertyId int32, reserved string) *ListOmniTokensByAddressResponseItem {
	this := ListOmniTokensByAddressResponseItem{}
	this.Balance = balance
	this.Frozen = frozen
	this.Name = name
	this.PropertyId = propertyId
	this.Reserved = reserved
	return &this
}

// NewListOmniTokensByAddressResponseItemWithDefaults instantiates a new ListOmniTokensByAddressResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOmniTokensByAddressResponseItemWithDefaults() *ListOmniTokensByAddressResponseItem {
	this := ListOmniTokensByAddressResponseItem{}
	return &this
}

// GetBalance returns the Balance field value
func (o *ListOmniTokensByAddressResponseItem) GetBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *ListOmniTokensByAddressResponseItem) GetBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *ListOmniTokensByAddressResponseItem) SetBalance(v string) {
	o.Balance = v
}

// GetFrozen returns the Frozen field value
func (o *ListOmniTokensByAddressResponseItem) GetFrozen() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Frozen
}

// GetFrozenOk returns a tuple with the Frozen field value
// and a boolean to check if the value has been set.
func (o *ListOmniTokensByAddressResponseItem) GetFrozenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Frozen, true
}

// SetFrozen sets field value
func (o *ListOmniTokensByAddressResponseItem) SetFrozen(v string) {
	o.Frozen = v
}

// GetName returns the Name field value
func (o *ListOmniTokensByAddressResponseItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListOmniTokensByAddressResponseItem) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListOmniTokensByAddressResponseItem) SetName(v string) {
	o.Name = v
}

// GetPropertyId returns the PropertyId field value
func (o *ListOmniTokensByAddressResponseItem) GetPropertyId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value
// and a boolean to check if the value has been set.
func (o *ListOmniTokensByAddressResponseItem) GetPropertyIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PropertyId, true
}

// SetPropertyId sets field value
func (o *ListOmniTokensByAddressResponseItem) SetPropertyId(v int32) {
	o.PropertyId = v
}

// GetReserved returns the Reserved field value
func (o *ListOmniTokensByAddressResponseItem) GetReserved() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reserved
}

// GetReservedOk returns a tuple with the Reserved field value
// and a boolean to check if the value has been set.
func (o *ListOmniTokensByAddressResponseItem) GetReservedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reserved, true
}

// SetReserved sets field value
func (o *ListOmniTokensByAddressResponseItem) SetReserved(v string) {
	o.Reserved = v
}

func (o ListOmniTokensByAddressResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["balance"] = o.Balance
	}
	if true {
		toSerialize["frozen"] = o.Frozen
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["propertyId"] = o.PropertyId
	}
	if true {
		toSerialize["reserved"] = o.Reserved
	}
	return json.Marshal(toSerialize)
}

type NullableListOmniTokensByAddressResponseItem struct {
	value *ListOmniTokensByAddressResponseItem
	isSet bool
}

func (v NullableListOmniTokensByAddressResponseItem) Get() *ListOmniTokensByAddressResponseItem {
	return v.value
}

func (v *NullableListOmniTokensByAddressResponseItem) Set(val *ListOmniTokensByAddressResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableListOmniTokensByAddressResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableListOmniTokensByAddressResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOmniTokensByAddressResponseItem(val *ListOmniTokensByAddressResponseItem) *NullableListOmniTokensByAddressResponseItem {
	return &NullableListOmniTokensByAddressResponseItem{value: val, isSet: true}
}

func (v NullableListOmniTokensByAddressResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOmniTokensByAddressResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


