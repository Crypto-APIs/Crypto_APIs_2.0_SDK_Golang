/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListUnspentTransactionOutputsByAddressRIBlockchainSpecific struct for ListUnspentTransactionOutputsByAddressRIBlockchainSpecific
type ListUnspentTransactionOutputsByAddressRIBlockchainSpecific struct {
	// Represents the virtual size of this transaction
	VSize int32 `json:"vSize"`
	// It is used to enforce balance of Spend and Output transfers, in order to prevent their replay across transactions.
	BindingSig string `json:"bindingSig"`
	// Represents a block height after which the transaction will expire.
	ExpiryHeight int32 `json:"expiryHeight"`
	// Represents an encoding of a JoinSplitSig public validating key.
	JoinSplitPubKey string `json:"joinSplitPubKey"`
	// Is used to sign transactions that contain at least one JoinSplit description.
	JoinSplitSig string `json:"joinSplitSig"`
	// \"Overwinter\" is the network upgrade for the Zcash blockchain.
	Overwintered bool `json:"overwintered"`
	// Represents a sequence of JoinSplit descriptions using BCTV14 proofs.
	VJoinSplit *[]ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit `json:"vJoinSplit,omitempty"`
	// Object Array representation of transaction output descriptions
	VShieldedOutput *[]GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput `json:"vShieldedOutput,omitempty"`
	// Object Array representation of transaction spend descriptions
	VShieldedSpend []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend `json:"vShieldedSpend"`
	// Defines the transaction value balance.
	ValueBalance string `json:"valueBalance"`
	// Represents the transaction version group ID.
	VersionGroupId string `json:"versionGroupId"`
}

// NewListUnspentTransactionOutputsByAddressRIBlockchainSpecific instantiates a new ListUnspentTransactionOutputsByAddressRIBlockchainSpecific object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUnspentTransactionOutputsByAddressRIBlockchainSpecific(vSize int32, bindingSig string, expiryHeight int32, joinSplitPubKey string, joinSplitSig string, overwintered bool, vShieldedSpend []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend, valueBalance string, versionGroupId string) *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific {
	this := ListUnspentTransactionOutputsByAddressRIBlockchainSpecific{}
	this.VSize = vSize
	this.BindingSig = bindingSig
	this.ExpiryHeight = expiryHeight
	this.JoinSplitPubKey = joinSplitPubKey
	this.JoinSplitSig = joinSplitSig
	this.Overwintered = overwintered
	this.VShieldedSpend = vShieldedSpend
	this.ValueBalance = valueBalance
	this.VersionGroupId = versionGroupId
	return &this
}

// NewListUnspentTransactionOutputsByAddressRIBlockchainSpecificWithDefaults instantiates a new ListUnspentTransactionOutputsByAddressRIBlockchainSpecific object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUnspentTransactionOutputsByAddressRIBlockchainSpecificWithDefaults() *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific {
	this := ListUnspentTransactionOutputsByAddressRIBlockchainSpecific{}
	return &this
}

// GetVSize returns the VSize field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VSize
}

// GetVSizeOk returns a tuple with the VSize field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VSize, true
}

// SetVSize sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetVSize(v int32) {
	o.VSize = v
}

// GetBindingSig returns the BindingSig field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetBindingSig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BindingSig
}

// GetBindingSigOk returns a tuple with the BindingSig field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetBindingSigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BindingSig, true
}

// SetBindingSig sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetBindingSig(v string) {
	o.BindingSig = v
}

// GetExpiryHeight returns the ExpiryHeight field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetExpiryHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiryHeight
}

// GetExpiryHeightOk returns a tuple with the ExpiryHeight field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetExpiryHeightOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExpiryHeight, true
}

// SetExpiryHeight sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetExpiryHeight(v int32) {
	o.ExpiryHeight = v
}

// GetJoinSplitPubKey returns the JoinSplitPubKey field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetJoinSplitPubKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JoinSplitPubKey
}

// GetJoinSplitPubKeyOk returns a tuple with the JoinSplitPubKey field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetJoinSplitPubKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.JoinSplitPubKey, true
}

// SetJoinSplitPubKey sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetJoinSplitPubKey(v string) {
	o.JoinSplitPubKey = v
}

// GetJoinSplitSig returns the JoinSplitSig field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetJoinSplitSig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JoinSplitSig
}

// GetJoinSplitSigOk returns a tuple with the JoinSplitSig field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetJoinSplitSigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.JoinSplitSig, true
}

// SetJoinSplitSig sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetJoinSplitSig(v string) {
	o.JoinSplitSig = v
}

// GetOverwintered returns the Overwintered field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetOverwintered() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Overwintered
}

// GetOverwinteredOk returns a tuple with the Overwintered field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetOverwinteredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Overwintered, true
}

// SetOverwintered sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetOverwintered(v bool) {
	o.Overwintered = v
}

// GetVJoinSplit returns the VJoinSplit field value if set, zero value otherwise.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVJoinSplit() []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit {
	if o == nil || o.VJoinSplit == nil {
		var ret []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit
		return ret
	}
	return *o.VJoinSplit
}

// GetVJoinSplitOk returns a tuple with the VJoinSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVJoinSplitOk() (*[]ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit, bool) {
	if o == nil || o.VJoinSplit == nil {
		return nil, false
	}
	return o.VJoinSplit, true
}

// HasVJoinSplit returns a boolean if a field has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) HasVJoinSplit() bool {
	if o != nil && o.VJoinSplit != nil {
		return true
	}

	return false
}

// SetVJoinSplit gets a reference to the given []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit and assigns it to the VJoinSplit field.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetVJoinSplit(v []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVJoinSplit) {
	o.VJoinSplit = &v
}

// GetVShieldedOutput returns the VShieldedOutput field value if set, zero value otherwise.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVShieldedOutput() []GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput {
	if o == nil || o.VShieldedOutput == nil {
		var ret []GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput
		return ret
	}
	return *o.VShieldedOutput
}

// GetVShieldedOutputOk returns a tuple with the VShieldedOutput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVShieldedOutputOk() (*[]GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput, bool) {
	if o == nil || o.VShieldedOutput == nil {
		return nil, false
	}
	return o.VShieldedOutput, true
}

// HasVShieldedOutput returns a boolean if a field has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) HasVShieldedOutput() bool {
	if o != nil && o.VShieldedOutput != nil {
		return true
	}

	return false
}

// SetVShieldedOutput gets a reference to the given []GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput and assigns it to the VShieldedOutput field.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetVShieldedOutput(v []GetTransactionDetailsByTransactionIDRIBSZVShieldedOutput) {
	o.VShieldedOutput = &v
}

// GetVShieldedSpend returns the VShieldedSpend field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVShieldedSpend() []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend {
	if o == nil {
		var ret []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend
		return ret
	}

	return o.VShieldedSpend
}

// GetVShieldedSpendOk returns a tuple with the VShieldedSpend field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVShieldedSpendOk() (*[]ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VShieldedSpend, true
}

// SetVShieldedSpend sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetVShieldedSpend(v []ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) {
	o.VShieldedSpend = v
}

// GetValueBalance returns the ValueBalance field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetValueBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValueBalance
}

// GetValueBalanceOk returns a tuple with the ValueBalance field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetValueBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ValueBalance, true
}

// SetValueBalance sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetValueBalance(v string) {
	o.ValueBalance = v
}

// GetVersionGroupId returns the VersionGroupId field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVersionGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VersionGroupId
}

// GetVersionGroupIdOk returns a tuple with the VersionGroupId field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) GetVersionGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VersionGroupId, true
}

// SetVersionGroupId sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) SetVersionGroupId(v string) {
	o.VersionGroupId = v
}

func (o ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vSize"] = o.VSize
	}
	if true {
		toSerialize["bindingSig"] = o.BindingSig
	}
	if true {
		toSerialize["expiryHeight"] = o.ExpiryHeight
	}
	if true {
		toSerialize["joinSplitPubKey"] = o.JoinSplitPubKey
	}
	if true {
		toSerialize["joinSplitSig"] = o.JoinSplitSig
	}
	if true {
		toSerialize["overwintered"] = o.Overwintered
	}
	if o.VJoinSplit != nil {
		toSerialize["vJoinSplit"] = o.VJoinSplit
	}
	if o.VShieldedOutput != nil {
		toSerialize["vShieldedOutput"] = o.VShieldedOutput
	}
	if true {
		toSerialize["vShieldedSpend"] = o.VShieldedSpend
	}
	if true {
		toSerialize["valueBalance"] = o.ValueBalance
	}
	if true {
		toSerialize["versionGroupId"] = o.VersionGroupId
	}
	return json.Marshal(toSerialize)
}

type NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific struct {
	value *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific
	isSet bool
}

func (v NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific) Get() *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific {
	return v.value
}

func (v *NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific) Set(val *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) {
	v.value = val
	v.isSet = true
}

func (v NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific) IsSet() bool {
	return v.isSet
}

func (v *NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific(val *ListUnspentTransactionOutputsByAddressRIBlockchainSpecific) *NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific {
	return &NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific{value: val, isSet: true}
}

func (v NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecific) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


