/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken Bitcoin Omni Token
type ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken struct {
	// Defines the Property ID of the Omni Layer token.
	PropertyId int32 `json:"propertyId"`
}

// NewListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken instantiates a new ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken(propertyId int32) *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken {
	this := ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken{}
	this.PropertyId = propertyId
	return &this
}

// NewListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniTokenWithDefaults instantiates a new ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniTokenWithDefaults() *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken {
	this := ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken{}
	return &this
}

// GetPropertyId returns the PropertyId field value
func (o *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) GetPropertyId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value
// and a boolean to check if the value has been set.
func (o *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) GetPropertyIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PropertyId, true
}

// SetPropertyId sets field value
func (o *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) SetPropertyId(v int32) {
	o.PropertyId = v
}

func (o ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["propertyId"] = o.PropertyId
	}
	return json.Marshal(toSerialize)
}

type NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken struct {
	value *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken
	isSet bool
}

func (v NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) Get() *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken {
	return v.value
}

func (v *NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) Set(val *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) {
	v.value = val
	v.isSet = true
}

func (v NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) IsSet() bool {
	return v.isSet
}

func (v *NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken(val *ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) *NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken {
	return &NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken{value: val, isSet: true}
}

func (v NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


