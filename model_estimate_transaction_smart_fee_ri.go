/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// EstimateTransactionSmartFeeRI struct for EstimateTransactionSmartFeeRI
type EstimateTransactionSmartFeeRI struct {
	// Represents the confirmation target in blocks
	ConfirmationTarget int32 `json:"confirmationTarget"`
	// Represents the Fee Rate value.
	FeeRate string `json:"feeRate"`
	// Defines the fee unit.
	Unit string `json:"unit"`
}

// NewEstimateTransactionSmartFeeRI instantiates a new EstimateTransactionSmartFeeRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimateTransactionSmartFeeRI(confirmationTarget int32, feeRate string, unit string) *EstimateTransactionSmartFeeRI {
	this := EstimateTransactionSmartFeeRI{}
	this.ConfirmationTarget = confirmationTarget
	this.FeeRate = feeRate
	this.Unit = unit
	return &this
}

// NewEstimateTransactionSmartFeeRIWithDefaults instantiates a new EstimateTransactionSmartFeeRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimateTransactionSmartFeeRIWithDefaults() *EstimateTransactionSmartFeeRI {
	this := EstimateTransactionSmartFeeRI{}
	return &this
}

// GetConfirmationTarget returns the ConfirmationTarget field value
func (o *EstimateTransactionSmartFeeRI) GetConfirmationTarget() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConfirmationTarget
}

// GetConfirmationTargetOk returns a tuple with the ConfirmationTarget field value
// and a boolean to check if the value has been set.
func (o *EstimateTransactionSmartFeeRI) GetConfirmationTargetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfirmationTarget, true
}

// SetConfirmationTarget sets field value
func (o *EstimateTransactionSmartFeeRI) SetConfirmationTarget(v int32) {
	o.ConfirmationTarget = v
}

// GetFeeRate returns the FeeRate field value
func (o *EstimateTransactionSmartFeeRI) GetFeeRate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeeRate
}

// GetFeeRateOk returns a tuple with the FeeRate field value
// and a boolean to check if the value has been set.
func (o *EstimateTransactionSmartFeeRI) GetFeeRateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeRate, true
}

// SetFeeRate sets field value
func (o *EstimateTransactionSmartFeeRI) SetFeeRate(v string) {
	o.FeeRate = v
}

// GetUnit returns the Unit field value
func (o *EstimateTransactionSmartFeeRI) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *EstimateTransactionSmartFeeRI) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *EstimateTransactionSmartFeeRI) SetUnit(v string) {
	o.Unit = v
}

func (o EstimateTransactionSmartFeeRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["confirmationTarget"] = o.ConfirmationTarget
	}
	if true {
		toSerialize["feeRate"] = o.FeeRate
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableEstimateTransactionSmartFeeRI struct {
	value *EstimateTransactionSmartFeeRI
	isSet bool
}

func (v NullableEstimateTransactionSmartFeeRI) Get() *EstimateTransactionSmartFeeRI {
	return v.value
}

func (v *NullableEstimateTransactionSmartFeeRI) Set(val *EstimateTransactionSmartFeeRI) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimateTransactionSmartFeeRI) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimateTransactionSmartFeeRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimateTransactionSmartFeeRI(val *EstimateTransactionSmartFeeRI) *NullableEstimateTransactionSmartFeeRI {
	return &NullableEstimateTransactionSmartFeeRI{value: val, isSet: true}
}

func (v NullableEstimateTransactionSmartFeeRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimateTransactionSmartFeeRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


