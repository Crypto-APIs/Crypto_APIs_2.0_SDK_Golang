/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListAssetsDetailsRILatestRate Specifies the latest price of the asset.
type ListAssetsDetailsRILatestRate struct {
	// Specifies the amount of the latest price of the asset.
	Amount string `json:"amount"`
	// Defines when the price was calculated in UNIX timestamp.
	CalculationTimestamp *int32 `json:"calculationTimestamp,omitempty"`
	// Specifies the unit of the latest price of the asset.
	Unit string `json:"unit"`
}

// NewListAssetsDetailsRILatestRate instantiates a new ListAssetsDetailsRILatestRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAssetsDetailsRILatestRate(amount string, unit string) *ListAssetsDetailsRILatestRate {
	this := ListAssetsDetailsRILatestRate{}
	this.Amount = amount
	this.Unit = unit
	return &this
}

// NewListAssetsDetailsRILatestRateWithDefaults instantiates a new ListAssetsDetailsRILatestRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAssetsDetailsRILatestRateWithDefaults() *ListAssetsDetailsRILatestRate {
	this := ListAssetsDetailsRILatestRate{}
	return &this
}

// GetAmount returns the Amount field value
func (o *ListAssetsDetailsRILatestRate) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ListAssetsDetailsRILatestRate) GetAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ListAssetsDetailsRILatestRate) SetAmount(v string) {
	o.Amount = v
}

// GetCalculationTimestamp returns the CalculationTimestamp field value if set, zero value otherwise.
func (o *ListAssetsDetailsRILatestRate) GetCalculationTimestamp() int32 {
	if o == nil || o.CalculationTimestamp == nil {
		var ret int32
		return ret
	}
	return *o.CalculationTimestamp
}

// GetCalculationTimestampOk returns a tuple with the CalculationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAssetsDetailsRILatestRate) GetCalculationTimestampOk() (*int32, bool) {
	if o == nil || o.CalculationTimestamp == nil {
		return nil, false
	}
	return o.CalculationTimestamp, true
}

// HasCalculationTimestamp returns a boolean if a field has been set.
func (o *ListAssetsDetailsRILatestRate) HasCalculationTimestamp() bool {
	if o != nil && o.CalculationTimestamp != nil {
		return true
	}

	return false
}

// SetCalculationTimestamp gets a reference to the given int32 and assigns it to the CalculationTimestamp field.
func (o *ListAssetsDetailsRILatestRate) SetCalculationTimestamp(v int32) {
	o.CalculationTimestamp = &v
}

// GetUnit returns the Unit field value
func (o *ListAssetsDetailsRILatestRate) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *ListAssetsDetailsRILatestRate) GetUnitOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *ListAssetsDetailsRILatestRate) SetUnit(v string) {
	o.Unit = v
}

func (o ListAssetsDetailsRILatestRate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.CalculationTimestamp != nil {
		toSerialize["calculationTimestamp"] = o.CalculationTimestamp
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableListAssetsDetailsRILatestRate struct {
	value *ListAssetsDetailsRILatestRate
	isSet bool
}

func (v NullableListAssetsDetailsRILatestRate) Get() *ListAssetsDetailsRILatestRate {
	return v.value
}

func (v *NullableListAssetsDetailsRILatestRate) Set(val *ListAssetsDetailsRILatestRate) {
	v.value = val
	v.isSet = true
}

func (v NullableListAssetsDetailsRILatestRate) IsSet() bool {
	return v.isSet
}

func (v *NullableListAssetsDetailsRILatestRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAssetsDetailsRILatestRate(val *ListAssetsDetailsRILatestRate) *NullableListAssetsDetailsRILatestRate {
	return &NullableListAssetsDetailsRILatestRate{value: val, isSet: true}
}

func (v NullableListAssetsDetailsRILatestRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAssetsDetailsRILatestRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


