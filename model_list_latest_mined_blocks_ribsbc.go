/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListLatestMinedBlocksRIBSBC Bitcoin Cash
type ListLatestMinedBlocksRIBSBC struct {
	// A sub-unit of BCH equal to 0.000001 BCH, or 100 Satoshi, and is the same as microbitcoincash (Î¼BCH). Bits have two-decimal precision.
	Bits string `json:"bits"`
	// Represents a hexadecimal number of all the hashes necessary to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes.
	Chainwork string `json:"chainwork"`
	// Defines the single and final (root) node of a Merkle tree. It is the combined hash of all transactions' hashes that are part of a blockchain block.
	MerkleRoot string `json:"merkleRoot"`
	// Represents the version of the specific block on the blockchain.
	Version int32 `json:"version"`
	// Is the hexadecimal string representation of the block's version.
	VersionHex string `json:"versionHex"`
}

// NewListLatestMinedBlocksRIBSBC instantiates a new ListLatestMinedBlocksRIBSBC object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLatestMinedBlocksRIBSBC(bits string, chainwork string, merkleRoot string, version int32, versionHex string) *ListLatestMinedBlocksRIBSBC {
	this := ListLatestMinedBlocksRIBSBC{}
	this.Bits = bits
	this.Chainwork = chainwork
	this.MerkleRoot = merkleRoot
	this.Version = version
	this.VersionHex = versionHex
	return &this
}

// NewListLatestMinedBlocksRIBSBCWithDefaults instantiates a new ListLatestMinedBlocksRIBSBC object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLatestMinedBlocksRIBSBCWithDefaults() *ListLatestMinedBlocksRIBSBC {
	this := ListLatestMinedBlocksRIBSBC{}
	return &this
}

// GetBits returns the Bits field value
func (o *ListLatestMinedBlocksRIBSBC) GetBits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bits
}

// GetBitsOk returns a tuple with the Bits field value
// and a boolean to check if the value has been set.
func (o *ListLatestMinedBlocksRIBSBC) GetBitsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Bits, true
}

// SetBits sets field value
func (o *ListLatestMinedBlocksRIBSBC) SetBits(v string) {
	o.Bits = v
}

// GetChainwork returns the Chainwork field value
func (o *ListLatestMinedBlocksRIBSBC) GetChainwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chainwork
}

// GetChainworkOk returns a tuple with the Chainwork field value
// and a boolean to check if the value has been set.
func (o *ListLatestMinedBlocksRIBSBC) GetChainworkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Chainwork, true
}

// SetChainwork sets field value
func (o *ListLatestMinedBlocksRIBSBC) SetChainwork(v string) {
	o.Chainwork = v
}

// GetMerkleRoot returns the MerkleRoot field value
func (o *ListLatestMinedBlocksRIBSBC) GetMerkleRoot() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerkleRoot
}

// GetMerkleRootOk returns a tuple with the MerkleRoot field value
// and a boolean to check if the value has been set.
func (o *ListLatestMinedBlocksRIBSBC) GetMerkleRootOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MerkleRoot, true
}

// SetMerkleRoot sets field value
func (o *ListLatestMinedBlocksRIBSBC) SetMerkleRoot(v string) {
	o.MerkleRoot = v
}

// GetVersion returns the Version field value
func (o *ListLatestMinedBlocksRIBSBC) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ListLatestMinedBlocksRIBSBC) GetVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ListLatestMinedBlocksRIBSBC) SetVersion(v int32) {
	o.Version = v
}

// GetVersionHex returns the VersionHex field value
func (o *ListLatestMinedBlocksRIBSBC) GetVersionHex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VersionHex
}

// GetVersionHexOk returns a tuple with the VersionHex field value
// and a boolean to check if the value has been set.
func (o *ListLatestMinedBlocksRIBSBC) GetVersionHexOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VersionHex, true
}

// SetVersionHex sets field value
func (o *ListLatestMinedBlocksRIBSBC) SetVersionHex(v string) {
	o.VersionHex = v
}

func (o ListLatestMinedBlocksRIBSBC) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bits"] = o.Bits
	}
	if true {
		toSerialize["chainwork"] = o.Chainwork
	}
	if true {
		toSerialize["merkleRoot"] = o.MerkleRoot
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["versionHex"] = o.VersionHex
	}
	return json.Marshal(toSerialize)
}

type NullableListLatestMinedBlocksRIBSBC struct {
	value *ListLatestMinedBlocksRIBSBC
	isSet bool
}

func (v NullableListLatestMinedBlocksRIBSBC) Get() *ListLatestMinedBlocksRIBSBC {
	return v.value
}

func (v *NullableListLatestMinedBlocksRIBSBC) Set(val *ListLatestMinedBlocksRIBSBC) {
	v.value = val
	v.isSet = true
}

func (v NullableListLatestMinedBlocksRIBSBC) IsSet() bool {
	return v.isSet
}

func (v *NullableListLatestMinedBlocksRIBSBC) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLatestMinedBlocksRIBSBC(val *ListLatestMinedBlocksRIBSBC) *NullableListLatestMinedBlocksRIBSBC {
	return &NullableListLatestMinedBlocksRIBSBC{value: val, isSet: true}
}

func (v NullableListLatestMinedBlocksRIBSBC) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLatestMinedBlocksRIBSBC) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


