/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
	"fmt"
)

// ListUnconfirmedTransactionsByAddressRIBS - struct for ListUnconfirmedTransactionsByAddressRIBS
type ListUnconfirmedTransactionsByAddressRIBS struct {
	ListUnconfirmedTransactionsByAddressRIBSB *ListUnconfirmedTransactionsByAddressRIBSB
	ListUnconfirmedTransactionsByAddressRIBSBC *ListUnconfirmedTransactionsByAddressRIBSBC
	ListUnconfirmedTransactionsByAddressRIBSBSC *ListUnconfirmedTransactionsByAddressRIBSBSC
	ListUnconfirmedTransactionsByAddressRIBSD *ListUnconfirmedTransactionsByAddressRIBSD
	ListUnconfirmedTransactionsByAddressRIBSD2 *ListUnconfirmedTransactionsByAddressRIBSD2
	ListUnconfirmedTransactionsByAddressRIBSE *ListUnconfirmedTransactionsByAddressRIBSE
	ListUnconfirmedTransactionsByAddressRIBSEC *ListUnconfirmedTransactionsByAddressRIBSEC
	ListUnconfirmedTransactionsByAddressRIBSL *ListUnconfirmedTransactionsByAddressRIBSL
	ListUnconfirmedTransactionsByAddressRIBSZ *ListUnconfirmedTransactionsByAddressRIBSZ
}

// ListUnconfirmedTransactionsByAddressRIBSBAsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSB wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSBAsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSB) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSB: v,
	}
}

// ListUnconfirmedTransactionsByAddressRIBSBCAsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSBC wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSBCAsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSBC) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSBC: v,
	}
}

// ListUnconfirmedTransactionsByAddressRIBSBSCAsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSBSC wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSBSCAsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSBSC) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSBSC: v,
	}
}

// ListUnconfirmedTransactionsByAddressRIBSDAsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSD wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSDAsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSD) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSD: v,
	}
}

// ListUnconfirmedTransactionsByAddressRIBSD2AsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSD2 wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSD2AsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSD2) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSD2: v,
	}
}

// ListUnconfirmedTransactionsByAddressRIBSEAsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSE wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSEAsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSE) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSE: v,
	}
}

// ListUnconfirmedTransactionsByAddressRIBSECAsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSEC wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSECAsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSEC) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSEC: v,
	}
}

// ListUnconfirmedTransactionsByAddressRIBSLAsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSL wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSLAsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSL) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSL: v,
	}
}

// ListUnconfirmedTransactionsByAddressRIBSZAsListUnconfirmedTransactionsByAddressRIBS is a convenience function that returns ListUnconfirmedTransactionsByAddressRIBSZ wrapped in ListUnconfirmedTransactionsByAddressRIBS
func ListUnconfirmedTransactionsByAddressRIBSZAsListUnconfirmedTransactionsByAddressRIBS(v *ListUnconfirmedTransactionsByAddressRIBSZ) ListUnconfirmedTransactionsByAddressRIBS {
	return ListUnconfirmedTransactionsByAddressRIBS{
		ListUnconfirmedTransactionsByAddressRIBSZ: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListUnconfirmedTransactionsByAddressRIBS) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSB
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSB)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSB, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSB)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSB) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSB = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSB = nil
	}

	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSBC
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSBC)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSBC, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSBC)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSBC) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSBC = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSBC = nil
	}

	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSBSC
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSBSC)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSBSC, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSBSC)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSBSC) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSBSC = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSBSC = nil
	}

	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSD
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSD)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSD, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSD)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSD) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSD = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSD = nil
	}

	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSD2
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSD2)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSD2, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSD2)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSD2) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSD2 = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSD2 = nil
	}

	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSE
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSE)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSE, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSE)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSE) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSE = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSE = nil
	}

	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSEC
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSEC)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSEC, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSEC)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSEC) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSEC = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSEC = nil
	}

	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSL
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSL)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSL, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSL)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSL) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSL = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSL = nil
	}

	// try to unmarshal data into ListUnconfirmedTransactionsByAddressRIBSZ
	err = newStrictDecoder(data).Decode(&dst.ListUnconfirmedTransactionsByAddressRIBSZ)
	if err == nil {
		jsonListUnconfirmedTransactionsByAddressRIBSZ, _ := json.Marshal(dst.ListUnconfirmedTransactionsByAddressRIBSZ)
		if string(jsonListUnconfirmedTransactionsByAddressRIBSZ) == "{}" { // empty struct
			dst.ListUnconfirmedTransactionsByAddressRIBSZ = nil
		} else {
			match++
		}
	} else {
		dst.ListUnconfirmedTransactionsByAddressRIBSZ = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListUnconfirmedTransactionsByAddressRIBSB = nil
		dst.ListUnconfirmedTransactionsByAddressRIBSBC = nil
		dst.ListUnconfirmedTransactionsByAddressRIBSBSC = nil
		dst.ListUnconfirmedTransactionsByAddressRIBSD = nil
		dst.ListUnconfirmedTransactionsByAddressRIBSD2 = nil
		dst.ListUnconfirmedTransactionsByAddressRIBSE = nil
		dst.ListUnconfirmedTransactionsByAddressRIBSEC = nil
		dst.ListUnconfirmedTransactionsByAddressRIBSL = nil
		dst.ListUnconfirmedTransactionsByAddressRIBSZ = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(ListUnconfirmedTransactionsByAddressRIBS)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(ListUnconfirmedTransactionsByAddressRIBS)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListUnconfirmedTransactionsByAddressRIBS) MarshalJSON() ([]byte, error) {
	if src.ListUnconfirmedTransactionsByAddressRIBSB != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSB)
	}

	if src.ListUnconfirmedTransactionsByAddressRIBSBC != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSBC)
	}

	if src.ListUnconfirmedTransactionsByAddressRIBSBSC != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSBSC)
	}

	if src.ListUnconfirmedTransactionsByAddressRIBSD != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSD)
	}

	if src.ListUnconfirmedTransactionsByAddressRIBSD2 != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSD2)
	}

	if src.ListUnconfirmedTransactionsByAddressRIBSE != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSE)
	}

	if src.ListUnconfirmedTransactionsByAddressRIBSEC != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSEC)
	}

	if src.ListUnconfirmedTransactionsByAddressRIBSL != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSL)
	}

	if src.ListUnconfirmedTransactionsByAddressRIBSZ != nil {
		return json.Marshal(&src.ListUnconfirmedTransactionsByAddressRIBSZ)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListUnconfirmedTransactionsByAddressRIBS) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ListUnconfirmedTransactionsByAddressRIBSB != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSB
	}

	if obj.ListUnconfirmedTransactionsByAddressRIBSBC != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSBC
	}

	if obj.ListUnconfirmedTransactionsByAddressRIBSBSC != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSBSC
	}

	if obj.ListUnconfirmedTransactionsByAddressRIBSD != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSD
	}

	if obj.ListUnconfirmedTransactionsByAddressRIBSD2 != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSD2
	}

	if obj.ListUnconfirmedTransactionsByAddressRIBSE != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSE
	}

	if obj.ListUnconfirmedTransactionsByAddressRIBSEC != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSEC
	}

	if obj.ListUnconfirmedTransactionsByAddressRIBSL != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSL
	}

	if obj.ListUnconfirmedTransactionsByAddressRIBSZ != nil {
		return obj.ListUnconfirmedTransactionsByAddressRIBSZ
	}

	// all schemas are nil
	return nil
}

type NullableListUnconfirmedTransactionsByAddressRIBS struct {
	value *ListUnconfirmedTransactionsByAddressRIBS
	isSet bool
}

func (v NullableListUnconfirmedTransactionsByAddressRIBS) Get() *ListUnconfirmedTransactionsByAddressRIBS {
	return v.value
}

func (v *NullableListUnconfirmedTransactionsByAddressRIBS) Set(val *ListUnconfirmedTransactionsByAddressRIBS) {
	v.value = val
	v.isSet = true
}

func (v NullableListUnconfirmedTransactionsByAddressRIBS) IsSet() bool {
	return v.isSet
}

func (v *NullableListUnconfirmedTransactionsByAddressRIBS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUnconfirmedTransactionsByAddressRIBS(val *ListUnconfirmedTransactionsByAddressRIBS) *NullableListUnconfirmedTransactionsByAddressRIBS {
	return &NullableListUnconfirmedTransactionsByAddressRIBS{value: val, isSet: true}
}

func (v NullableListUnconfirmedTransactionsByAddressRIBS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUnconfirmedTransactionsByAddressRIBS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


