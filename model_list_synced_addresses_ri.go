/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListSyncedAddressesRI struct for ListSyncedAddressesRI
type ListSyncedAddressesRI struct {
	// Represents the address.
	Address string `json:"address"`
	// Represents the index position of the transaction in the specific block.
	Index int64 `json:"index"`
}

// NewListSyncedAddressesRI instantiates a new ListSyncedAddressesRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSyncedAddressesRI(address string, index int64) *ListSyncedAddressesRI {
	this := ListSyncedAddressesRI{}
	this.Address = address
	this.Index = index
	return &this
}

// NewListSyncedAddressesRIWithDefaults instantiates a new ListSyncedAddressesRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSyncedAddressesRIWithDefaults() *ListSyncedAddressesRI {
	this := ListSyncedAddressesRI{}
	return &this
}

// GetAddress returns the Address field value
func (o *ListSyncedAddressesRI) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *ListSyncedAddressesRI) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *ListSyncedAddressesRI) SetAddress(v string) {
	o.Address = v
}

// GetIndex returns the Index field value
func (o *ListSyncedAddressesRI) GetIndex() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *ListSyncedAddressesRI) GetIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *ListSyncedAddressesRI) SetIndex(v int64) {
	o.Index = v
}

func (o ListSyncedAddressesRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["index"] = o.Index
	}
	return json.Marshal(toSerialize)
}

type NullableListSyncedAddressesRI struct {
	value *ListSyncedAddressesRI
	isSet bool
}

func (v NullableListSyncedAddressesRI) Get() *ListSyncedAddressesRI {
	return v.value
}

func (v *NullableListSyncedAddressesRI) Set(val *ListSyncedAddressesRI) {
	v.value = val
	v.isSet = true
}

func (v NullableListSyncedAddressesRI) IsSet() bool {
	return v.isSet
}

func (v *NullableListSyncedAddressesRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSyncedAddressesRI(val *ListSyncedAddressesRI) *NullableListSyncedAddressesRI {
	return &NullableListSyncedAddressesRI{value: val, isSet: true}
}

func (v NullableListSyncedAddressesRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSyncedAddressesRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


