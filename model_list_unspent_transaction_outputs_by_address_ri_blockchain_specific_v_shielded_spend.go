/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend struct for ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend
type ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend struct {
	// Defines a Merkle tree root of a note commitment tree which uniquely identifies a note commitment tree state given the assumed security properties of the Merkle treeâ€™s hash function.
	Anchor string `json:"anchor"`
	// Defines a value commitment to the value of the input note.
	Cv string `json:"cv"`
	// Represents a sequence of nullifiers of the input notes.
	Nullifier string `json:"nullifier"`
	// Represents the proof.
	Proof string `json:"proof"`
	// Represents the randomized validating key for spendAuthSig.
	Rk string `json:"rk"`
	// Used to prove knowledge of the spending key authorizing spending of an input note.
	SpendAuthSig string `json:"spendAuthSig"`
}

// NewListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend instantiates a new ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend(anchor string, cv string, nullifier string, proof string, rk string, spendAuthSig string) *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend {
	this := ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend{}
	this.Anchor = anchor
	this.Cv = cv
	this.Nullifier = nullifier
	this.Proof = proof
	this.Rk = rk
	this.SpendAuthSig = spendAuthSig
	return &this
}

// NewListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpendWithDefaults instantiates a new ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpendWithDefaults() *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend {
	this := ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend{}
	return &this
}

// GetAnchor returns the Anchor field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetAnchor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Anchor
}

// GetAnchorOk returns a tuple with the Anchor field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetAnchorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Anchor, true
}

// SetAnchor sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) SetAnchor(v string) {
	o.Anchor = v
}

// GetCv returns the Cv field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetCv() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cv
}

// GetCvOk returns a tuple with the Cv field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetCvOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cv, true
}

// SetCv sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) SetCv(v string) {
	o.Cv = v
}

// GetNullifier returns the Nullifier field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetNullifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nullifier
}

// GetNullifierOk returns a tuple with the Nullifier field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetNullifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Nullifier, true
}

// SetNullifier sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) SetNullifier(v string) {
	o.Nullifier = v
}

// GetProof returns the Proof field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetProof() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Proof
}

// GetProofOk returns a tuple with the Proof field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetProofOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Proof, true
}

// SetProof sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) SetProof(v string) {
	o.Proof = v
}

// GetRk returns the Rk field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetRk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rk
}

// GetRkOk returns a tuple with the Rk field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetRkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rk, true
}

// SetRk sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) SetRk(v string) {
	o.Rk = v
}

// GetSpendAuthSig returns the SpendAuthSig field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetSpendAuthSig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpendAuthSig
}

// GetSpendAuthSigOk returns a tuple with the SpendAuthSig field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) GetSpendAuthSigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SpendAuthSig, true
}

// SetSpendAuthSig sets field value
func (o *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) SetSpendAuthSig(v string) {
	o.SpendAuthSig = v
}

func (o ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["anchor"] = o.Anchor
	}
	if true {
		toSerialize["cv"] = o.Cv
	}
	if true {
		toSerialize["nullifier"] = o.Nullifier
	}
	if true {
		toSerialize["proof"] = o.Proof
	}
	if true {
		toSerialize["rk"] = o.Rk
	}
	if true {
		toSerialize["spendAuthSig"] = o.SpendAuthSig
	}
	return json.Marshal(toSerialize)
}

type NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend struct {
	value *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend
	isSet bool
}

func (v NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) Get() *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend {
	return v.value
}

func (v *NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) Set(val *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) {
	v.value = val
	v.isSet = true
}

func (v NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) IsSet() bool {
	return v.isSet
}

func (v *NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend(val *ListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) *NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend {
	return &NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend{value: val, isSet: true}
}

func (v NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUnspentTransactionOutputsByAddressRIBlockchainSpecificVShieldedSpend) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


