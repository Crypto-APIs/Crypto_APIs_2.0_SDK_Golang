/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListWalletTransactionsRINonFungibleTokensInner struct for ListWalletTransactionsRINonFungibleTokensInner
type ListWalletTransactionsRINonFungibleTokensInner struct {
	// Defines the tokens' converted amount value.
	ConvertedAmount string `json:"convertedAmount"`
	// Represents token's exchange rate unit.
	ExchangeRateUnit string `json:"exchangeRateUnit"`
	// Defines the token's name as a string.
	Name string `json:"name"`
	// Defines the address to which the recipient receives the transferred tokens.
	Recipient string `json:"recipient"`
	// Defines the address from which the sender transfers tokens.
	Sender string `json:"sender"`
	// Defines the symbol of the non-fungible tokens.
	Symbol string `json:"symbol"`
	// Represents tokens' unique identifier.
	TokenId string `json:"tokenId"`
	// Defines the specific token type.
	Type string `json:"type"`
}

// NewListWalletTransactionsRINonFungibleTokensInner instantiates a new ListWalletTransactionsRINonFungibleTokensInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWalletTransactionsRINonFungibleTokensInner(convertedAmount string, exchangeRateUnit string, name string, recipient string, sender string, symbol string, tokenId string, type_ string) *ListWalletTransactionsRINonFungibleTokensInner {
	this := ListWalletTransactionsRINonFungibleTokensInner{}
	this.ConvertedAmount = convertedAmount
	this.ExchangeRateUnit = exchangeRateUnit
	this.Name = name
	this.Recipient = recipient
	this.Sender = sender
	this.Symbol = symbol
	this.TokenId = tokenId
	this.Type = type_
	return &this
}

// NewListWalletTransactionsRINonFungibleTokensInnerWithDefaults instantiates a new ListWalletTransactionsRINonFungibleTokensInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWalletTransactionsRINonFungibleTokensInnerWithDefaults() *ListWalletTransactionsRINonFungibleTokensInner {
	this := ListWalletTransactionsRINonFungibleTokensInner{}
	return &this
}

// GetConvertedAmount returns the ConvertedAmount field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetConvertedAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConvertedAmount
}

// GetConvertedAmountOk returns a tuple with the ConvertedAmount field value
// and a boolean to check if the value has been set.
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetConvertedAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConvertedAmount, true
}

// SetConvertedAmount sets field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) SetConvertedAmount(v string) {
	o.ConvertedAmount = v
}

// GetExchangeRateUnit returns the ExchangeRateUnit field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetExchangeRateUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExchangeRateUnit
}

// GetExchangeRateUnitOk returns a tuple with the ExchangeRateUnit field value
// and a boolean to check if the value has been set.
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetExchangeRateUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeRateUnit, true
}

// SetExchangeRateUnit sets field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) SetExchangeRateUnit(v string) {
	o.ExchangeRateUnit = v
}

// GetName returns the Name field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) SetName(v string) {
	o.Name = v
}

// GetRecipient returns the Recipient field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) SetRecipient(v string) {
	o.Recipient = v
}

// GetSender returns the Sender field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetSender() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) SetSender(v string) {
	o.Sender = v
}

// GetSymbol returns the Symbol field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) SetSymbol(v string) {
	o.Symbol = v
}

// GetTokenId returns the TokenId field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) SetTokenId(v string) {
	o.TokenId = v
}

// GetType returns the Type field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ListWalletTransactionsRINonFungibleTokensInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ListWalletTransactionsRINonFungibleTokensInner) SetType(v string) {
	o.Type = v
}

func (o ListWalletTransactionsRINonFungibleTokensInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["convertedAmount"] = o.ConvertedAmount
	}
	if true {
		toSerialize["exchangeRateUnit"] = o.ExchangeRateUnit
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["sender"] = o.Sender
	}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableListWalletTransactionsRINonFungibleTokensInner struct {
	value *ListWalletTransactionsRINonFungibleTokensInner
	isSet bool
}

func (v NullableListWalletTransactionsRINonFungibleTokensInner) Get() *ListWalletTransactionsRINonFungibleTokensInner {
	return v.value
}

func (v *NullableListWalletTransactionsRINonFungibleTokensInner) Set(val *ListWalletTransactionsRINonFungibleTokensInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListWalletTransactionsRINonFungibleTokensInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListWalletTransactionsRINonFungibleTokensInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWalletTransactionsRINonFungibleTokensInner(val *ListWalletTransactionsRINonFungibleTokensInner) *NullableListWalletTransactionsRINonFungibleTokensInner {
	return &NullableListWalletTransactionsRINonFungibleTokensInner{value: val, isSet: true}
}

func (v NullableListWalletTransactionsRINonFungibleTokensInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWalletTransactionsRINonFungibleTokensInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


