/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateAutomaticCoinsForwardingRequestBodyData struct for CreateAutomaticCoinsForwardingRequestBodyData
type CreateAutomaticCoinsForwardingRequestBodyData struct {
	Item CreateAutomaticCoinsForwardingRequestBodyDataItem `json:"item"`
}

// NewCreateAutomaticCoinsForwardingRequestBodyData instantiates a new CreateAutomaticCoinsForwardingRequestBodyData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAutomaticCoinsForwardingRequestBodyData(item CreateAutomaticCoinsForwardingRequestBodyDataItem) *CreateAutomaticCoinsForwardingRequestBodyData {
	this := CreateAutomaticCoinsForwardingRequestBodyData{}
	this.Item = item
	return &this
}

// NewCreateAutomaticCoinsForwardingRequestBodyDataWithDefaults instantiates a new CreateAutomaticCoinsForwardingRequestBodyData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAutomaticCoinsForwardingRequestBodyDataWithDefaults() *CreateAutomaticCoinsForwardingRequestBodyData {
	this := CreateAutomaticCoinsForwardingRequestBodyData{}
	return &this
}

// GetItem returns the Item field value
func (o *CreateAutomaticCoinsForwardingRequestBodyData) GetItem() CreateAutomaticCoinsForwardingRequestBodyDataItem {
	if o == nil {
		var ret CreateAutomaticCoinsForwardingRequestBodyDataItem
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *CreateAutomaticCoinsForwardingRequestBodyData) GetItemOk() (*CreateAutomaticCoinsForwardingRequestBodyDataItem, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *CreateAutomaticCoinsForwardingRequestBodyData) SetItem(v CreateAutomaticCoinsForwardingRequestBodyDataItem) {
	o.Item = v
}

func (o CreateAutomaticCoinsForwardingRequestBodyData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["item"] = o.Item
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAutomaticCoinsForwardingRequestBodyData struct {
	value *CreateAutomaticCoinsForwardingRequestBodyData
	isSet bool
}

func (v NullableCreateAutomaticCoinsForwardingRequestBodyData) Get() *CreateAutomaticCoinsForwardingRequestBodyData {
	return v.value
}

func (v *NullableCreateAutomaticCoinsForwardingRequestBodyData) Set(val *CreateAutomaticCoinsForwardingRequestBodyData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAutomaticCoinsForwardingRequestBodyData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAutomaticCoinsForwardingRequestBodyData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAutomaticCoinsForwardingRequestBodyData(val *CreateAutomaticCoinsForwardingRequestBodyData) *NullableCreateAutomaticCoinsForwardingRequestBodyData {
	return &NullableCreateAutomaticCoinsForwardingRequestBodyData{value: val, isSet: true}
}

func (v NullableCreateAutomaticCoinsForwardingRequestBodyData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAutomaticCoinsForwardingRequestBodyData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


