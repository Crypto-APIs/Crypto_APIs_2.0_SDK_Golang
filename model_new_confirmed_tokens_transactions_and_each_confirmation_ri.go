/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// NewConfirmedTokensTransactionsAndEachConfirmationRI struct for NewConfirmedTokensTransactionsAndEachConfirmationRI
type NewConfirmedTokensTransactionsAndEachConfirmationRI struct {
	// Represents the address of the transaction, per which the result is returned.
	Address string `json:"address"`
	// Represents the URL that is set by the customer where the callback will be received at. The callback notification will be received only if and when the event occurs.
	CallbackUrl string `json:"callbackUrl"`
	// Defines the specific time/date when the subscription was created in Unix Timestamp.
	CreatedTimestamp int32 `json:"createdTimestamp"`
	// Defines the type of the specific event available for the customer to subscribe to for callback notification.
	EventType string `json:"eventType"`
	// Represents a unique ID used to reference the specific callback subscription.
	ReferenceId string `json:"referenceId"`
}

// NewNewConfirmedTokensTransactionsAndEachConfirmationRI instantiates a new NewConfirmedTokensTransactionsAndEachConfirmationRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewConfirmedTokensTransactionsAndEachConfirmationRI(address string, callbackUrl string, createdTimestamp int32, eventType string, referenceId string) *NewConfirmedTokensTransactionsAndEachConfirmationRI {
	this := NewConfirmedTokensTransactionsAndEachConfirmationRI{}
	this.Address = address
	this.CallbackUrl = callbackUrl
	this.CreatedTimestamp = createdTimestamp
	this.EventType = eventType
	this.ReferenceId = referenceId
	return &this
}

// NewNewConfirmedTokensTransactionsAndEachConfirmationRIWithDefaults instantiates a new NewConfirmedTokensTransactionsAndEachConfirmationRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewConfirmedTokensTransactionsAndEachConfirmationRIWithDefaults() *NewConfirmedTokensTransactionsAndEachConfirmationRI {
	this := NewConfirmedTokensTransactionsAndEachConfirmationRI{}
	return &this
}

// GetAddress returns the Address field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) SetAddress(v string) {
	o.Address = v
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetCallbackUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetCreatedTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = v
}

// GetEventType returns the EventType field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetEventTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) SetEventType(v string) {
	o.EventType = v
}

// GetReferenceId returns the ReferenceId field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) GetReferenceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *NewConfirmedTokensTransactionsAndEachConfirmationRI) SetReferenceId(v string) {
	o.ReferenceId = v
}

func (o NewConfirmedTokensTransactionsAndEachConfirmationRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if true {
		toSerialize["createdTimestamp"] = o.CreatedTimestamp
	}
	if true {
		toSerialize["eventType"] = o.EventType
	}
	if true {
		toSerialize["referenceId"] = o.ReferenceId
	}
	return json.Marshal(toSerialize)
}

type NullableNewConfirmedTokensTransactionsAndEachConfirmationRI struct {
	value *NewConfirmedTokensTransactionsAndEachConfirmationRI
	isSet bool
}

func (v NullableNewConfirmedTokensTransactionsAndEachConfirmationRI) Get() *NewConfirmedTokensTransactionsAndEachConfirmationRI {
	return v.value
}

func (v *NullableNewConfirmedTokensTransactionsAndEachConfirmationRI) Set(val *NewConfirmedTokensTransactionsAndEachConfirmationRI) {
	v.value = val
	v.isSet = true
}

func (v NullableNewConfirmedTokensTransactionsAndEachConfirmationRI) IsSet() bool {
	return v.isSet
}

func (v *NullableNewConfirmedTokensTransactionsAndEachConfirmationRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewConfirmedTokensTransactionsAndEachConfirmationRI(val *NewConfirmedTokensTransactionsAndEachConfirmationRI) *NullableNewConfirmedTokensTransactionsAndEachConfirmationRI {
	return &NullableNewConfirmedTokensTransactionsAndEachConfirmationRI{value: val, isSet: true}
}

func (v NullableNewConfirmedTokensTransactionsAndEachConfirmationRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewConfirmedTokensTransactionsAndEachConfirmationRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


