/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken Bitcoin Omni Token
type CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken struct {
	// Defines the `propertyID` from Omni layer.
	PropertyId string `json:"propertyId"`
}

// NewCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken instantiates a new CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken(propertyId string) *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken {
	this := CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken{}
	this.PropertyId = propertyId
	return &this
}

// NewCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniTokenWithDefaults instantiates a new CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniTokenWithDefaults() *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken {
	this := CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken{}
	return &this
}

// GetPropertyId returns the PropertyId field value
func (o *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) GetPropertyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value
// and a boolean to check if the value has been set.
func (o *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) GetPropertyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PropertyId, true
}

// SetPropertyId sets field value
func (o *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) SetPropertyId(v string) {
	o.PropertyId = v
}

func (o CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["propertyId"] = o.PropertyId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken struct {
	value *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken
	isSet bool
}

func (v NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) Get() *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken {
	return v.value
}

func (v *NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) Set(val *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken(val *CreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) *NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken {
	return &NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken{value: val, isSet: true}
}

func (v NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTokensTransactionRequestFromAddressRITokenTypeSpecificDataBitcoinOmniToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


