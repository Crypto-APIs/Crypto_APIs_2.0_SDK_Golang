/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// NewConfirmedInternalTransactionsRBDataItem struct for NewConfirmedInternalTransactionsRBDataItem
type NewConfirmedInternalTransactionsRBDataItem struct {
	// Defines the specific address of the internal transaction.
	Address string `json:"address"`
	// Flag that permits or denies creation of duplicates
	AllowDuplicates bool `json:"allowDuplicates"`
	// Represents the Secret Key value provided by the customer. This field is used for security purposes during the callback notification, in order to prove the sender of the callback as Crypto APIs. For more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security).
	CallbackSecretKey string `json:"callbackSecretKey"`
	// Represents the URL that is set by the customer where the callback will be received at. The callback notification will be received only if and when the event occurs.
	CallbackUrl string `json:"callbackUrl"`
}

// NewNewConfirmedInternalTransactionsRBDataItem instantiates a new NewConfirmedInternalTransactionsRBDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewConfirmedInternalTransactionsRBDataItem(address string, allowDuplicates bool, callbackSecretKey string, callbackUrl string) *NewConfirmedInternalTransactionsRBDataItem {
	this := NewConfirmedInternalTransactionsRBDataItem{}
	this.Address = address
	this.AllowDuplicates = allowDuplicates
	this.CallbackSecretKey = callbackSecretKey
	this.CallbackUrl = callbackUrl
	return &this
}

// NewNewConfirmedInternalTransactionsRBDataItemWithDefaults instantiates a new NewConfirmedInternalTransactionsRBDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewConfirmedInternalTransactionsRBDataItemWithDefaults() *NewConfirmedInternalTransactionsRBDataItem {
	this := NewConfirmedInternalTransactionsRBDataItem{}
	var allowDuplicates bool = false
	this.AllowDuplicates = allowDuplicates
	return &this
}

// GetAddress returns the Address field value
func (o *NewConfirmedInternalTransactionsRBDataItem) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsRBDataItem) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *NewConfirmedInternalTransactionsRBDataItem) SetAddress(v string) {
	o.Address = v
}

// GetAllowDuplicates returns the AllowDuplicates field value
func (o *NewConfirmedInternalTransactionsRBDataItem) GetAllowDuplicates() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowDuplicates
}

// GetAllowDuplicatesOk returns a tuple with the AllowDuplicates field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsRBDataItem) GetAllowDuplicatesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AllowDuplicates, true
}

// SetAllowDuplicates sets field value
func (o *NewConfirmedInternalTransactionsRBDataItem) SetAllowDuplicates(v bool) {
	o.AllowDuplicates = v
}

// GetCallbackSecretKey returns the CallbackSecretKey field value
func (o *NewConfirmedInternalTransactionsRBDataItem) GetCallbackSecretKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackSecretKey
}

// GetCallbackSecretKeyOk returns a tuple with the CallbackSecretKey field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsRBDataItem) GetCallbackSecretKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CallbackSecretKey, true
}

// SetCallbackSecretKey sets field value
func (o *NewConfirmedInternalTransactionsRBDataItem) SetCallbackSecretKey(v string) {
	o.CallbackSecretKey = v
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *NewConfirmedInternalTransactionsRBDataItem) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsRBDataItem) GetCallbackUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *NewConfirmedInternalTransactionsRBDataItem) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

func (o NewConfirmedInternalTransactionsRBDataItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["allowDuplicates"] = o.AllowDuplicates
	}
	if true {
		toSerialize["callbackSecretKey"] = o.CallbackSecretKey
	}
	if true {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	return json.Marshal(toSerialize)
}

type NullableNewConfirmedInternalTransactionsRBDataItem struct {
	value *NewConfirmedInternalTransactionsRBDataItem
	isSet bool
}

func (v NullableNewConfirmedInternalTransactionsRBDataItem) Get() *NewConfirmedInternalTransactionsRBDataItem {
	return v.value
}

func (v *NullableNewConfirmedInternalTransactionsRBDataItem) Set(val *NewConfirmedInternalTransactionsRBDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullableNewConfirmedInternalTransactionsRBDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullableNewConfirmedInternalTransactionsRBDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewConfirmedInternalTransactionsRBDataItem(val *NewConfirmedInternalTransactionsRBDataItem) *NullableNewConfirmedInternalTransactionsRBDataItem {
	return &NullableNewConfirmedInternalTransactionsRBDataItem{value: val, isSet: true}
}

func (v NullableNewConfirmedInternalTransactionsRBDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewConfirmedInternalTransactionsRBDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


