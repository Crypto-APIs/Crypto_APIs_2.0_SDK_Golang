/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListCoinsForwardingAutomationsRI struct for ListCoinsForwardingAutomationsRI
type ListCoinsForwardingAutomationsRI struct {
	// Represents the URL that is set by the customer where the callback will be received at. The callback notification will be received only if and when the event occurs. `We support ONLY httpS type of protocol`.
	CallbackUrl string `json:"callbackUrl"`
	// Represents the total count of the transaction confirmations before triggering the event.
	ConfirmationsCountTrigger int32 `json:"confirmationsCountTrigger"`
	// Defines the specific time/date when the automatic forwarding was created in Unix Timestamp.
	CreatedTimestamp int32 `json:"createdTimestamp"`
	// Represents the fee priority of the automation, whether it is \"SLOW\", \"STANDARD\" OR \"FAST\".
	FeePriority string `json:"feePriority"`
	// Represents the hash of the address that forwards the currency.
	FromAddress string `json:"fromAddress"`
	// Represents the minimum transfer amount of the currency in the `fromAddress` that can be allowed for an automatic forwarding.
	MinimumTransferAmount string `json:"minimumTransferAmount"`
	// Represents a unique ID used to reference the specific forwarding automation.
	ReferenceId string `json:"referenceId"`
	// Represents the hash of the address the currency is forwarded to.
	ToAddress string `json:"toAddress"`
}

// NewListCoinsForwardingAutomationsRI instantiates a new ListCoinsForwardingAutomationsRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCoinsForwardingAutomationsRI(callbackUrl string, confirmationsCountTrigger int32, createdTimestamp int32, feePriority string, fromAddress string, minimumTransferAmount string, referenceId string, toAddress string) *ListCoinsForwardingAutomationsRI {
	this := ListCoinsForwardingAutomationsRI{}
	this.CallbackUrl = callbackUrl
	this.ConfirmationsCountTrigger = confirmationsCountTrigger
	this.CreatedTimestamp = createdTimestamp
	this.FeePriority = feePriority
	this.FromAddress = fromAddress
	this.MinimumTransferAmount = minimumTransferAmount
	this.ReferenceId = referenceId
	this.ToAddress = toAddress
	return &this
}

// NewListCoinsForwardingAutomationsRIWithDefaults instantiates a new ListCoinsForwardingAutomationsRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCoinsForwardingAutomationsRIWithDefaults() *ListCoinsForwardingAutomationsRI {
	this := ListCoinsForwardingAutomationsRI{}
	return &this
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *ListCoinsForwardingAutomationsRI) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *ListCoinsForwardingAutomationsRI) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *ListCoinsForwardingAutomationsRI) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

// GetConfirmationsCountTrigger returns the ConfirmationsCountTrigger field value
func (o *ListCoinsForwardingAutomationsRI) GetConfirmationsCountTrigger() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConfirmationsCountTrigger
}

// GetConfirmationsCountTriggerOk returns a tuple with the ConfirmationsCountTrigger field value
// and a boolean to check if the value has been set.
func (o *ListCoinsForwardingAutomationsRI) GetConfirmationsCountTriggerOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfirmationsCountTrigger, true
}

// SetConfirmationsCountTrigger sets field value
func (o *ListCoinsForwardingAutomationsRI) SetConfirmationsCountTrigger(v int32) {
	o.ConfirmationsCountTrigger = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *ListCoinsForwardingAutomationsRI) GetCreatedTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *ListCoinsForwardingAutomationsRI) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *ListCoinsForwardingAutomationsRI) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = v
}

// GetFeePriority returns the FeePriority field value
func (o *ListCoinsForwardingAutomationsRI) GetFeePriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeePriority
}

// GetFeePriorityOk returns a tuple with the FeePriority field value
// and a boolean to check if the value has been set.
func (o *ListCoinsForwardingAutomationsRI) GetFeePriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeePriority, true
}

// SetFeePriority sets field value
func (o *ListCoinsForwardingAutomationsRI) SetFeePriority(v string) {
	o.FeePriority = v
}

// GetFromAddress returns the FromAddress field value
func (o *ListCoinsForwardingAutomationsRI) GetFromAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value
// and a boolean to check if the value has been set.
func (o *ListCoinsForwardingAutomationsRI) GetFromAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromAddress, true
}

// SetFromAddress sets field value
func (o *ListCoinsForwardingAutomationsRI) SetFromAddress(v string) {
	o.FromAddress = v
}

// GetMinimumTransferAmount returns the MinimumTransferAmount field value
func (o *ListCoinsForwardingAutomationsRI) GetMinimumTransferAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinimumTransferAmount
}

// GetMinimumTransferAmountOk returns a tuple with the MinimumTransferAmount field value
// and a boolean to check if the value has been set.
func (o *ListCoinsForwardingAutomationsRI) GetMinimumTransferAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinimumTransferAmount, true
}

// SetMinimumTransferAmount sets field value
func (o *ListCoinsForwardingAutomationsRI) SetMinimumTransferAmount(v string) {
	o.MinimumTransferAmount = v
}

// GetReferenceId returns the ReferenceId field value
func (o *ListCoinsForwardingAutomationsRI) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *ListCoinsForwardingAutomationsRI) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *ListCoinsForwardingAutomationsRI) SetReferenceId(v string) {
	o.ReferenceId = v
}

// GetToAddress returns the ToAddress field value
func (o *ListCoinsForwardingAutomationsRI) GetToAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value
// and a boolean to check if the value has been set.
func (o *ListCoinsForwardingAutomationsRI) GetToAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAddress, true
}

// SetToAddress sets field value
func (o *ListCoinsForwardingAutomationsRI) SetToAddress(v string) {
	o.ToAddress = v
}

func (o ListCoinsForwardingAutomationsRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if true {
		toSerialize["confirmationsCountTrigger"] = o.ConfirmationsCountTrigger
	}
	if true {
		toSerialize["createdTimestamp"] = o.CreatedTimestamp
	}
	if true {
		toSerialize["feePriority"] = o.FeePriority
	}
	if true {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if true {
		toSerialize["minimumTransferAmount"] = o.MinimumTransferAmount
	}
	if true {
		toSerialize["referenceId"] = o.ReferenceId
	}
	if true {
		toSerialize["toAddress"] = o.ToAddress
	}
	return json.Marshal(toSerialize)
}

type NullableListCoinsForwardingAutomationsRI struct {
	value *ListCoinsForwardingAutomationsRI
	isSet bool
}

func (v NullableListCoinsForwardingAutomationsRI) Get() *ListCoinsForwardingAutomationsRI {
	return v.value
}

func (v *NullableListCoinsForwardingAutomationsRI) Set(val *ListCoinsForwardingAutomationsRI) {
	v.value = val
	v.isSet = true
}

func (v NullableListCoinsForwardingAutomationsRI) IsSet() bool {
	return v.isSet
}

func (v *NullableListCoinsForwardingAutomationsRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCoinsForwardingAutomationsRI(val *ListCoinsForwardingAutomationsRI) *NullableListCoinsForwardingAutomationsRI {
	return &NullableListCoinsForwardingAutomationsRI{value: val, isSet: true}
}

func (v NullableListCoinsForwardingAutomationsRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCoinsForwardingAutomationsRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


