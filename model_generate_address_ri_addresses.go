/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// GenerateAddressRIAddresses struct for GenerateAddressRIAddresses
type GenerateAddressRIAddresses struct {
	// Represents the specific address that will be generated.
	Address string `json:"address"`
	// Defines the form of transaction that is used. Keep in mind that we support more than one type of formats for example: p2pkh p2sh p2wpkh etc. and they are generated simultaneously in the response of the Generate Address endpoint, depending on the blockchain and network that has been chosen. For more information about supported formats - please check \"What we support\" section
	Format string `json:"format"`
}

// NewGenerateAddressRIAddresses instantiates a new GenerateAddressRIAddresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateAddressRIAddresses(address string, format string) *GenerateAddressRIAddresses {
	this := GenerateAddressRIAddresses{}
	this.Address = address
	this.Format = format
	return &this
}

// NewGenerateAddressRIAddressesWithDefaults instantiates a new GenerateAddressRIAddresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateAddressRIAddressesWithDefaults() *GenerateAddressRIAddresses {
	this := GenerateAddressRIAddresses{}
	return &this
}

// GetAddress returns the Address field value
func (o *GenerateAddressRIAddresses) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *GenerateAddressRIAddresses) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *GenerateAddressRIAddresses) SetAddress(v string) {
	o.Address = v
}

// GetFormat returns the Format field value
func (o *GenerateAddressRIAddresses) GetFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *GenerateAddressRIAddresses) GetFormatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *GenerateAddressRIAddresses) SetFormat(v string) {
	o.Format = v
}

func (o GenerateAddressRIAddresses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["format"] = o.Format
	}
	return json.Marshal(toSerialize)
}

type NullableGenerateAddressRIAddresses struct {
	value *GenerateAddressRIAddresses
	isSet bool
}

func (v NullableGenerateAddressRIAddresses) Get() *GenerateAddressRIAddresses {
	return v.value
}

func (v *NullableGenerateAddressRIAddresses) Set(val *GenerateAddressRIAddresses) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateAddressRIAddresses) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateAddressRIAddresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateAddressRIAddresses(val *GenerateAddressRIAddresses) *NullableGenerateAddressRIAddresses {
	return &NullableGenerateAddressRIAddresses{value: val, isSet: true}
}

func (v NullableGenerateAddressRIAddresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateAddressRIAddresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


