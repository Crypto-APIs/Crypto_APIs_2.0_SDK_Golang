/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// NewConfirmedInternalTransactionsForSpecificAmountRI struct for NewConfirmedInternalTransactionsForSpecificAmountRI
type NewConfirmedInternalTransactionsForSpecificAmountRI struct {
	// Represents a specific amount of coins after which the system have to send a callback to customers' callbackUrl.
	AmountHigherThan int64 `json:"amountHigherThan"`
	// Represents the Secret Key value provided by the customer. This field is used for security purposes during the callback notification, in order to prove the sender of the callback as Crypto APIs. For more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security).
	CallbackSecretKey *string `json:"callbackSecretKey,omitempty"`
	// Represents the URL that is set by the customer where the callback will be received at. The callback notification will be received only if and when the event occurs. `We support ONLY httpS type of protocol`.
	CallbackUrl string `json:"callbackUrl"`
	// Defines the specific time/date when the subscription was created in Unix Timestamp.
	CreatedTimestamp int32 `json:"createdTimestamp"`
	// Defines the type of the specific event available for the customer to subscribe to for callback notification.
	EventType string `json:"eventType"`
	// Defines whether the subscription is active or not. Set as boolean.
	IsActive bool `json:"isActive"`
	// Represents a unique ID used to reference the specific callback subscription.
	ReferenceId string `json:"referenceId"`
}

// NewNewConfirmedInternalTransactionsForSpecificAmountRI instantiates a new NewConfirmedInternalTransactionsForSpecificAmountRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewConfirmedInternalTransactionsForSpecificAmountRI(amountHigherThan int64, callbackUrl string, createdTimestamp int32, eventType string, isActive bool, referenceId string) *NewConfirmedInternalTransactionsForSpecificAmountRI {
	this := NewConfirmedInternalTransactionsForSpecificAmountRI{}
	this.AmountHigherThan = amountHigherThan
	this.CallbackUrl = callbackUrl
	this.CreatedTimestamp = createdTimestamp
	this.EventType = eventType
	this.IsActive = isActive
	this.ReferenceId = referenceId
	return &this
}

// NewNewConfirmedInternalTransactionsForSpecificAmountRIWithDefaults instantiates a new NewConfirmedInternalTransactionsForSpecificAmountRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewConfirmedInternalTransactionsForSpecificAmountRIWithDefaults() *NewConfirmedInternalTransactionsForSpecificAmountRI {
	this := NewConfirmedInternalTransactionsForSpecificAmountRI{}
	return &this
}

// GetAmountHigherThan returns the AmountHigherThan field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetAmountHigherThan() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AmountHigherThan
}

// GetAmountHigherThanOk returns a tuple with the AmountHigherThan field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetAmountHigherThanOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountHigherThan, true
}

// SetAmountHigherThan sets field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) SetAmountHigherThan(v int64) {
	o.AmountHigherThan = v
}

// GetCallbackSecretKey returns the CallbackSecretKey field value if set, zero value otherwise.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetCallbackSecretKey() string {
	if o == nil || o.CallbackSecretKey == nil {
		var ret string
		return ret
	}
	return *o.CallbackSecretKey
}

// GetCallbackSecretKeyOk returns a tuple with the CallbackSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetCallbackSecretKeyOk() (*string, bool) {
	if o == nil || o.CallbackSecretKey == nil {
		return nil, false
	}
	return o.CallbackSecretKey, true
}

// HasCallbackSecretKey returns a boolean if a field has been set.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) HasCallbackSecretKey() bool {
	if o != nil && o.CallbackSecretKey != nil {
		return true
	}

	return false
}

// SetCallbackSecretKey gets a reference to the given string and assigns it to the CallbackSecretKey field.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) SetCallbackSecretKey(v string) {
	o.CallbackSecretKey = &v
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetCreatedTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = v
}

// GetEventType returns the EventType field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) SetEventType(v string) {
	o.EventType = v
}

// GetIsActive returns the IsActive field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) SetIsActive(v bool) {
	o.IsActive = v
}

// GetReferenceId returns the ReferenceId field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *NewConfirmedInternalTransactionsForSpecificAmountRI) SetReferenceId(v string) {
	o.ReferenceId = v
}

func (o NewConfirmedInternalTransactionsForSpecificAmountRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amountHigherThan"] = o.AmountHigherThan
	}
	if o.CallbackSecretKey != nil {
		toSerialize["callbackSecretKey"] = o.CallbackSecretKey
	}
	if true {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if true {
		toSerialize["createdTimestamp"] = o.CreatedTimestamp
	}
	if true {
		toSerialize["eventType"] = o.EventType
	}
	if true {
		toSerialize["isActive"] = o.IsActive
	}
	if true {
		toSerialize["referenceId"] = o.ReferenceId
	}
	return json.Marshal(toSerialize)
}

type NullableNewConfirmedInternalTransactionsForSpecificAmountRI struct {
	value *NewConfirmedInternalTransactionsForSpecificAmountRI
	isSet bool
}

func (v NullableNewConfirmedInternalTransactionsForSpecificAmountRI) Get() *NewConfirmedInternalTransactionsForSpecificAmountRI {
	return v.value
}

func (v *NullableNewConfirmedInternalTransactionsForSpecificAmountRI) Set(val *NewConfirmedInternalTransactionsForSpecificAmountRI) {
	v.value = val
	v.isSet = true
}

func (v NullableNewConfirmedInternalTransactionsForSpecificAmountRI) IsSet() bool {
	return v.isSet
}

func (v *NullableNewConfirmedInternalTransactionsForSpecificAmountRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewConfirmedInternalTransactionsForSpecificAmountRI(val *NewConfirmedInternalTransactionsForSpecificAmountRI) *NullableNewConfirmedInternalTransactionsForSpecificAmountRI {
	return &NullableNewConfirmedInternalTransactionsForSpecificAmountRI{value: val, isSet: true}
}

func (v NullableNewConfirmedInternalTransactionsForSpecificAmountRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewConfirmedInternalTransactionsForSpecificAmountRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


