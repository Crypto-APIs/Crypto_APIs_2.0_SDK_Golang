/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// GetAddressBalanceRI struct for GetAddressBalanceRI
type GetAddressBalanceRI struct {
	ConfirmedBalance GetAddressBalanceRIConfirmedBalance `json:"confirmedBalance"`
}

// NewGetAddressBalanceRI instantiates a new GetAddressBalanceRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAddressBalanceRI(confirmedBalance GetAddressBalanceRIConfirmedBalance) *GetAddressBalanceRI {
	this := GetAddressBalanceRI{}
	this.ConfirmedBalance = confirmedBalance
	return &this
}

// NewGetAddressBalanceRIWithDefaults instantiates a new GetAddressBalanceRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAddressBalanceRIWithDefaults() *GetAddressBalanceRI {
	this := GetAddressBalanceRI{}
	return &this
}

// GetConfirmedBalance returns the ConfirmedBalance field value
func (o *GetAddressBalanceRI) GetConfirmedBalance() GetAddressBalanceRIConfirmedBalance {
	if o == nil {
		var ret GetAddressBalanceRIConfirmedBalance
		return ret
	}

	return o.ConfirmedBalance
}

// GetConfirmedBalanceOk returns a tuple with the ConfirmedBalance field value
// and a boolean to check if the value has been set.
func (o *GetAddressBalanceRI) GetConfirmedBalanceOk() (*GetAddressBalanceRIConfirmedBalance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfirmedBalance, true
}

// SetConfirmedBalance sets field value
func (o *GetAddressBalanceRI) SetConfirmedBalance(v GetAddressBalanceRIConfirmedBalance) {
	o.ConfirmedBalance = v
}

func (o GetAddressBalanceRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["confirmedBalance"] = o.ConfirmedBalance
	}
	return json.Marshal(toSerialize)
}

type NullableGetAddressBalanceRI struct {
	value *GetAddressBalanceRI
	isSet bool
}

func (v NullableGetAddressBalanceRI) Get() *GetAddressBalanceRI {
	return v.value
}

func (v *NullableGetAddressBalanceRI) Set(val *GetAddressBalanceRI) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAddressBalanceRI) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAddressBalanceRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAddressBalanceRI(val *GetAddressBalanceRI) *NullableGetAddressBalanceRI {
	return &NullableGetAddressBalanceRI{value: val, isSet: true}
}

func (v NullableGetAddressBalanceRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAddressBalanceRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


