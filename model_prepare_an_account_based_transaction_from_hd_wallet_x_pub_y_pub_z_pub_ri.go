/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI struct for PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI
type PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI struct {
	// Representation of the amount of the transaction
	Amount string `json:"amount"`
	// Representation of the data in hex value
	DataHex string `json:"dataHex"`
	// Representation of the derivation index of the xpub address
	DerivationIndex int64 `json:"derivationIndex"`
	Fee PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee `json:"fee"`
	// Represents the sequential running number for an address, starting from 0 for the first transaction. E.g., if the nonce of a transaction is 10, it would be the 11th transaction sent from the sender's address.
	Nonce string `json:"nonce"`
	// Represents a recipient addresses. In account-based protocols like Ethereum there is only one address in this list.
	Recipient string `json:"recipient"`
	// Represents a sender address. In account-based protocols like Ethereum there is only one address in this list.
	Sender string `json:"sender"`
	// Representation of the hash that should be signed.
	SigHash string `json:"sigHash"`
	// Representation of the transaction type
	TransactionType string `json:"transactionType"`
}

// NewPrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI instantiates a new PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI(amount string, dataHex string, derivationIndex int64, fee PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee, nonce string, recipient string, sender string, sigHash string, transactionType string) *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI {
	this := PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI{}
	this.Amount = amount
	this.DataHex = dataHex
	this.DerivationIndex = derivationIndex
	this.Fee = fee
	this.Nonce = nonce
	this.Recipient = recipient
	this.Sender = sender
	this.SigHash = sigHash
	this.TransactionType = transactionType
	return &this
}

// NewPrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIWithDefaults instantiates a new PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIWithDefaults() *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI {
	this := PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI{}
	return &this
}

// GetAmount returns the Amount field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetAmount(v string) {
	o.Amount = v
}

// GetDataHex returns the DataHex field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetDataHex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataHex
}

// GetDataHexOk returns a tuple with the DataHex field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetDataHexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataHex, true
}

// SetDataHex sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetDataHex(v string) {
	o.DataHex = v
}

// GetDerivationIndex returns the DerivationIndex field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetDerivationIndex() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DerivationIndex
}

// GetDerivationIndexOk returns a tuple with the DerivationIndex field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetDerivationIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DerivationIndex, true
}

// SetDerivationIndex sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetDerivationIndex(v int64) {
	o.DerivationIndex = v
}

// GetFee returns the Fee field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetFee() PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee {
	if o == nil {
		var ret PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetFeeOk() (*PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetFee(v PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) {
	o.Fee = v
}

// GetNonce returns the Nonce field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetNonce() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetNonce(v string) {
	o.Nonce = v
}

// GetRecipient returns the Recipient field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetRecipient(v string) {
	o.Recipient = v
}

// GetSender returns the Sender field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetSender() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetSender(v string) {
	o.Sender = v
}

// GetSigHash returns the SigHash field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetSigHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SigHash
}

// GetSigHashOk returns a tuple with the SigHash field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetSigHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SigHash, true
}

// SetSigHash sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetSigHash(v string) {
	o.SigHash = v
}

// GetTransactionType returns the TransactionType field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetTransactionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) GetTransactionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionType, true
}

// SetTransactionType sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) SetTransactionType(v string) {
	o.TransactionType = v
}

func (o PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["dataHex"] = o.DataHex
	}
	if true {
		toSerialize["derivationIndex"] = o.DerivationIndex
	}
	if true {
		toSerialize["fee"] = o.Fee
	}
	if true {
		toSerialize["nonce"] = o.Nonce
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["sender"] = o.Sender
	}
	if true {
		toSerialize["sigHash"] = o.SigHash
	}
	if true {
		toSerialize["transactionType"] = o.TransactionType
	}
	return json.Marshal(toSerialize)
}

type NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI struct {
	value *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI
	isSet bool
}

func (v NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) Get() *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI {
	return v.value
}

func (v *NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) Set(val *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI(val *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) *NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI {
	return &NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI{value: val, isSet: true}
}

func (v NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


