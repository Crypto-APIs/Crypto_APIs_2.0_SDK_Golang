/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateCoinsTransactionRequestFromWalletRBDataItem struct for CreateCoinsTransactionRequestFromWalletRBDataItem
type CreateCoinsTransactionRequestFromWalletRBDataItem struct {
	// Defines the destination of the transaction, whether it is incoming or outgoing.
	Destinations []CreateCoinsTransactionRequestFromWalletRBDataItemDestinations `json:"destinations"`
	// Represents the fee priority of the automation, whether it is \"slow\", \"standard\" or \"fast\".
	FeePriority string `json:"feePriority"`
}

// NewCreateCoinsTransactionRequestFromWalletRBDataItem instantiates a new CreateCoinsTransactionRequestFromWalletRBDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCoinsTransactionRequestFromWalletRBDataItem(destinations []CreateCoinsTransactionRequestFromWalletRBDataItemDestinations, feePriority string) *CreateCoinsTransactionRequestFromWalletRBDataItem {
	this := CreateCoinsTransactionRequestFromWalletRBDataItem{}
	this.Destinations = destinations
	this.FeePriority = feePriority
	return &this
}

// NewCreateCoinsTransactionRequestFromWalletRBDataItemWithDefaults instantiates a new CreateCoinsTransactionRequestFromWalletRBDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCoinsTransactionRequestFromWalletRBDataItemWithDefaults() *CreateCoinsTransactionRequestFromWalletRBDataItem {
	this := CreateCoinsTransactionRequestFromWalletRBDataItem{}
	return &this
}

// GetDestinations returns the Destinations field value
func (o *CreateCoinsTransactionRequestFromWalletRBDataItem) GetDestinations() []CreateCoinsTransactionRequestFromWalletRBDataItemDestinations {
	if o == nil {
		var ret []CreateCoinsTransactionRequestFromWalletRBDataItemDestinations
		return ret
	}

	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRBDataItem) GetDestinationsOk() (*[]CreateCoinsTransactionRequestFromWalletRBDataItemDestinations, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Destinations, true
}

// SetDestinations sets field value
func (o *CreateCoinsTransactionRequestFromWalletRBDataItem) SetDestinations(v []CreateCoinsTransactionRequestFromWalletRBDataItemDestinations) {
	o.Destinations = v
}

// GetFeePriority returns the FeePriority field value
func (o *CreateCoinsTransactionRequestFromWalletRBDataItem) GetFeePriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeePriority
}

// GetFeePriorityOk returns a tuple with the FeePriority field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRBDataItem) GetFeePriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FeePriority, true
}

// SetFeePriority sets field value
func (o *CreateCoinsTransactionRequestFromWalletRBDataItem) SetFeePriority(v string) {
	o.FeePriority = v
}

func (o CreateCoinsTransactionRequestFromWalletRBDataItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destinations"] = o.Destinations
	}
	if true {
		toSerialize["feePriority"] = o.FeePriority
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCoinsTransactionRequestFromWalletRBDataItem struct {
	value *CreateCoinsTransactionRequestFromWalletRBDataItem
	isSet bool
}

func (v NullableCreateCoinsTransactionRequestFromWalletRBDataItem) Get() *CreateCoinsTransactionRequestFromWalletRBDataItem {
	return v.value
}

func (v *NullableCreateCoinsTransactionRequestFromWalletRBDataItem) Set(val *CreateCoinsTransactionRequestFromWalletRBDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCoinsTransactionRequestFromWalletRBDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCoinsTransactionRequestFromWalletRBDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCoinsTransactionRequestFromWalletRBDataItem(val *CreateCoinsTransactionRequestFromWalletRBDataItem) *NullableCreateCoinsTransactionRequestFromWalletRBDataItem {
	return &NullableCreateCoinsTransactionRequestFromWalletRBDataItem{value: val, isSet: true}
}

func (v NullableCreateCoinsTransactionRequestFromWalletRBDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCoinsTransactionRequestFromWalletRBDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


