/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee When isConfirmed is True - Defines the amount of the transaction fee When isConfirmed is False - For ETH-based blockchains this attribute represents the max fee value.
type PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee struct {
	// Represents the amount of gas used by this specific transaction alone.
	GasLimit string `json:"gasLimit"`
	// Represents the price offered to the miner to purchase this amount of gas.
	GasPrice string `json:"gasPrice"`
	// Representation of the max fee per gas value
	MaxFeePerGas string `json:"maxFeePerGas"`
	// Rrepresentation of the max priority fee per gas value
	MaxPriorityFeePerGas string `json:"maxPriorityFeePerGas"`
}

// NewPrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee instantiates a new PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee(gasLimit string, gasPrice string, maxFeePerGas string, maxPriorityFeePerGas string) *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee {
	this := PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee{}
	this.GasLimit = gasLimit
	this.GasPrice = gasPrice
	this.MaxFeePerGas = maxFeePerGas
	this.MaxPriorityFeePerGas = maxPriorityFeePerGas
	return &this
}

// NewPrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFeeWithDefaults instantiates a new PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFeeWithDefaults() *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee {
	this := PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee{}
	return &this
}

// GetGasLimit returns the GasLimit field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) GetGasLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasLimit
}

// GetGasLimitOk returns a tuple with the GasLimit field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) GetGasLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasLimit, true
}

// SetGasLimit sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) SetGasLimit(v string) {
	o.GasLimit = v
}

// GetGasPrice returns the GasPrice field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) GetGasPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) GetGasPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasPrice, true
}

// SetGasPrice sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) SetGasPrice(v string) {
	o.GasPrice = v
}

// GetMaxFeePerGas returns the MaxFeePerGas field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) GetMaxFeePerGas() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFeePerGas
}

// GetMaxFeePerGasOk returns a tuple with the MaxFeePerGas field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) GetMaxFeePerGasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFeePerGas, true
}

// SetMaxFeePerGas sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) SetMaxFeePerGas(v string) {
	o.MaxFeePerGas = v
}

// GetMaxPriorityFeePerGas returns the MaxPriorityFeePerGas field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) GetMaxPriorityFeePerGas() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxPriorityFeePerGas
}

// GetMaxPriorityFeePerGasOk returns a tuple with the MaxPriorityFeePerGas field value
// and a boolean to check if the value has been set.
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) GetMaxPriorityFeePerGasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxPriorityFeePerGas, true
}

// SetMaxPriorityFeePerGas sets field value
func (o *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) SetMaxPriorityFeePerGas(v string) {
	o.MaxPriorityFeePerGas = v
}

func (o PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["gasLimit"] = o.GasLimit
	}
	if true {
		toSerialize["gasPrice"] = o.GasPrice
	}
	if true {
		toSerialize["maxFeePerGas"] = o.MaxFeePerGas
	}
	if true {
		toSerialize["maxPriorityFeePerGas"] = o.MaxPriorityFeePerGas
	}
	return json.Marshal(toSerialize)
}

type NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee struct {
	value *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee
	isSet bool
}

func (v NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) Get() *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee {
	return v.value
}

func (v *NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) Set(val *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee(val *PrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) *NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee {
	return &NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee{value: val, isSet: true}
}

func (v NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepareAnAccountBasedTransactionFromHDWalletXPubYPubZPubRIFee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


