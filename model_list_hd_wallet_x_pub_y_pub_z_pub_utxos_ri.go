/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListHDWalletXPubYPubZPubUTXOsRI struct for ListHDWalletXPubYPubZPubUTXOsRI
type ListHDWalletXPubYPubZPubUTXOsRI struct {
	// Represents the public address, which is a compressed and shortened form of a public key.
	Address string `json:"address"`
	// Defines a data which tells a Hierarchical Deterministic wallet how to derive a specific key within a tree of keys.
	AddressPath string `json:"addressPath"`
	// Represents the UTXO amount value.
	Amount string `json:"amount"`
	// The way how the HD walled derives, for example when the type is ACCOUNT, it derives change and receive addresses while when the type is BIP32 it derives directly.
	Derivation string `json:"derivation"`
	// Represents the output index. It refers to the UTXO sequence in the transaction outputs (vout).
	Index int32 `json:"index"`
	// Represents if the UTXO has been used from another unconfirmed transaction. If it is - the value will be \"false\".
	IsAvailable bool `json:"isAvailable"`
	// Represents the state of the transaction whether it is confirmed or not confirmed.
	IsConfirmed bool `json:"isConfirmed"`
	// Represents the reference id of the record. It may be used for the startingAfter pagination attribute.
	ReferenceId string `json:"referenceId"`
	// Represents the unique identifier of a transaction, i.e. it could be transactionId in UTXO-based protocols like Bitcoin, and transaction hash in Ethereum blockchain.
	TransactionId string `json:"transactionId"`
}

// NewListHDWalletXPubYPubZPubUTXOsRI instantiates a new ListHDWalletXPubYPubZPubUTXOsRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHDWalletXPubYPubZPubUTXOsRI(address string, addressPath string, amount string, derivation string, index int32, isAvailable bool, isConfirmed bool, referenceId string, transactionId string) *ListHDWalletXPubYPubZPubUTXOsRI {
	this := ListHDWalletXPubYPubZPubUTXOsRI{}
	this.Address = address
	this.AddressPath = addressPath
	this.Amount = amount
	this.Derivation = derivation
	this.Index = index
	this.IsAvailable = isAvailable
	this.IsConfirmed = isConfirmed
	this.ReferenceId = referenceId
	this.TransactionId = transactionId
	return &this
}

// NewListHDWalletXPubYPubZPubUTXOsRIWithDefaults instantiates a new ListHDWalletXPubYPubZPubUTXOsRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHDWalletXPubYPubZPubUTXOsRIWithDefaults() *ListHDWalletXPubYPubZPubUTXOsRI {
	this := ListHDWalletXPubYPubZPubUTXOsRI{}
	return &this
}

// GetAddress returns the Address field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetAddress(v string) {
	o.Address = v
}

// GetAddressPath returns the AddressPath field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetAddressPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressPath
}

// GetAddressPathOk returns a tuple with the AddressPath field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetAddressPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressPath, true
}

// SetAddressPath sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetAddressPath(v string) {
	o.AddressPath = v
}

// GetAmount returns the Amount field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetAmount(v string) {
	o.Amount = v
}

// GetDerivation returns the Derivation field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetDerivation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Derivation
}

// GetDerivationOk returns a tuple with the Derivation field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetDerivationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Derivation, true
}

// SetDerivation sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetDerivation(v string) {
	o.Derivation = v
}

// GetIndex returns the Index field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetIndex(v int32) {
	o.Index = v
}

// GetIsAvailable returns the IsAvailable field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetIsAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAvailable
}

// GetIsAvailableOk returns a tuple with the IsAvailable field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetIsAvailableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAvailable, true
}

// SetIsAvailable sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetIsAvailable(v bool) {
	o.IsAvailable = v
}

// GetIsConfirmed returns the IsConfirmed field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetIsConfirmed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsConfirmed
}

// GetIsConfirmedOk returns a tuple with the IsConfirmed field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetIsConfirmedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsConfirmed, true
}

// SetIsConfirmed sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetIsConfirmed(v bool) {
	o.IsConfirmed = v
}

// GetReferenceId returns the ReferenceId field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetReferenceId(v string) {
	o.ReferenceId = v
}

// GetTransactionId returns the TransactionId field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *ListHDWalletXPubYPubZPubUTXOsRI) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *ListHDWalletXPubYPubZPubUTXOsRI) SetTransactionId(v string) {
	o.TransactionId = v
}

func (o ListHDWalletXPubYPubZPubUTXOsRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["addressPath"] = o.AddressPath
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["derivation"] = o.Derivation
	}
	if true {
		toSerialize["index"] = o.Index
	}
	if true {
		toSerialize["isAvailable"] = o.IsAvailable
	}
	if true {
		toSerialize["isConfirmed"] = o.IsConfirmed
	}
	if true {
		toSerialize["referenceId"] = o.ReferenceId
	}
	if true {
		toSerialize["transactionId"] = o.TransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableListHDWalletXPubYPubZPubUTXOsRI struct {
	value *ListHDWalletXPubYPubZPubUTXOsRI
	isSet bool
}

func (v NullableListHDWalletXPubYPubZPubUTXOsRI) Get() *ListHDWalletXPubYPubZPubUTXOsRI {
	return v.value
}

func (v *NullableListHDWalletXPubYPubZPubUTXOsRI) Set(val *ListHDWalletXPubYPubZPubUTXOsRI) {
	v.value = val
	v.isSet = true
}

func (v NullableListHDWalletXPubYPubZPubUTXOsRI) IsSet() bool {
	return v.isSet
}

func (v *NullableListHDWalletXPubYPubZPubUTXOsRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHDWalletXPubYPubZPubUTXOsRI(val *ListHDWalletXPubYPubZPubUTXOsRI) *NullableListHDWalletXPubYPubZPubUTXOsRI {
	return &NullableListHDWalletXPubYPubZPubUTXOsRI{value: val, isSet: true}
}

func (v NullableListHDWalletXPubYPubZPubUTXOsRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHDWalletXPubYPubZPubUTXOsRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


