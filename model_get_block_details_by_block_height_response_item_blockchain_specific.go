/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
	"fmt"
)

// GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific - struct for GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
type GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific struct {
	GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin
	GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash
	GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash
	GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin
	GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum
	GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic
	GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin
}

// GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific is a convenience function that returns GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin wrapped in GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
func GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific(v *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin) GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific{ GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin: v}
}

// GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCashAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific is a convenience function that returns GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash wrapped in GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
func GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCashAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific(v *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash) GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific{ GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash: v}
}

// GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDashAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific is a convenience function that returns GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash wrapped in GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
func GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDashAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific(v *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash) GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific{ GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash: v}
}

// GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoinAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific is a convenience function that returns GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin wrapped in GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
func GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoinAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific(v *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin) GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific{ GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin: v}
}

// GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific is a convenience function that returns GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum wrapped in GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
func GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific(v *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum) GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific{ GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum: v}
}

// GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassicAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific is a convenience function that returns GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic wrapped in GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
func GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassicAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific(v *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic) GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific{ GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic: v}
}

// GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoinAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific is a convenience function that returns GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin wrapped in GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
func GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoinAsGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific(v *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin) GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific{ GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin: v}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin
	err = json.Unmarshal(data, &dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin)
	if err == nil {
		jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin, _ := json.Marshal(dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin)
		if string(jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin) == "{}" { // empty struct
			dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin = nil
		} else {
			match++
		}
	} else {
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin = nil
	}

	// try to unmarshal data into GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash
	err = json.Unmarshal(data, &dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash)
	if err == nil {
		jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash, _ := json.Marshal(dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash)
		if string(jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash) == "{}" { // empty struct
			dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash = nil
		} else {
			match++
		}
	} else {
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash = nil
	}

	// try to unmarshal data into GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash
	err = json.Unmarshal(data, &dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash)
	if err == nil {
		jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash, _ := json.Marshal(dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash)
		if string(jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash) == "{}" { // empty struct
			dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash = nil
		} else {
			match++
		}
	} else {
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash = nil
	}

	// try to unmarshal data into GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin
	err = json.Unmarshal(data, &dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin)
	if err == nil {
		jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin, _ := json.Marshal(dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin)
		if string(jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin) == "{}" { // empty struct
			dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin = nil
		} else {
			match++
		}
	} else {
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin = nil
	}

	// try to unmarshal data into GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum
	err = json.Unmarshal(data, &dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum)
	if err == nil {
		jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum, _ := json.Marshal(dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum)
		if string(jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum) == "{}" { // empty struct
			dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum = nil
		} else {
			match++
		}
	} else {
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum = nil
	}

	// try to unmarshal data into GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic
	err = json.Unmarshal(data, &dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic)
	if err == nil {
		jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic, _ := json.Marshal(dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic)
		if string(jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic) == "{}" { // empty struct
			dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic = nil
		} else {
			match++
		}
	} else {
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic = nil
	}

	// try to unmarshal data into GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin
	err = json.Unmarshal(data, &dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin)
	if err == nil {
		jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin, _ := json.Marshal(dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin)
		if string(jsonGetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin) == "{}" { // empty struct
			dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin = nil
		} else {
			match++
		}
	} else {
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin = nil
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash = nil
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash = nil
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin = nil
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum = nil
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic = nil
		dst.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) MarshalJSON() ([]byte, error) {
	if src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin != nil {
		return json.Marshal(&src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin)
	}

	if src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash != nil {
		return json.Marshal(&src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash)
	}

	if src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash != nil {
		return json.Marshal(&src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash)
	}

	if src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin != nil {
		return json.Marshal(&src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin)
	}

	if src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum != nil {
		return json.Marshal(&src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum)
	}

	if src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic != nil {
		return json.Marshal(&src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic)
	}

	if src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin != nil {
		return json.Marshal(&src.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) GetActualInstance() (interface{}) {
	if obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin != nil {
		return obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoin
	}

	if obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash != nil {
		return obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificBitcoinCash
	}

	if obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash != nil {
		return obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDash
	}

	if obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin != nil {
		return obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificDogecoin
	}

	if obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum != nil {
		return obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereum
	}

	if obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic != nil {
		return obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificEthereumClassic
	}

	if obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin != nil {
		return obj.GetBlockDetailsByBlockHeightResponseItemBlockchainSpecificLitecoin
	}

	// all schemas are nil
	return nil
}

type NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific struct {
	value *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific
	isSet bool
}

func (v NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) Get() *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return v.value
}

func (v *NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) Set(val *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific(val *GetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) *NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific {
	return &NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific{value: val, isSet: true}
}

func (v NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBlockDetailsByBlockHeightResponseItemBlockchainSpecific) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


