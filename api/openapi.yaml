openapi: 3.0.3
info:
  contact:
    email: developers@cryptoapis.io
    name: Crypto APIs Team
    url: https://cryptoapis.io
  description: "Crypto APIs is a complex and innovative infrastructure layer that\
    \ radically simplifies the development of any Blockchain and Crypto related applications.\
    \ Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts\
    \ and crypto experts with the development of their blockchain applications. Crypto\
    \ APIs provides unified endpoints and data, raw data, automatic tokens and coins\
    \ forwardings, callback functionalities, and much more."
  license:
    name: MIT
    url: http://www.opensource.org/licenses/mit-license.php
  termsOfService: https://cryptoapis.io/terms-conditions/
  title: CryptoAPIs
  version: 2021-03-20
servers:
- description: REST API
  url: https://rest.cryptoapis.io
security:
- ApiKey: []
tags:
- description: "## Introduction\r\n\r\nCrypto APIs is a set of blockchain- and crypto-related\
    \ products which can help you reduce your development and infrastructure costs.\
    \ It's an infrastructure layer which significantly reduces your go-to market time.\r\
    \n\r\n- **Wallet as a Service** - a DIgital Wallet that incorporates the best\
    \ features, security and authorization processes existing today. MPC-based, utilizing\
    \ TSS and Distributed Key Generation, backed up by a 3rd Party Escrow. Allocated\
    \ on multi-distributed nodes, Crypto APIs Wallet as a Service can offer customers\
    \ both server and mobile nodes. Multiple security methods provide regular monitoring,\
    \ audits and system checks. Webhooks functionality embedded along with whitelisting,\
    \ governance layer, quorum modification (M/N nodes), and more.\r\n\r\n- **Node\
    \ as a Service** - powerful shared and dedicated nodes from Crypto APIs. Choose\
    \ from Shared, Dedicated or Self-Managed Nodes to use to amplify your blockchain\
    \ and crypto projects. \r\n\r\n- **Blockchain Data** - by integrating it once\
    \ you can retrieve the most important data for the most common blockchains. Get\
    \ results for each supported blockchain protocol by changing only a single parameter.\
    \ Get both historical and real-time data, which can be unified, raw, read-only\
    \ or segmented. Quick response time of 25 ms is guaranteed by the scalable- and\
    \ load-balanced database where all data is synced and indexed. You can retrieve\
    \ information on blockchain data such as Blocks, Addresses, HD Wallets (xPub,\
    \ yPub, zPub), Balances, Unconfirmed Transactions, Confirmed Transactions Uncles,\
    \ Epochs, Tokens, Smart Contracts, Internal Transactions, Mempool, Fees, and more.\r\
    \n\r\n- **Blockchain Events** - works on the principle of the Webhook. You can\
    \ subscribe for certain events and get a callback notification every time they\
    \ occur.  There is no need of hosting or maintaining any node and the average\
    \ delivery time is estimated at 100 ms. Considered Events could include: a new\
    \ block that has been mined, new unconfirmed and mined transactions, a certain\
    \ number of confirmations (blocks) for a new transaction, and more.\r\n\r\n- **Blockchain\
    \ Automations** -  by subscribing for a certain automation based on a certain\
    \ event you can get a callback when it’s completed. Blockchain Automations don’\
    t require taking care of hot (temporary) addresses. Moreover, you can generate\
    \ as many addresses as preferred and then assign them to your users, where all\
    \ received funds will be automatically moved to your secure wallet (warm/cold).\
    \ Such Automations could automatically move received tokens and/or funds to another\
    \ wallet.\r\n\r\n- **Blockchain Tools** - a collection of useful API endpoints\
    \ that provide an easy way to connect with blockchains and perform certain operations.\
    \ The REST API endpoints reduce development time and save costs for servers. These\
    \ Blockchain tools include endpoints for checking the validity of an address,\
    \ deriving HD (xPub, yPub, zPub) addresses, receiving and changing them, broadcast\
    \ signed transactions and more.\r\n\r\n- **Crypto Market Data** - retrieve real-time\
    \ and up to 5 years of historical crypto market data exchange rates. All in one\
    \ place, coins and exchanges information.\r\n\r\nCrypto APIs offers different\
    \ pricing plans to fit your specific needs. To see Crypto APIs' available subscription\
    \ plans, please visit our [dedicated website page]( https://cryptoapis.io/pricing).\r\
    \n\r\nYou can download our OpenAPI 3.0 Specification as the latest JSON from [here](https://developers.cryptoapis.io/download-latest-json).\r\
    \n\r\n{warning}This documentation and all API References apply **only** to Crypto\
    \ APIs.{/warning}"
  name: Overview‌
- description: "## Choose SDK\r\n\r\nCrypto APIs Technical Documentation has included\
    \ vast and detailed information regarding the use of its API services. Additionally,\
    \ we have prepared various SDKs to help you get quickly started.\r\n\r\nYou can\
    \ pick one of our current SDK’s [here](https://developers.cryptoapis.io/sdkslibraries).\r\
    \n\r\n\r\n## Create an account\r\nTo get started with Crypto APIs services the\
    \ first thing you need to do is create your account at https://my.cryptoapis.io/login.\
    \ By creating an account you get access to a personalized Crypto APIs Dashboard,\
    \ where you can monitor and control your API keys, requests, credits, tokens,\
    \ exchange accounts, and more. \r\n\r\nYou can create your Crypto APIs account\
    \ manually by adding information to the required fields, or simply use the Social\
    \ Login provided for Google, GitHub and LinkedIn.\r\n\r\n{note}Please use a valid\
    \ email address you have access to, in order to be able to receive messages from\
    \ Crypto APIs needed for user authentication, registration completion and API\
    \ use.{/note}\r\n\r\n{note}Users can also invite Team members by adding their\
    \ email addresses. Email addresses that already exist as users type \"Owner\"\
    \ cannot be invited as Team members.{/note}\r\n\r\n\r\n## The Dashboard\r\nOnce\
    \ you create an account, you get access to a personalized Crypto APIs [Dashboard](https://my.cryptoapis.io/).\
    \ Through the dashboard is where you can choose and subscribe to a Crypto APIs\
    \ blockchain product - Blockchain Data, Blockchain Events, Blockchain Tools, Blockchain\
    \ Automations, or Crypto Market Data APIs.\r\n\r\nFrom the Dashboard you can:\r\
    \n\r\n- create and manage API keys - for authorization of the API; \r\n- create\
    \ and manage callback URLs - set URLs for response;\r\n- monitor successful and\
    \ failed requests, credits, callbacks; \r\n- manage webhooks and tokens;\r\n-\
    \ create and manage exchange accounts, etc.\r\n\r\nThe Crypto APIs Technical and\
    \ Best use Documentation is public and available to everyone. Still, support levels\
    \ for a Crypto APIs product vary depending on your subscription.\r\n\r\n## Authenticate\
    \ requests\r\n\r\nTo use and make calls to any Crypto APIs product, you must create\
    \ an API key, in order for your requests to be authenticated.\r\n\r\nAn API key\
    \ is a code unique to the user who generated it. It is used to identify the call\
    \ to the specific API and track the access to it and its usage. You can generate\
    \ your API key from within the Crypto APIs [dashboard](https://my.cryptoapis.io/api-keys)\
    \ by clicking on the “Create new API key” button. You can generate more than one\
    \ API key and use a single API key more than once. \r\n\r\nFor more information\
    \ on Authenticating requests, please see [“Authentication”](https://developers.cryptoapis.io/technical-documentation/general-information/authentication)\
    \ section."
  name: Getting Started
- description: "## Create API key\r\n\r\nAPI keys are required as an authentication\
    \ method with Crypto APIs products. By using an API key you authenticate access\
    \ to the specific API. Without authentication access to the API is denied. \r\n\
    \r\nYou can generate and manage API keys from within the Crypto APIs Dashboard\
    \ [here](https://my.cryptoapis.io/api-keys). By clicking on “Create new API key”\
    \ you can enter a name and the system will generate a unique for your user key\
    \ for API authentication. Multiple keys can be generated. Old API keys, that you\
    \ no longer want to use, can be disabled from the same location.\r\n\r\n## Use\
    \ API key\r\n\r\nAPI keys are required for the authentication of the calling program\
    \ to the API. All Crypto APIs keys use the same base URL \"https://rest.cryptoapis.io\"\
    . They can be used in test environments such as: Development, QA, and main Production\
    \ environments.\r\n\r\nWe do not recommend using the same API key for more than\
    \ one environment. We do recommend to use a single key for one specific environment\
    \ - Testing, Production, etc. The API key is sensitive private information that\
    \ we strongly advise to have and keep restricted access to it.\r\n\r\nContent-Type:\
    \ application/json\r\nX-API-Key: my-api-key\r\n\r\n{warning}It's important to\
    \ secure your API Key against public access. The custom header option is strongly\
    \ recommended for a production environment.{/warning}\r\n\r\n\r\n## API Credential\
    \ Usage - Credits\r\n\r\nMost plans include a daily limit or “hard stop” to the\
    \ number of data calls that can be made and the results provided by Crypto APIs.\
    \ This limit is directly tied to your API Key usage and number of credits purchased.\
    \ Your daily credits will be reloaded at 0:00 AM UTC.\r\n\r\nThe daily credit\
    \ limit is tracked based on API data calls and results provided with your key.\
    \ Each credit is accounted for and incremented 1:1, with the exception of:\r\n\
    \r\n1. Error responses are not included in this monthly limit;\r\n2. Paginated\
    \ Endpoints: List based endpoints. Credit allocation per API credentials is done\
    \ for every 50 data results returned, always rounded-up.\r\n3. Bundled/Batched\
    \ API calls: Credit allocation per API credentials is done for every 50 data results\
    \ returned, always rounded-up.\r\n\r\nThis is directly related to the API call\
    \ Rate Limiting which is applied to all Crypto APIs. For more information on API\
    \ limiting and other ways we limit data from our API, please see [“Data Flow Limiting”\
    ](https://developers.cryptoapis.io/technical-documentation/general-information/data-flow-limiting)\
    \ section."
  name: Authentication
- description: "## Supported Protocols and Networks\r\n\r\n| Blockchain protocol |\
    \ Network |\r\n| :---: | :---: |\r\n| Bitcoin | Mainnet, Testnet |\r\n| Ethereum\
    \ | Mainnet, Goerli |\r\n| Tron | Mainnet, Testnet |\r\n| XRP | Mainnet, Testnet\
    \ |\r\n| Litecoin | Mainnet, Testnet |\r\n| Bitcoin Cash | Mainnet, Testnet |\r\
    \n| Dash | Mainnet, Testnet |\r\n| Doge | Mainnet, Testnet |\r\n| Ethereum Classic\
    \ | Mainnet, Mordor |\r\n| Zilliqa | Mainnet |\r\n| BNB Smart Chain | Testnet\
    \ |\r\n| Zcash | Mainnet, Testnet |\r\n\r\n\r\n\r\n## Supported Blockchain Tokens\
    \ and Layers\r\n\r\nWe support all token standards: **Omni layer**, **ERC-20**\
    \ and **ERC-721**. All tokens, based on these, are also supported by Crypto APIs.\
    \ Since the list is too long and new tokens emerge every day, we cannot include\
    \ it here. Nevertheless, you can view some of the most famous tokens on our [website](https://cryptoapis.io/).\r\
    \n\r\n\r\n## Supported Omni Layer transaction types\r\n\r\nWe support the following\
    \ Omni layer transaction types for the providing of Blockchain data:\r\n\r\n1.\
    \ Simple Send\r\n2. DEx Purchase\r\n3. DEx Sell Offer\r\n4. DEx Accept Offer\r\
    \n5. Close Crowdsale\r\n6. Create Property - Fixed\r\n7. Create Property - Variable\r\
    \n8. Send To Owners\r\n9. Crowdsale Purchase\r\n10. Create Property - Manual\r\
    \n11. Grant Property Tokens\r\n12. Revoke Property Tokens\r\n13. Change Issuer\
    \ Address\r\n14. MetaDEx trade\r\n15. Feature Activation\r\n16. ALERT\r\n17. MetaDEx\
    \ cancel-price\r\n18. Send All\r\n19. MetaDEx cancel-ecosystem\r\n20. Enable Freezing\r\
    \n21. Freeze Property Tokens\r\n22. Disable Freezing\r\n23. MetaDEx cancel-pair\r\
    \n24. Unfreeze Property Tokens\r\n\r\n## Blockchain Units and Denominations\r\n\
    \ \r\nEach blockchain protocol has its own native decimal base denomination. The\
    \ following is a reference for how to convert Bitcoin- and Ethereum-based units.\r\
    \n\r\nBitcoin has 8 decimal places and the smallest unit is called a \"Satoshi\"\
    , in honor of the blockchain’s creator, who is known as only Satoshi Nakamoto.\
    \ 1 Satoshi is equal to 0.00000001 Bitcoin.\r\n\r\nEthereum, on the other hand,\
    \ has 18 decimal places with the smallest unit called a “wei”. 1 Wei is 0.000000000000000001\
    \ of the Ether.\r\n\r\n### Bitcoin Denominations\r\n\r\n| Unit | Denomination\
    \ |\r\n| :---: | :---: |\r\n| 1 Bitcoin | = 100 000 000 Satoshi |\r\n| 1 Satoshi\
    \ | = 0.00000001 Bitcoin |\r\n| 1 μBTC (microbitcoin) | = 0.00000100 Bitcoin =\
    \ 100 Satoshi |\r\n| mBTC (millibitcoin) | = 0.00100000 Bitcoin = 100 000 Satoshi\
    \ |\r\n| cBTC (centibitcoin or bitcent) | = 0.01000000 Bitcoin = 1 000 000 Satoshi\
    \ |\r\n| dBTC (decibit or decibitcoin) | = 0.10000000 Bitcoin = 10 000 000 Satoshi\
    \ |\r\n| daBTC (decabit or decabitcoin) | = 10 Bitcoin = 1e9 Satoshi |\r\n\r\n\
    ### Ethereum Denominations\r\n\r\n| Unit | Denomination |\r\n| :---: | :---: |\r\
    \n| 1 Ether | = 1e18 Wei |\r\n| 1 Wei | = 0.000000000000000001 Ether |\r\n| 1\
    \ Kwei (babbage) | = 1000 Wei = 0.000000000000001 Ether |\r\n| 1 Mwei (lovelace)\
    \ | = 1 000 000 Wei = 0.000000000001 Ether |\r\n| 1 Gwei (shannon) | = 1e9 Wei\
    \ = 0.000000001 Ether |\r\n| 1 Twei (szabo) | = 1e12 Wei = 0.000001 Ether |\r\n\
    | 1 Pwei (finney) | = 1e15 Wei = 0.001 Ether |\r\n\r\n## Supported Blockchain\
    \ Exchanges\r\n\r\nCrypto APIs support different blockchain exchanges. The blockchain\
    \ exchange itself is an online platform serving as an intermediary between buyers\
    \ and sellers of cryptocurrency. The following exchanges are supported for Market\
    \ data:\r\n\r\n- Binance\r\n- Coinbasepro\r\n- Kraken\r\n- Okex\r\n- Gemini\r\n\
    - Huobi\r\n- Bitstamp\r\n- Bittrex\r\n- Poloniex\r\n- KuCoin\r\n- Bitfinex\r\n\
    - CoinEx\r\n\r\n\r\n## Supported Fiat Currencies\r\n\r\nAll of the fiat currency\
    \ options use the standard ISO 8601 currency codes (e.g. USD for US Dollar, EUR\
    \ for Euro etc.). Unless otherwise stated, endpoints with fiat currency options\
    \ support these major currency codes:\r\n\r\n| Currency Code | Currency |\r\n\
    | :---: | :--- |\r\n| AED\t| United Arab Emirates Dirham |\r\n| ALL\t| Albanian\
    \ Lek |\r\n| ARY\t| Peso |\r\n| ATS\t| Authorship |\r\n| AUD\t| Australian Dollar\
    \ |\r\n| BAM\t| Convertible Mark |\r\n| BEC\t| Convertible Franc |\r\n| BGN\t\
    | Bulgarian Lev |\r\n| BHD\t| Bahraini Dinar |\r\n| BOB\t| Boliviano |\r\n| BOP\t\
    | Peso Boliviano |\r\n| BRC\t| Cruzado |\r\n| BRE\t| Cruzeiro |\r\n| BRL\t| Brazilian\
    \ Real |\r\n| BSD\t| Bahamian Dollar |\r\n| BUK\t| Burma |\r\n| CAD\t| Canadian\
    \ Dollar |\r\n| CHC\t| WIR Franc |\r\n| CHF\t| Swiss Franc |\r\n| CNX\t| Peoples\
    \ Bank Dollar |\r\n| CNY\t| Yuan Renminbi |\r\n| CRC\t| Costa Rican Colon |\r\n\
    | CYP\t| Cyprus Pound |\r\n| CZK\t| Czech Koruna |\r\n| DEM\t| Deutsche Mark |\r\
    \n| DKK\t| Danish Krone |\r\n| ESP\t| Spanish Peseta |\r\n| ETB\t| Ethiopian Birr\
    \ |\r\n| EUR\t| Euro |\r\n| GBP\t| Pound Sterling |\r\n| GHS\t| Ghana Cedi |\r\
    \n| HKD\t| Hong Kong Dollar |\r\n| HRK\t| Croatian Kuna |\r\n| HUF\t| Forint |\r\
    \n| IDR\t| Rupiah |\r\n| ILS\t| New Israeli Sheqel |\r\n| INR\t| Indian Rupee\
    \ |\r\n| JPY\t| Yen |\r\n| KRW\t| Won |\r\n| LTT\t| Talonas |\r\n| LUC\t| Luxembourg\
    \ Convertible Franc |\r\n| MAD\t| Moroccan Dirham |\r\n| MTL\t| Maltese Lira |\r\
    \n| MUR\t| Mauritius Rupee |\r\n| MVR\t| Rufiyaa |\r\n| MXN\t| Mexican Peso |\r\
    \n| MYR\t| Malaysian Ringgit |\r\n| NGN\t| Naira |\r\n| NIC\t| Cordoba |\r\n|\
    \ NLG\t| Netherlands Guilder |\r\n| NOK\t| Norwegian Krone |\r\n| NZD\t| New Zealand\
    \ Dollar |\r\n| PEN\t| Nuevo Sol |\r\n| PHP\t| Philippine Peso |\r\n| PLN\t| Zloty\
    \ |\r\n| RON\t| New Romanian Leu |\r\n| RUB\t| Russian Ruble |\r\n| RUR\t| Russian\
    \ Ruble |\r\n| SBD\t| Solomon Islands Dollar |\r\n| SDG\t| Sudanese Pound |\r\n\
    | SEK\t| Swedish Krona |\r\n| SGD\t| Singapore Dollar |\r\n| SLL\t| Leone |\r\n\
    | SUR\t| Rouble |\r\n| SVC\t| El Salvador Colon |\r\n| THB\t| Baht |\r\n| TOP\t\
    | Top Coin |\r\n| TRY\t| Turkish Lira |\r\n| TWD\t| New Taiwan Dollar |\r\n| UAH\t\
    | Hryvnia |\r\n| USD\t| US Dollar |\r\n| ZAR\t| Rand |\r\n| XRE\t| Revolver Coin\
    \ |\r\n\r\nAnd additionally these precious metals and bonds are also supported:\r\
    \n\r\n| Code | Unit |\r\n| :---: | :--- |\r\n| XAG\t| Silver |\r\n| XAU\t| Gold\
    \ |\r\n| XBB\t| Bond Markets Monetary Unit |\r\n| XBC\t| Bond Markets Unit of\
    \ Account 9 |\r\n| XPD\t| Petro Dollar |\r\n| XPT\t| Platinum |"
  name: What we support
- description: "## List of errors\r\n\r\nAll requests with a response status code\
    \ different than 200 (successful HTTP) are considered as a failure of the particular\
    \ API call and referred to as “HTTPS errors”. When the response (error) is returned\
    \ an additional JSON is present in the body containing the error message. Depending\
    \ on what has gone wrong with the API call, the error message is different.\r\n\
    \r\nAs best practice we recommend to store all error messages somewhere along\
    \ with request data for further manual review.\r\n\r\nThe errors we use follow\
    \ the HTTP Error Codes Standard. \r\n\r\n| HTTP Status Code | Error it represents\
    \ |\r\n|:---:|:---:|\r\n|3xx | Redirection Error |\r\n|4xx | Client Error |\r\n\
    |5xx | Server Error |\r\n\r\n\r\nThe structure of the error **always** returns\
    \ the following values, as listed and described in the example:\r\n\r\n\r\n_**Example:**_\r\
    \n\r\n```\r\n{\r\n    \"apiVersion\": \"\", // The current API Version.\r\n  \
    \  \"requestId\": \"\", // Each request has a unique ID, for which the Support\
    \ team could ask for when contacted.\r\n    \"context\": \"\", // Optional: In\
    \ case you send this value in your request.\r\n    \"error\": {\r\n        \"\
    code\": \"\", // Error Code, please check our [Errors page](https://developers.cryptoapis.io/technical-documentation/general-information/errors-and-api-statuserrors)\
    \ to see the full list of error codes.\r\n        \"message\": \"\", // Is the\
    \ human readable error message.\r\n        \"details\": \"\" // Optional: Some\
    \ errors may need more details.\r\n    }\r\n}\r\n```\r\n\r\nWe use the following\
    \ error codes:\r\n\r\n\r\n### General errors\r\n\r\n| Type of code | HTTP Status\
    \ Code | Error code | Message |\r\n| :---: | :---: | :---: | :---: |\r\n| Client\
    \ Error | 400 | `uri_not_found` | \"The specified URI has not been found. Check\
    \ the URI and try again.\" |\r\n|  |  | `limit_greater_than_allowed` | \"You have\
    \ reached the allowed limit. The maximum number of items for this endpoint is\
    \ {limit}, please use the specific pagination attributes to get the items in portions.\"\
    \ |\r\n|  |  | `invalid_pagination` | \"The pagination attributes that have been\
    \ used are invalid. Please check the Documentation to see details on pagination.\"\
    \ |\r\n|  | 401 | `missing_api_key` | \"The specific authorization header (API\
    \ Key) is missing, please check our Authorization section in our Documentation.\"\
    \ |\r\n|  |  | `invalid_api_key` | \"The provided API key is invalid. Please,\
    \ generate a new one from your Dashboard.” |\r\n|  | 402 | `insufficient_credits`\
    \ | \"You have insufficient credits. Please upgrade your plan from your Dashboard\
    \ or contact our team via email.\" |\r\n|  | 403 | `https_required` | \"The use\
    \ of HTTP**S** is required.\" |\r\n|  |  | `endpoint_not_allowed_for_plan` | \"\
    This endpoint is not available for your current subscription plan, please upgrade\
    \ your plan to be able to use it.\" |\r\n|  |  | `data_not_allowed_for_plan` |\
    \ \"Your subscription plan includes only {days} days of historical data. Please\
    \ upgrade your plan or contact our team for more information.\" |\r\n|  |  | `banned_ip_address`\
    \ | \"This IP address has been banned. To check the reason for that, please contact\
    \ our team via email.\" |\r\n|  |  | `endpoint_not_allowed_for_api_key` | “This\
    \ endpoint is not available for your API key.” |\r\n|  | 404 | `resource_not_found`\
    \ | \"The specified resource has not been found.\" |\r\n|  | 405 | `request_method_not_supported`\
    \ | \"The specified request method ({method}) is not supported for this endpoint.\
    \ Please check our Documentation and make sure you set the right request method.\"\
    \ |\r\n|  |  | `allowed_methods` | \"The specified method **must** be one of the\
    \ following: {methods}.\" |\r\n|  | 409 | `invalid_query_parameter` | \"The query\
    \ parameter provided is invalid. Please provide a proper query parameter, or refer\
    \ to the documentation for more information.\" |\r\n|  |  | `missing_request_body`\
    \ | \"The required request body is missing, action cannot be performed.\" |\r\n\
    |  |  | `bad_json` | \"The JSON provided is invalid. Please make sure it's valid\
    \ and try again.\" |\r\n|  |  | `invalid_data` | \"The data provided seems to\
    \ be invalid.\" |\r\n|  |  | `already_exists` | \"The specified resource already\
    \ exists.\" |\r\n|  |  | `callback_url_not_verified` | \"The Callback URL has\
    \ not been verified. Please, verify the URL from within your Dashboard and try\
    \ again.\" |\r\n|  |  | `missing_required_attributes` | \"A required parameter\
    \ is missing. Please provide all required parameters, or refer to the documentation\
    \ for more information.\" |\r\n|  |  | `extra_body_attributes` | \"A provided\
    \ body parameter is unknown or not specified. Please provide only specified body\
    \ parameters, or refer to the documentation for more information.\" |\r\n|  |\
    \  | `extra_query_attributes` | \"A provided query parameter is unknown or not\
    \ specified. Please provide only specified query parameters, or refer to the documentation\
    \ for more information.\" |\r\n|  | 415 | `unsupported_media_type` | \"The selected\
    \ Media Type is unavailable. The Content-Type header should be 'application/json'.\"\
    \ |\r\n|  | 429 | `request_limit_reached` | \"The request limit has been reached.\
    \ There can be maximum {requests} requests per {seconds} second(s) made. Please\
    \ contact our team via email if you need more or upgrade your plan.\" |\r\n| Server\
    \ Error | 500 | `technical_issues` | \"We are currently facing some technical\
    \ issues, please try again later.\" |\r\n|  |  | `unexpected_server_error` | \"\
    An unexpected server error has occurred, we are working to fix this. Please try\
    \ again later and in case it occurs again please report it to our team via email.\"\
    \ |\r\n|  | 501 | `unimplemented` | \"This {feature} has not been implemented\
    \ yet.\" |\r\n|  | 503 | `temporary_shutdown_endpoint` | \"This endpoint is temporarily\
    \ stopped due to performance reasons. For more information please contact our\
    \ team via email.\" |\r\n\r\n\r\n### Custom errors:\r\n\r\n| Type of code | HTTP\
    \ Status Code | Error code | Message |\r\n| :---: | :---: | :---: | :---: |\r\n\
    | Client Error | 400 | `invalid_blockchain` | \"The provided blockchain is invalid.\
    \ The blockchain **must** be a supported one. For the full list of supported blockchains\
    \ please see our Documentation.\" |\r\n|  |  | `invalid_network` | \"The provided\
    \ network is invalid. The network **must** be a supported one. For the full list\
    \ of supported networks please see our Documentation.\" |\r\n|  |  | `blockchain_data_invalid_address`\
    \ | \"The provided address is invalid for the mentioned blockchain/network. \"\
    \ |\r\n|  |  | `xpub_not_synced` | \"This xPub is not yet synced, please first\
    \ use the endpoint “Sync HD (xPub, yPub, zPub) wallet” to synchronize it.\" |\r\
    \n|  |  | `waas_contact_group_is_missing` | \"Contact group was not found.\" |\r\
    \n|  |  | `transaction_not_signed` | \"The transaction is not properly signed!\"\
    \ |\r\n|  |  | `invalid_words_count` | \"Invalid words count! Words count MUST\
    \ be one of: {validWordsCount}\" |\r\n|  | 403 | `wallet_as_a_service_contacts_limit_reached`\
    \ | \"You have reached the maximum Contacts count which is currently {waasConstraintsCount}.\
    \ 'Please, upgrade your plan in order to have a higher Contacts count.\" |\r\n\
    |  |  | `tx_lifecycle_tx_already_has_enough_rejects` | \"This transaction request\
    \ already has enough rejections.\" |\r\n|  |  | `tx_lifecycle_user_is_not_rejecter`\
    \ | \"User with ID: {teamMemberId} is not a rejecter for this transaction request.\"\
    \ |\r\n|  |  | `tx_lifecycle_tx_already_rejected_by_this_user` | \"User with ID:\
    \ {teamMemberId} has already rejected this transaction request.\" |\r\n|  |  |\
    \ `tx_lifecycle_tx_already_has_enough_approvals` | \"This transaction request\
    \ already has enough approvals.\" |\r\n|  |  | `tx_lifecycle_user_is_not_approver`\
    \ | \"User with ID: {teamMemberId} is not an approver for this transaction request.\"\
    \ |\r\n|  |  | `tx_lifecycle_tx_already_approved_by_this_user` | \"User with ID:\
    \ {teamMemberId} has already approved this transaction request.\" |\r\n|  |  |\
    \ `wallet_as_a_service_deposit_addresses_limit_reached` | \"You have reached the\
    \ maximum Deposit Addresses count which is currently {depositAddressesCount}.\
    \ Please, upgrade your plan in order to have a higher Deposit Address count.\"\
    \ |\r\n|  |  | `wallet_as_a_service_wallets_limit_reached` | You have reached\
    \ the maximum Wallets count which is currently {walletsCount}. Please, upgrade\
    \ your plan in order to have a higher Wallet count. |\r\n|  |  | `wallet_as_a_service_wallet_recovery_data_already_backed_up`\
    \ | \"Your Wallet has been already backed up and that action cannot be done again.\
    \ For further assistance please contact our team.\" |\r\n|  |  | `blockchain_events_callbacks_limit_reached`\
    \ | \"You have reached the maximum number of active Blockchain Events subscriptions\
    \ which is {callbacks_limit} now. Please upgrade your plan to be get higher number\
    \ of active subscriptions.\" |\r\n|  |  | `action_requests_user_cannot_approve_request`\
    \ | \"User with ID: {userId} cannot approve this action request.\" |\r\n|  | \
    \ |  `action_requests_request_already_approved_by_this_user` | \"User with ID:\
    \ {userId} has already approved this action request.\" |\r\n|  |  | `action_requests_user_cannot_reject_request`\
    \ | \"User with ID: {userId} cannot reject this action request.\" |\r\n|  |  |\
    \ `coins_forwarding_automations_limit_reached` | \"Your current package plan coins\
    \ forwarding automations limit of {automations_limit} reached. Please contact\
    \ us if you need more or upgrade your plan.\" |\r\n|  |  | `tokens_forwarding_automations_limit_reached`\
    \ | \"Your current package plan tokens forwarding automations limit of {automations_limit}\
    \ reached. Please contact us if you need more or upgrade your plan.\" |\r\n| \
    \ | 404 | `blockchain_data_address_not_found` | \"The provided address for this\
    \ blockchain/network has not been found. Please check it and try again.\" |\r\n\
    |  |  | `blockchain_data_block_not_found` | \"The specified block has not been\
    \ found on the specific blockchain.\" |\r\n|  |  | ` blockchain_data_transaction_not_found`\
    \ | \"The specified transaction has not been found on the specific blockchain.\"\
    \ |\r\n|  |  | `order_book_unknown_symbol_id` | \"This symbol ID cannot be found.\
    \ Please check all symbol IDs in our Market Data product.\" |\r\n|  |  | `tokens_forwarding_unknown_from_address`\
    \ | \"From address was not found for your account.\" |\r\n|  | 409 | `blockchain_prepare_transactions_insufficient_funds`\
    \ | \"Insufficient funds or wrong address applied.\" |\r\n|  |  | `wallet_as_a_service_token_not_supported`\
    \ | \"The token is not supported for this blockchain and network. To be supported,\
    \ please contact our team.\" |\r\n|  |  | `wallet_as_a_service_no_deposit_addresses_found`\
    \ | \"Please first create a deposit address for the specific blockchain and network,\
    \ in order to be able to make transactions.\" |\r\n|  |  | `wallet_as_a_service_tokens_not_supported`\
    \ | \"Tokens are not supported for the blockchain specified.\" |\r\n|  |  | `wallet_as_a_service_address_balance_not_enough`\
    \ | \"Your address balance is insufficient to complete the action. Please, deposit\
    \ funds to your address and try again.\" |\r\n|  |  | `wallet_as_a_service_wallet_balance_not_enough`\
    \ | \"Your Wallet balance is insufficient to complete the action. Please, deposit\
    \ funds to your Wallet and try again.\" |\r\n|  | 422 | `sign_transaction_error`\
    \ | \"Transaction could not be signed.\" |\r\n|  |  | `could_not_calculate_rate_for_pair`\
    \ | \"Rate could not be calculated due to not enough pair trades data.\" |\r\n\
    |  |  | `xpub_sync_in_progress` | \"Your wallet (xPub, yPub, zPub) is still syncing,\
    \ it should take few seconds depending on how many transactions it has.\" |\r\n\
    |  |  | `invalid_xpub` | \"The provided Xpub is invalid.\" |"
  name: Errors and API status
- description: "## Data Limiting\r\n\r\nData limiting is much more helpful to the\
    \ APIs operation and user’s experience than it sounds. The purpose of such strategies\
    \ and processes is threefold - to prevent overloading of the API in one way or\
    \ another, to ensure the best possible processing speed and response time, and\
    \ to provide additional security to Crypto APIs products and the fetched data.\
    \ Some data flow limiting is nevertheless subject to variation depending on the\
    \ Crypto APIs product subscription tier you have as a customer. Different subscription\
    \ plans provide different levels of data flow limiting. To see more details on\
    \ Crypto APIs products, please visit our [website](https://cryptoapis.io/). \r\
    \n\r\nCrypto APIs uses the following methods and strategies of limiting data flow:\r\
    \n\r\n### Rate Limiting\r\n\r\nAPI call Rate Limits are an essential part of Internet\
    \ security designed to prevent DoS attacks, the overwhelming of an API, and the\
    \ decreasing of its business value. What the process does is to basically limit\
    \ the API calls sent simultaneously with your API key from a single source, as\
    \ unlimited such could compromise both the performance and security of the API\
    \ in question. API limiting also assists in boosting the API’s scalability which\
    \ prevents lags during traffic spikes.\r\n\r\nFor these and more reasons Crypto\
    \ APIs professional service is subject to API call Rate Limits. All such limits,\
    \ applied to you and your use, are based on your chosen subscription plan tier.\
    \ If you are interested in increasing your Rate limits, you can always [reach\
    \ out to our team](https://cryptoapis.io/contacts) and set up a custom subscription.\r\
    \n\r\nIn the case you exceed the aforementioned limits, your requests will return\
    \ an HTTPS Status Code 429.\r\n\r\nThe Rate Limits are tracked and calculated\
    \ on the basis of calls per day, per hour, per minute and per second in correspondence\
    \ to available credits. \r\n\r\n### Daily credits\r\n\r\nCrypto APIs provides\
    \ a specific amount of daily credits for the different subscription tiers of its\
    \ product. The higher level the subscription, the more daily credits it provides.\
    \ Your daily credits are accounted for 24 hours from the initial call made to\
    \ our API-Gateway.\r\n\r\nDaily credits allow you to actually make an API call.\
    \ This is the limit of calls you can make for 24 hours. One credit doesn’t necessarily\
    \ mean one request though. You can see the amount of credits charged for every\
    \ single endpoint by navigating to our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/overview),\
    \ opening the endpoint in question and scrolling to the bottom of the page.\r\n\
    \r\nThere are two charge types: \"Request\" and \"List\", where the latter is\
    \ only for endpoints that can list multiple results and have pagination applied.\r\
    \n\r\n1. The \"Request\" type charges a specific amount of credits per a single\
    \ request. For different endpoints this could be a different amount, but most\
    \ often it is 1 credit per 1 request. \r\n2. The \"List\" type charges a certain\
    \ amount of credits per a specific count of results. Depending on the specific\
    \ List endpoint this could vary, e.g. a more complex List endpoint could charge\
    \ \"2 credits per every 5 results\".\r\n\r\n\r\n### Enabled features\r\n\r\nAnother\
    \ way we limit data flow are the features each subscription tier holds. Crypto\
    \ APIs offers a variety of blockchain-related API products where each higher subscription\
    \ tier provides more and better features for your preferences in retrieving blockchain\
    \ and cryptocurrency data. \r\n\r\nTo see our prefixed subscription and pricing\
    \ list with products, please see our [website](https://cryptoapis.io/pricing).\
    \ If you feel like you can work better with a custom plan, simply contact [our\
    \ team](https://cryptoapis.io/contacts) and we’ll discuss the possibilities we\
    \ can offer you.\r\n\r\n### Pagination\r\n\r\n#### Using Pagination\r\n\r\nWhen\
    \ making calls to the Crypto APIs, a large number of results can be expected in\
    \ the response. Blockchains consist of hundreds of thousands of data blocks at\
    \ the least, containing hashed information on transactions which can add up to\
    \ hundreds and more pages of information when called. To ensure the normal flow\
    \ and structure of the results of the API response and optimize our efficiency,\
    \ we paginate our results. Paginated results are returned usually to a GET request.\
    \ \r\n\r\n\r\n_**Example:**_\r\n\r\n```\r\n{\r\n    \"apiVersion\": \"2.0\",\r\
    \n    \"requestId\": \"xxxxxxxxxxxx\",\r\n    \"data\": {\r\n        \"offset\"\
    : 0,\r\n        \"limit\": 50,\r\n        \"total\": 2,\r\n        \"items\":\
    \ [\r\n            {\r\n              //item 1\r\n            },\r\n         \
    \   {\r\n              //item 2\r\n            }\r\n        ]\r\n    }\r\n}\r\n\
    \r\n```\r\n\r\nTo avoid requests that may potentially crash the system or result\
    \ in an error, we have set up a default limit on results with the value `limit`:\
    \ 50. This means that regardless of the value of the property `total` in the response,\
    \ by default only 50 can be displayed at a time. The default value of the `limit`\
    \ property is set to \"50\", but can vary or be modified depending on the specific\
    \ List endpoint.\r\n\r\nTo see how many items in total your request can return\
    \ in general, see the value `total`. Depending on that number (if it is higher\
    \ than the default `offset`: 50) and your preferences, you can send another request\
    \ to fetch the next segment of the results again displayed within the default\
    \ 50 items per page limit.\r\n\r\n\r\n#### How do I know whether a certain endpoint\
    \ uses pagination?\r\n\r\nThe process of pagination requires a request that would\
    \ return a response of multiple items, or a list. When information is listed then\
    \ It requires sorting and limiting of display. \r\n\r\nEndpoints that request\
    \ information on a specific item - address, transaction, block, etc., will return\
    \ a single count of the requested item, along with its respected details, which\
    \ are the goal of the request. \r\n\r\n_**Example:**_\r\n\r\nThis is a response\
    \ example for a request to GET address details. The value `item` being in the\
    \ singular form, due to the request fetching information on one item, indicates\
    \ there is no pagination for the specific endpoint.\r\n\r\n```\r\n{\r\n    \"\
    apiVersion\": \"2.0\",\r\n    \"requestId\": \"xxxxxxxxxxxx\",\r\n    \"address\"\
    : \"xxxxxxxxxxxx\",\r\n    \"data\": {\r\n        \"limit\": 0,\r\n        \"\
    offset\": 50,\r\n        \"total\": 1,\r\n        \"item\": [\r\n            {\r\
    \n              //address details\r\n            }\r\n        ]\r\n    }\r\n}\r\
    \n\r\n```\r\n\r\n_**Example:**_\r\n\r\nThe following is a different response example\
    \ for a request to GET a list of addresses by a certain attribute. The value `items`\
    \ is in the plural form, which indicates that the response includes more than\
    \ one count of the requested information, which makes it a list. Ergo, this specific\
    \ endpoint uses pagination.\r\n\r\n```\r\n{\r\n    \"apiVersion\": \"2.0\",\r\n\
    \    \"requestId\": \"xxxxxxxxxxxx\",\r\n    \"data\": {\r\n        \"limit\"\
    : 0,\r\n        \"offset\": 50,\r\n        \"total\": 1000,\r\n        \"items\"\
    : [\r\n            {\r\n              //address 1\r\n            },\r\n      \
    \      {\r\n              //address 2\r\n            },\r\n\t{\r\n\t …\r\n\t}\r\
    \n        ]\r\n    }\r\n}\r\n\r\n```\r\n\r\n#### How do I see the next page of\
    \ the response?\r\n\r\nCrypto APIs obtains information from the blockchain database,\
    \ therefore a new request has to be made in order to see further items from the\
    \ response. The next response will still be limited to the default pagination\
    \ value `offset`: 50, but you can get the next page by modifying the `limit` value.\r\
    \n\r\n`limit` indicates from which item in the list should the response start\
    \ displaying results. The first paginated response of a request will by default\
    \ start count from 0, i.e. `limit`: 0. By modifying this value you can retrieve\
    \ the next segment of the results again displayed within the default 50 items\
    \ per page limit.\r\n\r\n_**Example:**_\r\n\r\n```\r\n{\r\n    \"apiVersion\"\
    : \"2.0\",\r\n    \"requestId\": \"xxxxxxxxxxxx\",\r\n    \"data\": {\r\n    \
    \    \"limit\": 51,\r\n        \"offset\": 50,\r\n        \"total\": 1000,\r\n\
    \        \"items\": [\r\n            {\r\n              //address 51\r\n     \
    \       },\r\n            {\r\n              //address 52\r\n            },\r\n\
    \t{\r\n\t …\r\n\t}\r\n        ]\r\n    }\r\n}\r\n\r\n```\r\n\r\nTo retrieve every\
    \ segment of the response, in order to view all possible results, you have to\
    \ each time make a new request with a modified `limit`. The default `offset` value\
    \ cannot be modified to be more or less than 50."
  name: Data Flow Limiting
- description: "## Introduction\r\n\r\nThis article will present and describe principles,\
    \ standards and conventions we apply to our APIs and processes. The following\
    \ information may be subject to change and may as well not apply to other software.\r\
    \n\r\nWe use OpenAPI 3 Standard for our Technical Documentation and Endpoints\
    \ description. All Technical Documentation can be found in the [Developer’s Portal](https://developers.cryptoapis.io/technical-documentation).\
    \ Moreover, all Crypto APIs are REST.\r\n\r\n\r\n## URI\r\n\r\n### URI Structure\r\
    \n\r\nThe Crypto APIs and endpoint URIs follow the RFC 3986 specification and\
    \ are divided into three main parts, applicable to all Crypto APIs products (Blockchain\
    \ Events, Blockchain Data, etc.):\r\n\r\n1. The domain and subdomain in the URI\
    \ always display as: **rest.cryptoapis.io**\r\n2. Next is displayed the version\
    \ of the product, e.g. currently it is: **/v2/**\r\n3. Next is displayed the product\
    \ name, where words are separated with spinal-case: **/blockchain-data/**\r\n\r\
    \n_**Example:**_\r\n\r\nrest.cryptoapis.io/v2/blockchain-data/..\r\n\r\nDepending\
    \ on which product is specified, after that the URI’s structure may look different\
    \ in each case. The different Crypto APIs products require different query parameters\
    \ and variables. \r\n\r\nAfter the main URI parts, it is completed with a component\
    \ and after that - parameters.\r\n\r\n_**Example:**_\r\n\r\n../address/${litecoinValidAddress}\r\
    \n\r\n\r\n### URI Naming Standards\r\n\r\nURIs have to follow the naming standards\
    \ as listed below:\r\n\r\n- the URI has to be written in all lower cases, except\
    \ when a specific string requires capital letters;\r\n- the path parameter must\
    \ use spinal-case ( a hyphen - ) to separate words, e.g. **/v2/blockchain-data**;\r\
    \n- the query parameters must use camelCase to differentiate words, e.g. **/v2/blockchain-data/bitcoin/addresses?offset=10&limit=0**;\r\
    \n- the variables must use camelCase to differentiate words, e.g. **/v2/blockchain-data/bitcoin/addresses/${bitcoinValidAddress}**;\r\
    \n- all URLs must be **HTTPS** - secured, using only HTTP is not accepted.\r\n\
    \r\n\r\n### URI Maximum Length\r\n\r\nThe entire URI cannot exceed 2000 characters\
    \ in length including any punctuation marks, e.g. commas, hyphens, question marks,\
    \ pluses or forward slashes.\r\n\r\n\r\n## Request and Response Standards\r\n\r\
    \n### Basic API Request \r\n\r\nMain prerequisites for requests to the Crypto\
    \ APIs include:\r\n\r\n- requests are sent through HTTPS only to the domain **rest.cryptoapis.io**;\r\
    \n- headers must by default incorporate the JSON content type **application/json**;\r\
    \n- all custom for Crypto APIs attributes are indicated in the beginning with\
    \ an `x-`, e.g. `x-attribute`;\r\n- request public attributes must be all camelCase,\
    \ e.g. `\"apiVersion\": 2`, `\"attributeName\": \"attributeValue\"`;\r\n- we enable\
    \ CORS (Cross-Origin Resource Sharing), for which the API responds with an `Access-Control-Allow-Origin:`\
    \ header. **Nevertheless**, your users **shouldn’t make** direct API requests\
    \ from a web application that you are building, as our CORS policy may change\
    \ at some point without warning and any such requests could be then rejected;\r\
    \n- no random unspecified keys can be added to the Crypto APIs URI, e.g. `?randomKey=randomUnspecifiedValue`,\
    \ as that will result in a 400 error;\r\n- all requests to the Crypto APIs **must**\
    \ be authenticated with an API key. Clients can generate API keys through their\
    \ dedicated [Dashboards](https://my.cryptoapis.io/api-keys) only after product\
    \ subscription. Multiple API keys can be generated for a single user. To see more\
    \ information on Authentication, please see the respective [article](https://developers.cryptoapis.io/technical-documentation/general-information/authentication);\r\
    \n- API keys must be kept secure and private by the users who own them. API keys\
    \ **must not** be uploaded to a frontend of a mobile or web application or in\
    \ any open source code, as API keys represent access to the user’s account and\
    \ the data inside.\r\n\r\n{tip}Best to use one API key for testing and integration\
    \ purposes, and a separate one for production, known to only a limited number\
    \ of people.{/tip}\r\n\r\nShortly put, all Crypto APIs requests include:\r\n\r\
    \n```\r\nREST API Base URL: https://rest.cryptoapis.io\r\nAPI Version: /v2/\r\n\
    Authentication (API Key + JSON)\r\nRequest Type (GET, POST, PUT, PATCH, DELETE)\r\
    \n```\r\n\r\nOur API Requests incorporate the following HTTP methods:\r\n\r\n\
    | HTTP method | Definition |\r\n|:---:|:---:|\r\n| GET | Retrieve a specified\
    \ resource/information from the server. |\r\n| POST | Send data to the server\
    \ and requests to accept it. |\r\n| PUT | Updates a resource. |\r\n| PATCH | Partially\
    \ updates a resource. |\r\n| DELETE | Deletes a resource. |\r\n\r\n**POST** requests\
    \ always contain the following body structure:\r\n\r\n\r\n```\r\n{\r\n\t\"apiVersion\"\
    : \"2.0\", // The current API version.\r\n\t\"context\": \"You can add any text\
    \ here.\", // Optional: In case you send this value in the request.\r\n\t\"data\"\
    : { // Contains the request parameters.\r\n\t\t\"item\": { // Single item’s details.\r\
    \n\t\t\t\"endpointAttribute\": \"value\" // Parameter data.\r\n\t\t}\r\n\t}\r\n\
    }\r\n```\r\n\r\nIf an endpoint has no parameters, the body structure has less\
    \ data:\r\n\r\n```\r\n{\r\n\t\"apiVersion\": \"2.0\", // The current API version.\r\
    \n\t\"context\": \"You can add any text here\", // Optional: In case you send\
    \ this value in the request.\r\n\t\"data\": { // Contains the request parameters.\r\
    \n\t\t\"item\": { } // Single item’s details.\r\n\t}\r\n}\r\n```\r\n\r\n\r\n\r\
    \n### Basic API Response\r\n\r\nResponses to Crypto APIs requests prerequisites:\
    \ \r\n\r\n- response public attributes must be all camelCase, e.g. `”apiVersion”\
    : 2`, `”customAttribute”: \"customAttribute\"`;\r\n- Crypto APIs requests always\
    \ return the following parameters:\r\n\r\n```\r\n{\r\n \"apiVersion\": \"\",\r\
    \n    \"requestId\": \"\",\r\n    \"context\": \"\",\r\n    \"data\": {\r\n  \
    \      \"item\": {\r\n              }\r\n    }\r\n}\r\n```\r\n\r\n- `apiVersion`\
    \ reflects the version of the software used, currently it is V2;\r\n- `requestId`\
    \ is a unique code used with the purposes of tracking, support, etc.;\r\n- the\
    \ attribute `data` always contains the result, no matter of the quantity of items\
    \ in it;\r\n- the attribute `item` specifies the response’s result indicating\
    \ there is only a single one, when listed as `items` it means there are two or\
    \ more results, i.e. a list of results, in the response;\r\n- all calculated prices\
    \ are always in USD currency;\r\n- we use pagination methods to limit the results\
    \ in the response, specifically on responses that can potentially return hundreds\
    \ or thousands of results, please see more information in our [Data Flow Limiting\
    \ section](https://developers.cryptoapis.io/technical-documentation/general-information/data-flow-limiting).\r\
    \n- each response header contains the following keys, which define the user’s\
    \ credit usage, to see more information on credits, please see our [API Credential\
    \ Use section](https://developers.cryptoapis.io/technical-documentation/general-information/authentication#api-credential-usage-credits):\r\
    \n\r\n```\r\n“x-credits-consumed”\r\n“x-credits-available”\r\n“x-response-time”\
    \r\n```\r\n\r\n\r\n### The `context` parameter\r\n\r\nThe `context` parameter\
    \ is an optional attribute created with the idea to facilitate users when they\
    \ make requests in bulk.\r\n\r\nThey can set the `context` attribute as a string\
    \ with simple text of their choosing. Afterwards each returned information will\
    \ contain the specific `context` string of its associated request. Through this\
    \ process users can keep track of the responses that come in.\r\n\r\nFor **GET**\
    \ requests the attribute can be set as a query parameter. For **POST** requests\
    \ it can be set as a query or body parameter. In the latter scenario there’s a\
    \ safety measure embedded in case the user sets `context` as both a query and\
    \ body parameter - the system will then take into account the body `context` attribute.\r\
    \n\r\n\r\n\r\n## Error and HTTP Code Standards\r\n\r\nThe full list of Errors\
    \ you can see on our [respective page](https://developers.cryptoapis.io/technical-documentation/general-information/errors-and-api-status).\
    \ \r\n\r\nThe errors we use follow the HTTP Error Codes Standard. \r\n\r\n| HTTP\
    \ Status Code | Error it represents |\r\n|:---:|:---:|\r\n|3xx | Redirection Error\
    \ |\r\n|4xx | Client Error |\r\n|5xx | Server Error |\r\n\r\n\r\nThe structure\
    \ of the error **always** returns the following values, as listed and described\
    \ in the example:\r\n\r\n\r\n_**Example:**_\r\n\r\n```\r\n{\r\n    \"apiVersion\"\
    : \"\", // The current API Version.\r\n    \"requestId\": \"\", // Each request\
    \ has a unique ID, for which the Support team could ask for when contacted.\r\n\
    \    \"context\": \"\", // Optional: In case you send this value in your request.\r\
    \n    \"error\": {\r\n        \"code\": \"\", // Error Code, please check our\
    \ [Errors page](https://developers.cryptoapis.io/technical-documentation/general-information/errors-and-api-statuserrors)\
    \ to see the full list of error codes.\r\n        \"message\": \"\", // Is the\
    \ human readable error message.\r\n        \"details\": \"\" // Optional: Some\
    \ errors may need more details.\r\n    }\r\n}\r\n```\r\n\r\n\r\n## Date and Time\
    \ Formats\r\n\r\nFor all required endpoints that use a time parameter, the accepted\
    \ value is `timestamp` which is always UTC-based by definition. The human date\
    \ which corresponds to the `timestamp` is always converted by the system to UNIX\
    \ Epoch time and returned as an integer.\r\n\r\n_**Example:**_\r\n\r\nHuman time:\
    \ 09:12:41 AM 28th January 2021\r\n\r\nWhich corresponds to:\r\n\r\nUNIX Epoch\
    \ time: 1611825161\r\n\r\nHence the system will return `”timestamp”: 1611825161`\
    \ and not the human time.\r\n\r\nThe UNIX Epoch time is a system that describes\
    \ a point in time. This would be the amount of time in seconds that have passed\
    \ since the Unix Epoch which was 00:00:00 UTC on 1 January 1970, minus leap seconds."
  name: Standards and Conventions
- description: "## Callbacks and Main Terminology\r\n\r\nLet's first define some main\
    \ vocabulary related to callbacks that will make the process easier to talk about.\r\
    \n\r\n\r\n### Callback\r\n\r\nShortly put, a “callback” is a POST request sent\
    \ from Crypto APIs to a customer’s Callback URL when an event they have already\
    \ subscribed for occurs.\r\n\r\nNow with a bit more detail, a “callback” is used\
    \ to describe an event reaction process where a user receives notifications on\
    \ certain events by having first subscribed to them in the system. The term has\
    \ become interchangeable with the word “webhook”, used to describe the same thing.\
    \ The callback is a way for the system to avoid customers constantly calling the\
    \ Crypto API to check for an update or event they may be expecting. Callbacks\
    \ can be very useful for customers who expect, track or want to be notified about\
    \ the state of transactions on the blockchain.\r\n\r\nThere are two sides of the\
    \ callback - the server side and the customer side. The process follows the customer\
    \ side subscribing for an event on the server side and the server side notifying\
    \ the customer side when that event is completed. \r\n\r\nWith Crypto APIs there\
    \ are endpoints which will lead to callbacks. These include, but are not limited\
    \ to [Blockchain Events](https://cryptoapis.io/products/blockchain-events) and\
    \ [Blockchain Automations](https://cryptoapis.io/products/blockchain-automations).\r\
    \n\r\n\r\n### Callback Events\r\n#### Definition\r\n\r\nSpecific processes are\
    \ considered an “event”. Simply put, an “event” is something that occurs on the\
    \ Blockchain or Crypto Market. Crypto APIs incorporates various endpoints which\
    \ hold different characteristics. You can see endpoints that represent events\
    \ to which users can subscribe for a callback on our [API Reference page](https://developers.cryptoapis.io/technical-documentation).\
    \ Such supported for callback endpoints are displayed with an arrow icon next\
    \ to them to easily view Callback request parameters and response examples.\r\n\
    \r\n#### Types\r\n\r\nThere are a number of different event types. As a Callback\
    \ event the following are considered:\r\n\r\n- New Block;\r\n- New Incoming Transaction;\r\
    \n- New Outgoing Transaction;\r\n- New Confirmation;\r\n- Already Forwarded Coins,\
    \ and more.\r\n\r\n\r\n### Callback URL\r\n\r\nCallbacks require what is known\
    \ as a **”Callback URL”**. It is the destination where Crypto APIs sends the callback\
    \ notification for the event. Setting up this URL is done entirely on the customer’\
    s side and is the first step to setting up a Callback. \r\n\r\n{note}Crypto APIs\
    \ requires the setup and **verification** of a domain to base a Callback URL on\
    \ for security purposes, i.e. proof of access. Crypto APIs **will not** send callbacks\
    \ to unverified domains, websites or URLs.{/note}\r\n\r\nLet’s see the main steps\
    \ the customer needs to take in order to set up their Callback URL:\r\n\r\n1.\
    \ First and foremost, the user must verify a domain they have access to in general.\
    \ This is done in their [Crypto APIs Dashboard](https://my.cryptoapis.io/). The\
    \ customer has to upload a unique code, provided to them by the Crypto APIs Dashboard,\
    \ to the frontend of their website.\r\n\r\n2. Afterwards, the customer can click\
    \ to Verify in the Dashboard. AT that point Crypto APIs will make a request to\
    \ the specified domain name and check for the code. When it is located, Crypto\
    \ APIs verifies the domain. If it is not found in the frontend, the domain will\
    \ not be verified.\r\n\r\nAfter the domain is verified, then the user can set\
    \ a specific URL destination to serve as the Callback URL.\r\n\r\n{warning}Please\
    \ pay attention to the domain you verify. If your Callback URL is going to contain\
    \ a subdomain, please verify the main domain name along with the sub domain.{/warning}\r\
    \n\r\n_**Example:**_\r\n\r\nDomain to verify: **”mypage.mydomain.com”**\r\nCallback\
    \ URL to set: **“mypage.mydomain.com/login/callback”**\r\nCannot use URL: **“\
    mydomain.com/login/callback”**\r\n\r\nDomain to verify: **”mydomain.com”**\r\n\
    Callback URL to set: **“mydomain.com/login/callback”**\r\nCannot use URL: **“\
    mypage.mydomain.com/login/callback”**\r\n\r\n{note}It is most important that the\
    \ user has access to the Callback URL they set, in order for them to be able to\
    \ access/see the callback notification when received.{/note}\r\n\r\n\r\n## Crypto\
    \ APIs Callback basics\r\n\r\nCrypto APIs Callbacks follow certain basics and\
    \ the same standard that applies to all callback subscriptions.\r\n\r\n- Callback\
    \ requests sent from Crypto APIs are **always** POST;\r\n- All Crypto APIs headers\
    \ must by default incorporate the JSON content type **application/json**;\r\n\
    - All Crypto API Callbacks incorporate the use of a Callback URL, without exceptions;\r\
    \n- A customer can subscribe for a callback to as many supported events as they\
    \ want, as many times as needed;\r\n- The callback functionality in Crypto APIs\
    \ is identical throughout every product and endpoint that supports it;\r\n- The\
    \ callback request from Crypto APIs to the customer includes the exact information\
    \ and parameters as requested by the customer when they first set up the subscription,\
    \ which are included in the `data` parameter of the code; \r\n- The attribute\
    \ `x-signature` is a custom for Crypto APIs parameter, as indicated with the `x-`\
    \ in the beginning;\r\n- The structure of the Callback is always the same no matter\
    \ the subscription or type of event.\r\n\r\n\r\n## Callback standard structure\r\
    \n\r\nThe callback structure has the following constant parameters:\r\n\r\n```\r\
    \n{\r\n    \"apiVersion\": \"2.0\", //**Represents the current Crypto APIa version,\
    \ which is v2.**\r\n    \"referenceId\": \"2921e3df-c671-4d20-b51b-d176d5c1e43g\"\
    , //**Represents the unique reference identifier of the callback.**\r\n    \"\
    idempotencyKey\": \"3b3359d0ccdb1d3d3ca8dbaa79cb5395b33c5bc52d782f3ea22904abef45d1j4\"\
    , //**Specifies a unique ID used by Crypto APIs to recognize consecutive requests\
    \ with the same data so that not to perform the same operation twice.**\r\n  \
    \  \"data\": { //**Includes information and details on the callback, dependent\
    \ on the customer’s secret.**\r\n        \"product\": \"BLOCKCHAIN_EVENTS\", //**Specifies\
    \ the product for which the event occurs.**\r\n        \"event\": \"BLOCK_MINED\"\
    , //**Specifies the actual event type, for which the callback subscription was\
    \ made.\r\n        \"item\": { //**Includes all customer-specific details for\
    \ the callback.**\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### API Versions\
    \ and `apiVersion`\r\n\r\nThe structure of the callback the customer will receive\
    \ depends on the version of the Crypto API. Currently, we use **v2**. When the\
    \ user sets a subscription for an event while on v2 of the software, the callback\
    \ will be returned according to v2 specifics. \r\n\r\nEach time we update our\
    \ API to a next version, the customer would need to reset their event subscriptions\
    \ so that they correspond to the newest software version currently in use. To\
    \ do that the customer would need to remove the event subscription and set it\
    \ up again. Otherwise, the callback response will be received in the format of\
    \ the older API version it was set up in.\r\n\r\n{warning}This versioning-callback\
    \ dependency **does not** apply to v1 of the Crypto APIs software, only to v2+.{/warning}\r\
    \n\r\n\r\n### Reference ID and `referenceId`\r\n\r\nThe `referenceId` indicates\
    \ a reference to the subscription that has been made by the customer. It is a\
    \ unique code applicable only for that subscription. Each time a customer sets\
    \ up an automation or event subscription, the corresponding callback always has\
    \ a parameter `referenceId`. \r\n\r\n\r\n### Idempotency and `idempotentKey`\r\
    \n\r\nIdempotency represents a process in computing and REST which a server uses\
    \ to recognize subsequent retries of the same request where the returned result\
    \ always remains the same. It is a security mechanism for retrying requests without\
    \ the risk of performing the same operation more than once.\r\n\r\nSuch risks\
    \ usually can occur when an API call is for some reason disrupted during processing\
    \ (e.g. network connection error) and a response is not returned. In such cases\
    \ the API call would be retried. By including an **`idempotencyKey`** in the initial\
    \ request there is guarantee that the specific action won’t be done more than\
    \ once.\r\n\r\nThe `idempotencyKey` is generated only on the server-end in the\
    \ use of Crypto APIs Callbacks. It is added to the Callback request and is unique\
    \ per initial callback request. `idempotencyKey` values are generated randomly.\
    \ \r\n\r\nAll original requests containing an `idempotencyKey`, along with their\
    \ body and response status code (both success and error), are saved by the system.\
    \ After that, any subsequent requests containing the same `idempotencyKey` will\
    \ automatically return the same result. \r\n\r\n\r\n## Setting up callbacks\r\n\
    \r\nCallbacks combine certain elements and steps needed to be able to create a\
    \ correct reaction and on-time notification.\r\n\r\nTheir way of work includes\
    \ the customer to first set up their callback subscription, and later on, whenever\
    \ the subscription event occurs, for the Crypto APIs to notify the customer. All\
    \ steps are taken through API Requests and Responses.\r\n\r\n1. **Customer sets\
    \ up Callback URL** \r\n\r\n The customer must first have a [verified domain and\
    \ set up Callback URL](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).\r\
    \n\r\n2. **Customer subscribes for an event**\r\n\r\n After verifying their domain,\
    \ the customer has to send a request to Crypto APIs in order to subscribe for\
    \ a callback on a certain event. The customer can subscribe to as many events\
    \ they want, as many times as they need.\r\n\r\n When the customer sends their\
    \ request to subscribe for an event the system must return a response. If there\
    \ is no problem, where otherwise an error would result, the response from Crypto\
    \ APIs would be “201 New resource successfully created”. Then it is confirmed\
    \ that the callback subscription for that particular event has been set up.\r\n\
    \r\n If the subscription setup has failed, it will return an error, e.g. **Error\
    \ 409 Conflict**. If an error is returned, there is a mistake or issue with the\
    \ customer’s request. It must be then fixed so that Crypto APIs can return a successful\
    \ response. \r\n\r\n3. **Crypto APIs sends the Callback as a request**\r\n\r\n\
    \ Crypto APIs’ responsibility to the customer is to notify them according to their\
    \ subscription for that particular event or events **only when it/they occur**.\
    \ Whenever the event happens Crypto APIs sends a request back to the customer\
    \ that includes the data on the event, as requested by the customer. This is essentially\
    \ the “callback” itself. If the callback is not confirmed by the customer side\
    \ with a “200 OK” response, the system will follow a specific retry strategy.\r\
    \n\r\nIt is important to also clarify that subscribing for an event and setting\
    \ a callback for it **does not** necessarily mean that the callback will occur\
    \ soon or even at all. We do everything possible to make sure that callbacks have\
    \ no delays, errors, or issues, and are received as the events occur. \r\n\r\n\
    Still, not receiving a callback for a subscribed event for a long time could be\
    \ due to many reasons. There may be events that need to take days, weeks or months\
    \ to occur even just once, and some that may encounter problems, errors, issues,\
    \ and never happen at all.\r\n\r\n{warning}A user will **not receive** a notification,\
    \ an email, a message, a report or any other kind of alert for an event they have\
    \ subscribed for, when the event has not occurred or will not happen at all, regardless\
    \ of how much time has passed since the setup of the callback. Setting up a callback\
    \ ensures the obligation of the system towards the customer to notify them **only\
    \ when** the event happens.{/warning}\r\n\r\n{warning}Users might at times receive\
    \ a notification for a callback event more than once, due to many Workers processing\
    \ those. Make sure you use [idempotency](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#idempotency-and-codeidempotentkeycode)\
    \ and you can also log processed events only once without processing such that\
    \ are already-logged.{/warning}\r\n\r\n\r\n### Callback Retries\r\n\r\nWhen the\
    \ callback request is sent from Crypto APIs it expects a response from the customer\
    \ side, as well. \r\n\r\nUntil a status code “200 OK Request has been successful”\
    \ is received, Crypto APIs will keep retrying the request. There will be 3 retries\
    \ in total distributed at certain intervals.\r\n\r\n - Crypto APIs will send the\
    \ requested callback when it’s time and a customer response is expected in the\
    \ first 5 seconds;\r\n- If a response isn’t received during that time frame the\
    \ system is prepared to send **in total 3** retries of the callback;\r\n- The\
    \ first callback retry will be send after 30 min;\r\n- After that, each following\
    \ callback will take twice as long to be sent compared to the previous one. This\
    \ is done with the purpose to extend the time during which the customer can at\
    \ all receive the notification and its retries and provide opportunity for the\
    \ customer to send a “200 OK” response;\r\n- Additionally, there’s an included\
    \ **“random value”** into the algorithm as a factor of **”0.2”**, which creates\
    \ small but important fluctuations in the time frames between callback retries.\
    \ This ensures that when large volumes of callbacks are sent they would not be\
    \ in bulk due to having the same time frames, which could otherwise lead to crashes\
    \ and server issues.\r\n\r\n{note}Time frames in the system are measured in seconds,\
    \ e.g. first callback retry will be send after 30 min = 1800 sec.{/note}\r\n\r\
    \n{warning}If after all callback retries from Crypto APIs there is no successful\
    \ response from the customer, the callback will end up in a final error and terminate.\
    \ The system will mark all Blockchain Event subscriptions for the same event type,\
    \ which have the same callback URL and same webhook ID, as \"disabled\".{/warning}\
    \ \r\n\r\n\r\n## Callback Security\r\n\r\nCrypto APIs has incorporated a security\
    \ layer to keep callbacks from being intercepted, duplicated and make sure customers\
    \ are receiving their callbacks only from Crypto APIs.\r\n\r\n\r\n### Customer’\
    s Secret Key\r\n\r\nThe customer’s request can include data on the event they\
    \ want to subscribe for and has the option to also have a `callbackSecretKey`.\
    \ This parameter is an optional security measure for the benefit of the customer.\
    \ The `callbackSecretKey` can only be generated by the customer. It is used to\
    \ create a unique hash string in the `x-signature` response header in the callback\
    \ request sent from  Crypto APIs when the event occurs.\r\n\r\nThe `callbackSecretKey`,\
    \ and thus the `x-signature`, are set up per event subscription, not per single\
    \ callback. Hence the customer only needs to set up the `callbackSecretKey` once\
    \ when subscribing for an event. They can use a single `callbackSecretKey` for\
    \ all subscriptions, or different ones for each subscription. The security is\
    \ effective enough even with just one common `callbackSecretKey`.\r\n\r\n{warning}Please\
    \ note that though using the `callbackSecretKey` is an optional step, we recommend\
    \ it for security purposes! Not using a `callbackSecretKey` means that no security\
    \ layer will be applied to your callbacks.{/warning}\r\n\r\n\r\n### Callback Signature\r\
    \n\r\nIn the case a customer has included a `callbackSecretKey` in their request\
    \ to Crypto APIs, the callback (Crypto APIs' request to the customer) includes\
    \ a specific `x-signature` value which is for verification purposes. It is used\
    \ by the customer to verify the information they receive is in actuality really\
    \ coming from Crypto APIs and not a scam.\r\n\r\nThe `x-signature` is provided\
    \ in the header of the callback and represents a unique hash derived from all\
    \ the information included in the callback about the event (which must be JSON\
    \ encoded) and the customer’s `callbackSecretKey`.\r\n\r\nFor the purpose HMAC_SHA256\
    \ is used. It stands for Hash-based message authentication code and along with\
    \ its cryptographic hash function SHA256 it represents higher security than any\
    \ other authentication code.\r\n\r\nThe cryptographic strength of the HMAC depends\
    \ upon the size of the `callbackSecretKey` that has been used. The most common\
    \ attack against HMACs is brute force to uncover that secret key. HMACs are substantially\
    \ less affected by collisions than their underlying hashing algorithms alone.\r\
    \n\r\nWhen the customer receives the callback request from Crypto APIs, they can\
    \ first check the `x-signature` before processing the request. By using their\
    \ `callbackSecretKey`, which only they would know, together with the information\
    \ from the callback they can generate a hash and compare it to the `x-signature`\
    \ hash that the Crypto APIs server has returned. They **must** match which only\
    \ then would authenticate Crypto APIs as the true sender. \r\n\r\nAfter authentication\
    \ of the callback, the customer can then proceed to processing it. If the authentication\
    \ with the `x-signature` fails, then the customer **must** ignore it as someone\
    \ else is sending it.\r\n\r\n_**Example:**_\r\n\r\nHMAC_SHA256 (`callbackSecretKey`,\
    \ `The quick brown fox jumps over the lazy dog`) = f7bc83f430538424b13298e6aa6fb143ef4d59a14946175997479dbg2d1a3cd8\r\
    \n\r\n`callbackSecretKey` - Represents an optional string the customer can send\
    \ into their request when they create the callback subscription.\r\n`The quick\
    \ brown fox jumps over the lazy dog` - Represents everything we post in the body\
    \ of the server side callback request.\r\n`f7bc83f430538424b13298e6aa6fb143ef4d59a14946175997479dbg2d1a3cd8`\
    \ - Represents the resulting hash sent in the header (value name: `x-signature`)\
    \ of the post request.\r\n\r\n\r\n## Callback data returned for UTXO-based transactions\r\
    \n\r\nCalbacks return more specific information in regards to UTXO-based transactions\
    \ (BTC). This specification applies to the following events:\r\n\r\n- [New unconfirmed\
    \ coins transactions](https://developers.cryptoapis.io/technical-documentation/blockchain-events/create-subscriptions-for/new-unconfirmed-coins-transactions);\r\
    \n- [New confirmed coins transactions](https://developers.cryptoapis.io/technical-documentation/blockchain-events/create-subscriptions-for/new-confirmed-coins-transactions);\r\
    \n- [New confirmed coins transactions and each confirmation](https://developers.cryptoapis.io/technical-documentation/blockchain-events/create-subscriptions-for/new-confirmed-coins-transactions-and-each-confirmation).\r\
    \n\r\nFor:\r\n\r\n- **1 occurrence of the address in the input** - in the callback\
    \ we send the amount and the type is outgoing;\r\n- **1 occurrence of address\
    \ in output** - in the callback we send the amount and the type is incoming;\r\
    \n- **2+ occurrences of address in inputs** - in the callback we send the total\
    \ calculated amount and the type is outgoing;\r\n- **2+ occurrences of address\
    \ in outputs** - in the callback we send the total calculated amount and the type\
    \ is incoming;\r\n- **1 occurrence of address in input AND 1 occurrence of address\
    \ in output** - in the callback we send the amount in the **input** and the type\
    \ is outgoing;\r\n- **2+ occurrences of address in input AND 1 occurrence of address\
    \ in output** - in the callback we send the total calculated amount in the **input**\
    \ and the type is outgoing;\r\n- **1 occurrence of address in input AND 2+ occurrences\
    \ of address in output** - in the callback we send the amount in the **input**\
    \ and the type is outgoing;\r\n- **2+ occurrences of address in input AND 2+ occurrence\
    \ of address in output** - in the callback we send the total calculated amount\
    \ in the **input** and the type is outgoing."
  name: Callbacks
- description: "Using Crypto APIs Blockchain Data Unified Endpoints you can get information\
    \ from all supported blockchain protocols in the same unified way. \r\n\r\nUnified\
    \ endpoints have the same data on the main level and varying attributes depedning\
    \ on the selected Blockchain, e.g. Bitcoin, Etehreum, Litecoin, etc."
  name: Unified Endpoints
- description: "A hierarchical deterministic (HD) wallet is a digital wallet commonly\
    \ used to store the digital keys for holders of cryptocurrencies, e.g. Bitcoin,\
    \ Ethereum, etc. Anyone with a copy of both the public and password-like private\
    \ key can control the cryptocurrency in their account. This also refers to xPub,\
    \ yPub and zPub. Through our HD Wallet endpoints customers can sync HD wallets,\
    \ obtain HD wallet details, list HD wallet transactions, and more."
  name: HD Wallets
- description: "You can use Automatic coins forwarding to automatically forward **coins**\
    \ to your main address. These endpoints apply **only to coins, not tokens**.\r\
    \n\r\nA `feePriority` will be returned which represents the fee priority of the\
    \ automation whether it is \"SLOW\", \"STANDARD\" OR \"FAST\". The higher the\
    \ priority, the higher the fee.\r\n\r\nThe response of this endpoint contains\
    \ an attribute fromAddress which can be used as a deposit address. Any funds received\
    \ by this address will be automatically forwarded to toAddress based on what the\
    \ customer has set for the automation."
  name: Automatic Coins Forwarding
- description: "You can use Automatic coins forwarding to automatically forward **tokens**\
    \ to your main address. These endpoints apply **only to tokens, not coins**. Currently\
    \ we support **only** fungible tokens (ERC-20), NFTs (ERC-721) are **not** supported.\r\
    \n\r\nA `feePriority` will be returned which represents the fee priority of the\
    \ automation whether it is \"SLOW\", \"STANDARD\" OR \"FAST\". The higher the\
    \ priority, the higher the fee.\r\n\r\nThe response of this endpoint contains\
    \ an attribute fromAddress which can be used as a deposit address. Any funds received\
    \ by this address will be automatically forwarded to toAddress based on what the\
    \ customer has set for the automation."
  name: Automatic Tokens Forwarding
- description: "With Crypto APIs and Blockchain Events you can set up subscriptions\
    \ to receive a callback whenever a specific events occurs. Various endpoints are\
    \ available for callback subscription. Callback subscription can be set from the\
    \ Crypto APIs Dashboard. They require a Callback URL where the actual callback\
    \ will be received at.\r\n\r\nCrypto APIs Callbacks will be sent along with a\
    \ retry logic if the first one is not accepted by the customer's end.\r\n\r\n\
    Note, that a Callback will be sent only when the event occurs. In some cases this\
    \ may take a long time, in others it may never even happen. This is not up to\
    \ Crypto APIs.\r\n\r\nIt is important to note that in order to set a valid and\
    \ working Callback subscription, the domain for the Callback URL must be first\
    \ verified.\r\n\r\nTo see more information on Callbacks and how they operate,\
    \ please see our dedicated [documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks)."
  name: Create Subscriptions for
- description: "Manage subscriptions set for event callbacks. These could include\
    \ listing subscriptions set for the user, deleting subscriptions, etc.\r\n\r\n\
    Note, that a Callback will be sent only when the event occurs. In some cases this\
    \ may take a long time, in others it may never even happen. This is not up to\
    \ Crypto APIs.\r\n\r\nIt is important to note that in order to set a valid and\
    \ working Callback subscription, the domain for the Callback URL must be first\
    \ verified.\r\n\r\nTo see more information on Callbacks and how they operate,\
    \ please see our dedicated [documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks)."
  name: Manage Subscriptions
- description: "Crypto APIs useful features and tools for blockchain and crypto operations.\
    \ Users can utilize these endpoints to validate addresses, broadcast transactions\
    \ and more."
  name: Features
- description: "We support ERC-20, ERC-721 standards on Ethereum and Omni Layer on\
    \ Bitcoin. You can see the full list on [our website](https://cryptoapis.io/)."
  name: Tokens
- description: "This section represents only endpoints related to XRP (Ripple) blockchain\
    \ protocol, relating to obtaining information on transactions, addresses and blocks."
  name: XRP (Ripple)
- description: This section represents only endpoints related to Omni Layer  exchanges.
  name: Omni Layer
- description: "Through these endpoints customers can obtain detailed information\
    \ about assets supported by Crypto APIs, bot crypto and fiat. This is part of\
    \ the Market Data product."
  name: Assets
- description: Use these endpoints to obtain information about cryptocurrency and
    blockchain exchange rates. This is part of the Market Data product.
  name: Exchange Rates
- description: "Here customers can list meta information about supported assets, both\
    \ crypto and fiat. This is part of the Market Data product."
  name: Metadata
- description: Here customers can check information about internal transactions.
  name: Internal
- description: This category displays Wallet-as-a-Service endpoints which can be used
    to generate addresses for a Wallet.
  name: Generating
- description: This category displays Wallet-as-a-Service endpoints which can be used
    to create transactions.
  name: Transactions
- description: This category displays Wallet-as-a-Service endpoints which can be used
    to obtain information for the Wallet such as list deposit addresses.
  name: Informative
- description: "This category displays endpoints that can provide users with data\
    \ directly from the Zilliqa blockchain. This can include obtaining transaction\
    \ details per block hash, block height, transaction ID, address. Get data on latest\
    \ mined block and address details."
  name: Zilliqa
- description: "Endpoints in this category tag create a shortcut to obtain information\
    \ from Blockchain data by going through Blockchain Events and the specific Events\
    \ Subscription they take part in. The system makes a check in customers'  Callbacks\
    \ for the details. If the provided attribute is correct and the customer is in\
    \ fact related to the data, further information is obtained from Blockchain data."
  name: Callback Data
- description: "## Crypto APIs API Versioning\r\n\r\nAn additional feature in the\
    \ Crypto APIs system allows us to generate new API versions of our endpoints each\
    \ time backwards-incompatible changes have been made to them. Versions are generally\
    \ titled with a date and \"stable\" versions are marked as such.\r\n\r\nYou can\
    \ try out new features and changes in our newer versions not marked as \"stable\"\
    .\r\n\r\nOur technical documentation lists all available API versions. To view\
    \ a specific one, select it from the drop down menu.\r\n\r\nAll requests use your\
    \ account's API version, unless you override the API version with a header.\r\n\
    \r\nTo set the API version on a specific request, send an `X-API-Version` header.\r\
    \n\r\nAs a precaution, use API versioning to test a new API version before committing\
    \ to an upgrade."
  name: API Versioning
paths:
  /blockchain-tools/{blockchain}/{network}/address/convert:
    post:
      description: Through this endpoint customers will be able to convert addresses
        for the BCH (Bitcoin Cash) protocol from BCH legacy to cash address and vice
        versa.
      operationId: Convert Bitcoin Cash Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin-cash
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin-cash
          example: bitcoin-cash
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertBitcoinCashAddressRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertBitcoinCashAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Convert Bitcoin Cash Address
      tags:
      - Features
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/addresses/{address}/balance:
    get:
      description: "Through this endpoint the customer can receive the balance of\
        \ a given address based on confirmed/synced blocks only. In the case where\
        \ there are any incoming or outgoing unconfirmed transactions for the specific\
        \ address, they will not be counted or calculated here. Applies only for coins."
      operationId: Get Address Balance
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - bitcoin-cash
          - litecoin
          - dash
          - dogecoin
          - xrp
          - tron
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: goerli
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          example: goerli
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: 0x0902a667d6a3f287835e0a4593cae4167384abc6
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: 0x0902a667d6a3f287835e0a4593cae4167384abc6
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressBalanceR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Balance_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Balance_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Balance_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Address Balance
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/addresses/{address}:
    get:
      description: "Through this endpoint the customer can receive basic information\
        \ about a given address based on confirmed/synced blocks only. In the case\
        \ where there are any incoming or outgoing **unconfirmed** transactions for\
        \ the specific address, they **will not** be counted or calculated here. Applies\
        \ only for coins."
      operationId: Get Address Details
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressDetailsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Details_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Details_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Details_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Address Details
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/xrp-specific/{network}/addresses/{address}:
    get:
      description: "Through this endpoint the customer can receive basic information\
        \ about a given XRP address based on confirmed/synced blocks only. In the\
        \ case where there are any incoming or outgoing **unconfirmed** transactions\
        \ for the specific address, they **will not** be counted or calculated here.\r\
        \n\r\nSince XRP is a different blockchain than Bitcoin and Ethereum, it isn't\
        \ unified."
      operationId: Get XRP (Ripple) Address Details
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\",  are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\",  are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetXRPRippleAddressDetailsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Address_Details_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Address_Details_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Address_Details_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get XRP (Ripple) Address Details
      tags:
      - XRP (Ripple)
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/zilliqa-specific/{network}/addresses/{address}:
    get:
      description: Through this endpoint customers can obtain information address
        details from the Zilliqa blockchain.
      operationId: Get Zilliqa Address Details
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          example: mainnet
          type: string
        style: simple
      - description: Defines the specific transaction's address.
        example: zil17v9gs6ctn9pq6wka8k668umdlaj88nrfej7rnm
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: Defines the specific transaction's address.
          example: zil17v9gs6ctn9pq6wka8k668umdlaj88nrfej7rnm
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZilliqaAddressDetailsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Address_Details_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Address_Details_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Address_Details_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Zilliqa Address Details
      tags:
      - Zilliqa
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/transactions/{transactionId}:
    get:
      description: Through this endpoint customers can obtain details about a transaction
        by the transaction's unique identifier. In UTXO-based protocols like BTC there
        are attributes such as `transactionId` and transaction `hash`. They still
        could be different. In protocols like Ethereum there is only one unique value
        and it's `hash`.
      operationId: Get Transaction Details By Transaction ID
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the unique identifier of a transaction, i.e. it could\
          \ be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
          \ `hash` in Ethereum blockchain."
        example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_404_response'
          description: The specified transaction has not been found on the specific
            blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Transaction Details By Transaction ID
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/xrp-specific/{network}/transactions/{transactionHash}:
    get:
      description: "Through this endpoint customers can obtain details about a XRP\
        \ transaction by the transaction's unique identifier. \r\n\r\nSince XRP is\
        \ a different blockchain than Bitcoin and Ethereum, it isn't unified."
      operationId: Get XRP (Ripple) Transaction Details By Transaction ID
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: "Represents the same as `transactionId` for account-based protocols\
          \ like Ethereum, while it could be different in UTXO-based protocols like\
          \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
          \ for SegWit transactions."
        example: 36a1737481edec87bacc3101dfb752ae2c76f9171e7edebe587e330c1ea77c8d
        explode: false
        in: path
        name: transactionHash
        required: true
        schema:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 36a1737481edec87bacc3101dfb752ae2c76f9171e7edebe587e330c1ea77c8d
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: Resource not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get XRP (Ripple) Transaction Details By Transaction ID
      tags:
      - XRP (Ripple)
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}/addresses:
    get:
      description: "Through this endpoint customers can pull a list of Deposit/Receiving\
        \ Addresses they have already generated.\r\n\r\n{note}Please note that listing\
        \ data from the same type will apply pagination on the results.{/note}"
      operationId: List Deposit Addresses
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zcash
          - binance-smart-chain
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          - mumbai
          example: testnet
          type: string
        style: simple
      - description: Represents the unique ID of the specific Wallet.
        example: 60c9d9921c38030006675ff6
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Represents the unique ID of the specific Wallet.
          example: 60c9d9921c38030006675ff6
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDepositAddressesR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Deposit_Addresses_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Deposit_Addresses_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Deposit_Addresses_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Deposit Addresses
      tags:
      - Informative
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
    post:
      description: Through this endpoint customers can generate a new Receiving/Deposit
        Addresses into their Wallet.
      operationId: Generate Deposit Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zcash
          - binance-smart-chain
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          - mumbai
          example: testnet
          type: string
        style: simple
      - description: Represents the unique ID of the specific Wallet.
        example: 60c9d9921c38030006675ff6
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Represents the unique ID of the specific Wallet.
          example: 60c9d9921c38030006675ff6
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateDepositAddressRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateDepositAddressR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generate_Deposit_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generate_Deposit_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generate_Deposit_Address_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Generate Deposit Address
      tags:
      - Generating
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/zilliqa-specific/{network}/transactions/{transactionHash}:
    get:
      description: Through this endpoint customers can obtain transaction details
        on the Zilliqa blockchain by providing a Transaction ID parameter.
      operationId: Get Zilliqa Transaction Details by Transaction ID
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          example: mainnet
          type: string
        style: simple
      - description: String identifier of the transaction
        example: 0xe649afbe2849c70a7a8b3087bee2c7b2fa0b6b77ab658b4fff390a1d06f0a8bc
        explode: false
        in: path
        name: transactionHash
        required: true
        schema:
          description: String identifier of the transaction
          example: 0xe649afbe2849c70a7a8b3087bee2c7b2fa0b6b77ab658b4fff390a1d06f0a8bc
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Transaction_Details_by_Transaction_ID_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Transaction_Details_by_Transaction_ID_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Transaction_Details_by_Transaction_ID_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_404_response'
          description: The specified transaction has not been found on the specific
            blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Zilliqa Transaction Details by Transaction ID
      tags:
      - Zilliqa
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/addresses/{address}/transactions:
    get:
      description: "This endpoint will list transactions by an attribute `address`.\
        \ The transactions listed will detail additional information such as hash,\
        \ height, time of creation in Unix timestamp, etc."
      operationId: List Confirmed Transactions By Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum-classic
          - ethereum
          - binance-smart-chain
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfirmedTransactionsByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Transactions_By_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Transactions_By_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Transactions_By_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Confirmed Transactions By Address
      tags:
      - Unified Endpoints
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/xrp-specific/{network}/addresses/{address}/transactions:
    get:
      description: "This endpoint will list XRP transactions by a attribute `address`.\
        \ The transactions listed will detail additional information such as hash,\
        \ height, time of creation in Unix timestamp, etc.\r\n\r\nSince XRP is a different\
        \ blockchain than Bitcoin and Ethereum, it isn't unified."
      operationId: List XRP (Ripple) Transactions by Address
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      - example: payment
        explode: true
        in: query
        name: transactionType
        required: false
        schema:
          enum:
          - account-set
          - account-delete
          - check-cancel
          - check-cash
          - check-create
          - deposit-preauth
          - escrow-cancel
          - escrow-create
          - escrow-finish
          - offer-cancel
          - offer-create
          - payment
          - payment-channel-claim
          - payment-channel-create
          - payment-channel-fund
          - set-regular-key
          - signer-list-set
          - ticket-create
          - trust-set
          example: payment
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_by_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_by_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_by_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List XRP (Ripple) Transactions by Address
      tags:
      - XRP (Ripple)
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}/transaction-requests:
    post:
      callbacks:
        TRANSACTION_REQUEST_APPROVAL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_APPROVAL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestApproval'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_REJECTION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_REJECTION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestRejection'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_BROADCASTED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_BROADCASTED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestBroadcasted'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_MINED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_MINED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestMined'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint users can create a new transaction request\
        \ from the entire Wallet instead from just a specific address. This endpoint\
        \ can generate transactions from multiple to multiple addresses.\r\n\r\n{warning}This\
        \ is available **only** for UTXO-based protocols such as Bitcoin, Bitcoin\
        \ Cash, Litecoin, etc. It **is not** available for Account-based protocols\
        \ like Ethereum.{/warning}"
      operationId: Create Coins Transaction Request from Wallet
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          default: testnet
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: Represents the sender's specific and unique Wallet ID of the
          sender.
        example: 609e221675d04500068718dc
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Represents the sender's specific and unique Wallet ID of the
            sender.
          example: 609e221675d04500068718dc
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_Request_from_Wallet_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_Request_from_Wallet_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_Request_from_Wallet_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_Request_from_Wallet_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Create Coins Transaction Request from Wallet
      tags:
      - Transactions
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/zilliqa-specific/{network}/addresses/{address}/transactions:
    get:
      description: Through this endpoint customers can list transactions on the Zilliqa
        blockchain by the address parameter.
      operationId: List Zilliqa Transactions by Address
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          example: mainnet
          type: string
        style: simple
      - description: Defines the specific address of the sender.
        example: zil17v9gs6ctn9pq6wka8k668umdlaj88nrfej7rnm
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: Defines the specific address of the sender.
          example: zil17v9gs6ctn9pq6wka8k668umdlaj88nrfej7rnm
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListZilliqaTransactionsByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_by_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_by_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_by_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Zilliqa Transactions by Address
      tags:
      - Zilliqa
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/address-transactions-unconfirmed/{address}:
    get:
      description: Through this endpoint customers can list transactions by `address`
        that are **unconfirmed**.
      operationId: List Unconfirmed Transactions by Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - zcash
          - binance-smart-chain
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: 2NDt6eztswLiVgVYaGUhkTPmugUGovVypAe
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: 2NDt6eztswLiVgVYaGUhkTPmugUGovVypAe
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unconfirmed_Transactions_by_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unconfirmed_Transactions_by_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unconfirmed_Transactions_by_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Unconfirmed Transactions by Address
      tags:
      - Unified Endpoints
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/xrp-specific/{network}/addresses/{address}/transactions-by-time-range:
    get:
      description: Тhis endpoint lists XRP transactions by the attribute `address`
        and the query parameters `fromTimestamp` and `toTimestamp`  which gives customers
        the opportunity to filter the results by a specified time period.
      operationId: List XRP (Ripple) Transactions By Address And Time Range
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines the specific time/date from which the results will start
          being listed.
        example: 1616347862
        explode: true
        in: query
        name: fromTimestamp
        required: true
        schema:
          description: Defines the specific time/date from which the results will
            start being listed.
          example: 1616347862
          type: integer
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      - description: Defines the specific time/date to which the results will be listed.
        example: 1616347870
        explode: true
        in: query
        name: toTimestamp
        required: true
        schema:
          description: Defines the specific time/date to which the results will be
            listed.
          example: 1616347870
          type: integer
        style: form
      - description: Defines the transaction type.
        example: payment
        explode: true
        in: query
        name: transactionType
        required: false
        schema:
          description: Defines the transaction type.
          enum:
          - account-set
          - account-delete
          - check-cancel
          - check-cash
          - check-create
          - deposit-preauth
          - escrow-cancel
          - escrow-create
          - escrow-finish
          - offer-cancel
          - offer-create
          - payment
          - payment-channel-claim
          - payment-channel-create
          - payment-channel-fund
          - set-regular-key
          - signer-list-set
          - ticket-create
          - trust-set
          example: payment
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressAndTimeRangeR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Address_And_Time_Range_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Address_And_Time_Range_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Address_And_Time_Range_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List XRP (Ripple) Transactions By Address And Time Range
      tags:
      - XRP (Ripple)
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/blocks/hash/{blockHash}/transactions:
    get:
      description: "This endpoint will list transactions by an attribute `transactionHash`.\
        \ The transactions listed will detail additional information such as addresses,\
        \ height, time of creation in Unix timestamp, etc."
      operationId: List Transactions by Block Hash
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - testnet
          - mainnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the hash of the block, which is its unique identifier.\
          \ It represents a cryptographic digital fingerprint made by hashing the\
          \ block header twice through the SHA256 algorithm."
        example: 00000000000000127080d8bcf84f4ad830a71ea0aadce3632579b6b2f26cd94b
        explode: false
        in: path
        name: blockHash
        required: true
        schema:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 00000000000000127080d8bcf84f4ad830a71ea0aadce3632579b6b2f26cd94b
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsByBlockHashR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Hash_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Hash_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Hash_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Transactions by Block Hash
      tags:
      - Unified Endpoints
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/xrp-specific/{network}/blocks/hash/{blockHash}/transactions:
    get:
      description: "This endpoint will list transactions by an attribute `blockHash`.\
        \ The transactions listed will detail additional information such as hash,\
        \ addresses, time of creation in Unix timestamp, etc.\r\n\r\nSince XRP is\
        \ a different blockchain than Bitcoin and Ethereum, it isn't unified."
      operationId: List XRP (Ripple) Transactions By Block Hash
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: "Represents the hash of the block, which is its unique identifier.\
          \ It represents a cryptographic digital fingerprint made by hashing the\
          \ block header twice through the SHA256 algorithm."
        example: 14754656235f865a74eba27791fd41a47bdfe07fe811ff6d78f53db32e129e39
        explode: false
        in: path
        name: blockHash
        required: true
        schema:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 14754656235f865a74eba27791fd41a47bdfe07fe811ff6d78f53db32e129e39
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Block_Hash_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Block_Hash_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Block_Hash_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List XRP (Ripple) Transactions By Block Hash
      tags:
      - XRP (Ripple)
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}/addresses/{address}/transaction-requests:
    post:
      callbacks:
        TRANSACTION_REQUEST_APPROVAL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_APPROVAL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestApproval'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_REJECTION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_REJECTION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestRejection'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_BROADCASTED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_BROADCASTED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestBroadcasted'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_MINED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_MINED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestMined'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: Through this endpoint users can create a new single transaction
        request from one address to another.
      operationId: Create Coins Transaction Request from Address
      parameters:
      - description: Defines the specific source address for the transaction. For
          XRP we also support the X-address format.
        example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: Defines the specific source address for the transaction. For
            XRP we also support the X-address format.
          example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          type: string
        style: simple
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - xrp
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          - mumbai
          example: ropsten
          type: string
        style: simple
      - description: Represents the sender's specific and unique Wallet ID of the
          sender.
        example: 609e221675d04500068718dc
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Represents the sender's specific and unique Wallet ID of the
            sender.
          example: 609e221675d04500068718dc
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_Request_from_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_Request_from_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_Request_from_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_Request_from_Address_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Create Coins Transaction Request from Address
      tags:
      - Transactions
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/zilliqa-specific/{network}/blocks/hash/{blockHash}/transactions:
    get:
      description: Through this endpoint customers can list transactions on the Zilliqa
        blockchain by the block hash parameter.
      operationId: List Zilliqa Transactions By Block Hash
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          example: mainnet
          type: string
        style: simple
      - description: "Represents the hash of the block, which is its unique identifier.\
          \ It represents a cryptographic digital fingerprint made by hashing the\
          \ block header twice through the SHA256 algorithm."
        example: 0x3160ca05ac12f60023de6b6987596eccbf084629f1a92b59534c5c021bf27041
        explode: false
        in: path
        name: blockHash
        required: true
        schema:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0x3160ca05ac12f60023de6b6987596eccbf084629f1a92b59534c5c021bf27041
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHashR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_By_Block_Hash_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_By_Block_Hash_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_By_Block_Hash_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Zilliqa Transactions By Block Hash
      tags:
      - Zilliqa
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/zilliqa-specific/{network}/blocks/height/{blockHeight}/transactions:
    get:
      description: Through this endpoint customers can list transactions on the Zilliqa
        blockchain by the block height parameter.
      operationId: List Zilliqa Transactions By Block Height
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          example: mainnet
          type: string
        style: simple
      - description: Represents the number of blocks in the blockchain preceding this
          specific block. Block numbers have no gaps. A blockchain usually starts
          with block 0 called the "Genesis block".
        example: 1250392
        explode: false
        in: path
        name: blockHeight
        required: true
        schema:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1250392
          type: integer
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHeightR'
          description: The request was successfully executed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_By_Block_Height_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_By_Block_Height_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Zilliqa_Transactions_By_Block_Height_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Zilliqa Transactions By Block Height
      tags:
      - Zilliqa
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/xrp-specific/{network}/blocks/height/{blockHeight}/transactions:
    get:
      description: "This endpoint will list transactions by an attribute `blockHeight`.\
        \ The transactions listed will detail additional information such as hash,\
        \ addresses, time of creation in Unix timestamp, etc.\r\n\r\nSince XRP is\
        \ a different blockchain than Bitcoin and Ethereum, it isn't unified."
      operationId: List XRP (Ripple) Transactions By Block Height
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - example: 15971358
        explode: false
        in: path
        name: blockHeight
        required: true
        schema:
          example: 15971358
          format: int64
          type: integer
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Block_Height_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Block_Height_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_XRP__Ripple__Transactions_By_Block_Height_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List XRP (Ripple) Transactions By Block Height
      tags:
      - XRP (Ripple)
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/blocks/height/{height}/transactions:
    get:
      description: "This endpoint will list transactions by an attribute `blockHeight`.\
        \ The transactions listed will detail additional information such as hash,\
        \ addresses, time of creation in Unix timestamp, etc."
      operationId: List Transactions by Block Height
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - dash
          - dogecoin
          - litecoin
          - bitcoin-cash
          - ethereum-classic
          - binance-smart-chain
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: Represents the number of blocks in the blockchain preceding this
          specific block. Block numbers have no gaps. A blockchain usually starts
          with block 0 called the "Genesis block".
        example: 673852
        explode: false
        in: path
        name: height
        required: true
        schema:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 673852
          format: int64
          type: integer
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsByBlockHeightR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Transactions by Block Height
      tags:
      - Unified Endpoints
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}/addresses/{address}/all-transaction-requests:
    post:
      callbacks:
        TRANSACTION_REQUEST_APPROVAL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_APPROVAL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestApproval'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_REJECTION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_REJECTION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestRejection'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_BROADCASTED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_BROADCASTED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestBroadcasted'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_MINED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_MINED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestMined'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create a new transaction from\
        \ address for **coins** specifically, which will transfer over the entire\
        \ available amount."
      operationId: Create Coins Transaction From Address For Whole Amount
      parameters:
      - description: Defines the source address.
        example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: Defines the source address.
          example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          type: string
        style: simple
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          - mumbai
          example: ropsten
          type: string
        style: simple
      - description: Represents the sender's specific and unique Wallet ID of the
          sender.
        example: 609e221675d04500068718dc
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Represents the sender's specific and unique Wallet ID of the
            sender.
          example: 609e221675d04500068718dc
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_From_Address_For_Whole_Amount_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_From_Address_For_Whole_Amount_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_From_Address_For_Whole_Amount_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Coins_Transaction_From_Address_For_Whole_Amount_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Create Coins Transaction From Address For Whole Amount
      tags:
      - Transactions
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/blocks/height/{height}:
    get:
      description: "Through this endpoint customers can obtain basic information about\
        \ a given mined block, specifically by using the `height` parameter. These\
        \ block details could include the hash of the specific, the previous and the\
        \ next block, its transactions count, its height, etc. \r\n\r\nBlockchain\
        \ specific data is information such as version, nonce, size, bits, merkleroot,\
        \ etc."
      operationId: Get Block Details By Block Height
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - ethereum-classic
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - binance-smart-chain
          - zcash
          - zilliqa
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: Represents the number of blocks in the blockchain preceding this
          specific block. Block numbers have no gaps. A blockchain usually starts
          with block 0 called the "Genesis block".
        example: 673852
        explode: false
        in: path
        name: height
        required: true
        schema:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 673852
          format: int64
          type: integer
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockDetailsByBlockHeightR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Height_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Height_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Height_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Block Details By Block Height
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/xrp-specific/{network}/blocks/height/{blockHeight}:
    get:
      description: "Through this endpoint customers can obtain basic information about\
        \ a given XRP block (a block on the XRP blockchain), specifically by using\
        \ the `height` parameter. These block details could include the hash of the\
        \ specific, the previous and the next block, its transactions count, etc.\r\
        \n\r\nSince XRP is a different blockchain than Bitcoin and Ethereum, it isn't\
        \ unified."
      operationId: Get XRP (Ripple) Block Details By Block Height
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\",  are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\",  are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: Represents the number of blocks in the blockchain preceding this
          specific block. Block numbers have no gaps. A blockchain usually starts
          with block 0 called the "Genesis block".
        example: "15886156"
        explode: false
        in: path
        name: blockHeight
        required: true
        schema:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: "15886156"
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Block_Details_By_Block_Height_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Block_Details_By_Block_Height_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Block_Details_By_Block_Height_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: Resource not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get XRP (Ripple) Block Details By Block Height
      tags:
      - XRP (Ripple)
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/zilliqa-specific/{network}/blocks/height/{blockHeight}:
    get:
      description: Through this endpoint customers can obtain block details from the
        Zilliqa blockchain by providing the block Height parameter.
      operationId: Get Zilliqa Block Details By Block Height
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          example: mainnet
          type: string
        style: simple
      - description: Represents the number of blocks in the blockchain preceding this
          specific block. Block numbers have no gaps. A blockchain usually starts
          with block 0 called the "Genesis block".
        example: 1244298
        explode: false
        in: path
        name: blockHeight
        required: true
        schema:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1244298
          type: integer
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHeightR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Block_Details_By_Block_Height_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Block_Details_By_Block_Height_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Block_Details_By_Block_Height_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Zilliqa Block Details By Block Height
      tags:
      - Zilliqa
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/blocks/hash/{blockHash}:
    get:
      description: "Through this endpoint customers can obtain basic information about\
        \ a given mined block, specifically by using the `hash` parameter. These block\
        \ details could include the hash of the specific, the previous and the next\
        \ block, its transactions count, its height, etc. \r\n\r\nBlockchain specific\
        \ data is information such as version, nonce, size, bits, merkleroot, etc."
      operationId: Get Block Details By Block Hash
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - ethereum-classic
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - binance-smart-chain
          - zcash
          - zilliqa
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the hash of the block, which is its unique identifier.\
          \ It represents a cryptographic digital fingerprint made by hashing the\
          \ block header twice through the SHA256 algorithm."
        example: 0000000006b3f483bec16b8a85c632bdd30a14a202c83a9148002c9ee441dd0c
        explode: false
        in: path
        name: blockHash
        required: true
        schema:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0000000006b3f483bec16b8a85c632bdd30a14a202c83a9148002c9ee441dd0c
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockDetailsByBlockHashR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Hash_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Hash_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Hash_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Block Details By Block Hash
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/xrp-specific/{network}/blocks/hash/{blockHash}:
    get:
      description: "Through this endpoint customers can obtain basic information about\
        \ a given XRP block (a block on the XRP blockchain), specifically by using\
        \ the `hash` parameter. These block details could include the hash of the\
        \ specific, the previous and the next block, the number of included transactions,\
        \ etc. \r\n\r\nSince XRP is a different blockchain than Bitcoin and Ethereum,\
        \ it isn't unified."
      operationId: Get XRP (Ripple) Block Details By Block Hash
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: "Represents the hash of the block, which is its unique identifier.\
          \ It represents a cryptographic digital fingerprint made by hashing the\
          \ block header twice through the SHA256 algorithm."
        example: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
        explode: false
        in: path
        name: blockHash
        required: true
        schema:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHashR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Block_Details_By_Block_Hash_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Block_Details_By_Block_Hash_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Block_Details_By_Block_Hash_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: Resource not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get XRP (Ripple) Block Details By Block Hash
      tags:
      - XRP (Ripple)
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/zilliqa-specific/{network}/blocks/hash/{blockHash}:
    get:
      description: Through this endpoint customers can obtain block details from the
        Zilliqa blockchain by providing the block Hash parameter.
      operationId: Get Zilliqa Block Details By Block Hash
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          example: mainnet
          type: string
        style: simple
      - description: "Represents the hash of the block, which is its unique identifier.\
          \ It represents a cryptographic digital fingerprint made by hashing the\
          \ block header twice through the SHA256 algorithm."
        example: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
        explode: false
        in: path
        name: blockHash
        required: true
        schema:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHashR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Block_Details_By_Block_Hash_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Block_Details_By_Block_Hash_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Zilliqa_Block_Details_By_Block_Hash_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Zilliqa Block Details By Block Hash
      tags:
      - Zilliqa
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /wallet-as-a-service/info/{blockchain}/{network}/supported-tokens:
    get:
      description: Through this endpoint customers can obtain information on multiple
        tokens at once.
      operationId: List Supported Tokens
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - tron
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          - mumbai
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSupportedTokensR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Supported_Tokens_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Supported_Tokens_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Supported_Tokens_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Supported Tokens
      tags:
      - Informative
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}:
    get:
      description: "Through this endpoint customers can obtain details on all assets\
        \ (coins, fungible tokens, non-fungible tokens) for the entire Wallet."
      operationId: Get Wallet Asset Details
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zcash
          - binance-smart-chain
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          - mumbai
          example: testnet
          type: string
        style: simple
      - description: Defines the unique ID of the Wallet.
        example: 60c9d9921c38030006675ff6
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Defines the unique ID of the Wallet.
          example: 60c9d9921c38030006675ff6
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWalletAssetDetailsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Wallet_Asset_Details_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Wallet_Asset_Details_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Wallet_Asset_Details_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Wallet Asset Details
      tags:
      - Informative
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}/addresses/{senderAddress}/token-transaction-requests:
    post:
      callbacks:
        TRANSACTION_REQUEST_APPROVAL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_APPROVAL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestApproval'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_REJECTION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_REJECTION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestRejection'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_BROADCASTED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_BROADCASTED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestBroadcasted'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_MINED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_MINED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestMined'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint users can make a single token transaction.\r\
        \n\r\n{note}To have an operational callback subscription, you need to first\
        \ verify a domain for the Callback URL. Please see more information on Callbacks\
        \ [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: Create Fungible Tokens Transaction Request from Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          default: ethereum
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          default: mainnet
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          - mumbai
          example: mainnet
          type: string
        style: simple
      - description: Defines the specific source address for the transaction.
        example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
        explode: false
        in: path
        name: senderAddress
        required: true
        schema:
          description: Defines the specific source address for the transaction.
          example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          type: string
        style: simple
      - description: Defines the unique ID of the Wallet.
        example: 609e221675d04500068718dc
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Defines the unique ID of the Wallet.
          example: 609e221675d04500068718dc
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Fungible_Tokens_Transaction_Request_from_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Fungible_Tokens_Transaction_Request_from_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Fungible_Tokens_Transaction_Request_from_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Fungible_Tokens_Transaction_Request_from_Address_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Create Fungible Tokens Transaction Request from Address
      tags:
      - Transactions
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /wallet-as-a-service/wallets/all-assets:
    get:
      description: "Through this endpoint customers can obtain information about available\
        \ assets in all of their wallets, regardless of the blockchain protocol or\
        \ network."
      operationId: List All Assets From All Wallets
      parameters:
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllAssetsFromAllWalletsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_All_Assets_From_All_Wallets_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_All_Assets_From_All_Wallets_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_All_Assets_From_All_Wallets_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List All Assets From All Wallets
      tags:
      - Informative
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /wallet-as-a-service/wallets/{walletId}/assets:
    get:
      description: "Through this endpoint customers can obtain information about available\
        \ assets in one of their wallets, regardless of the blockchain protocol or\
        \ network, by providing walletId."
      operationId: List All Assets By Wallet ID
      parameters:
      - description: Defines the unique ID of the Wallet.
        example: 60c9d9921c38030006675ff6
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Defines the unique ID of the Wallet.
          example: 60c9d9921c38030006675ff6
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllAssetsByWalletIDR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_All_Assets_By_Wallet_ID_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_All_Assets_By_Wallet_ID_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_All_Assets_By_Wallet_ID_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List All Assets By Wallet ID
      tags:
      - Informative
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/blocks/last:
    get:
      description: "Through this endpoint customers can fetch the last mined block\
        \ in a specific blockchain network, along with its details. These could include\
        \ the hash of the specific, the previous and the next block, its transactions\
        \ count, its height, etc. \r\n\r\nBlockchain specific data is information\
        \ such as version, nonce, size, bits, merkleroot, etc."
      operationId: Get Last Mined Block
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - ethereum-classic
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - binance-smart-chain
          - zcash
          - zilliqa
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLastMinedBlockR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Last_Mined_Block_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Last_Mined_Block_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Last_Mined_Block_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Last Mined Block
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/xrp-specific/{network}/blocks/last:
    get:
      description: "Through this endpoint customers can fetch the last mined XRP block\
        \ in the blockchain, along with its details. These could include the hash\
        \ of the specific, the previous and the next block, its transactions count,\
        \ its height, etc. \r\n\r\nSince XRP is a different blockchain than Bitcoin\
        \ and Ethereum, it isn't unified."
      operationId: Get Latest Mined XRP (Ripple) Block
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Latest_Mined_XRP__Ripple__Block_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Latest_Mined_XRP__Ripple__Block_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Latest_Mined_XRP__Ripple__Block_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: Resource not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Latest Mined XRP (Ripple) Block
      tags:
      - XRP (Ripple)
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/zilliqa-specific/{network}/blocks/last:
    get:
      description: "Through this endpoint users can obtain information on the latest\
        \ block that has been mined on the Zilliqa blockchain. Data could include\
        \ the current and previous block hashes, transaction count, and more."
      operationId: Get Latest Mined Zilliqa Block
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          example: mainnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLatestMinedZilliqaBlockR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Latest_Mined_Zilliqa_Block_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Latest_Mined_Zilliqa_Block_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Latest_Mined_Zilliqa_Block_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Latest Mined Zilliqa Block
      tags:
      - Zilliqa
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /wallet-as-a-service/transactionRequests/{transactionRequestId}:
    get:
      description: "Through this endpoint customers can obtain details on transaction\
        \ request.\r\n\r\n{note}This regards **transaction requests**, which is not\
        \ to be confused with **transactions**. Transaction requests may not be approved\
        \ due to any reason, hence a transaction may not occur.{/note}"
      operationId: Get Transaction Request Details
      parameters:
      - description: Represents the unique ID of the transaction request.
        example: 6115126693397c0006f78eb4
        explode: false
        in: path
        name: transactionRequestId
        required: true
        schema:
          description: Represents the unique ID of the transaction request.
          example: 6115126693397c0006f78eb4
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionRequestDetailsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Request_Details_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Request_Details_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Request_Details_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Transaction Request Details
      tags:
      - Informative
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}/addresses/{address}/feeless-transaction-requests:
    post:
      callbacks:
        TRANSACTION_REQUEST_APPROVAL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_APPROVAL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestApproval'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_REJECTION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_REJECTION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestRejection'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_BROADCASTED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_BROADCASTED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestBroadcasted'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_MINED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_MINED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestMined'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: Through this endpoint users can create a new single transaction
        request from one address to another. The difference between this endpoint
        and "Create Coins Transaction Request from Address"  is that for Tron blockchain
        there is no Fee Priority that defines how fast a transaction can be mined.
      operationId: Create Single Transaction Request From Address Without Fee Priority
      parameters:
      - description: Defines the specific source address for the transaction.
        example: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: Defines the specific source address for the transaction.
          example: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          type: string
        style: simple
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: tron
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - tron
          example: tron
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: nile
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - nile
          example: nile
          type: string
        style: simple
      - description: Represents the sender's specific and unique Wallet ID of the
          sender.
        example: 62b9b5c3b97f4b0008092714
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Represents the sender's specific and unique Wallet ID of the
            sender.
          example: 62b9b5c3b97f4b0008092714
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Single_Transaction_Request_From_Address_Without_Fee_Priority_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Single_Transaction_Request_From_Address_Without_Fee_Priority_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Single_Transaction_Request_From_Address_Without_Fee_Priority_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Single_Transaction_Request_From_Address_Without_Fee_Priority_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Create Single Transaction Request From Address Without Fee Priority
      tags:
      - Transactions
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/blocks/last/{count}:
    get:
      description: Through this endpoint customers can list **up to 50** from the
        latest blocks that were mined.
      operationId: List Latest Mined Blocks
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks"
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks"
          enum:
          - testnet
          - mordor
          - mainnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - ethereum-classic
          - ethereum
          - litecoin
          - dash
          - dogecoin
          - binance-smart-chain
          - zilliqa
          - zcash
          - xrp
          example: ethereum
          type: string
        style: simple
      - description: Specifies how many records were requested.
        example: 2
        explode: false
        in: path
        name: count
        required: true
        schema:
          description: Specifies how many records were requested.
          example: 2
          type: integer
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLatestMinedBlocksR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Latest_Mined_Blocks_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Latest_Mined_Blocks_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Latest_Mined_Blocks_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Latest Mined Blocks
      tags:
      - Unified Endpoints
      x-cost: 10
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/hd/sync:
    post:
      description: "HD wallets usually have a lot of addresses and transactions, getting\
        \ the data on demand is a heavy operation. That's why we have created this\
        \ feature, to be able to get HD wallet details or transactions this HD wallet\
        \ must be synced first. In addition to the initial sync we keep updating the\
        \ synced HD wallets all the time."
      operationId: "Sync HD Wallet (xPub, yPub, zPub)"
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - zcash
          - ethereum-classic
          - binance-smart-chain
          - xrp
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_HD_Wallet__xPub__yPub__zPub__400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_HD_Wallet__xPub__yPub__zPub__401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_HD_Wallet__xPub__yPub__zPub__403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_HD_Wallet__xPub__yPub__zPub__409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_HD_Wallet__xPub__yPub__zPub__422_response'
          description: "422"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "Sync HD Wallet (xPub, yPub, zPub)"
      tags:
      - HD Wallets
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}/transactions:
    get:
      description: "Through this endpoint customers can list Transactions from and\
        \ to their Wallet. The data returned will include `transactionId`, `direction`\
        \ of the transaction - incoming or outgoing, `amount` and more."
      operationId: List Wallet Transactions
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zcash
          - binance-smart-chain
          - tron
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          - mumbai
          example: ropsten
          type: string
        style: simple
      - description: Represents the unique ID of the specific Wallet.
        example: 60c9d9921c38030006675ff6
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Represents the unique ID of the specific Wallet.
          example: 60c9d9921c38030006675ff6
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWalletTransactionsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Wallet_Transactions_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Wallet_Transactions_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Wallet_Transactions_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Wallet Transactions
      tags:
      - Informative
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /wallet-as-a-service/wallets/{walletId}/{blockchain}/{network}/addresses/{senderAddress}/feeless-token-transaction-requests:
    post:
      callbacks:
        TRANSACTION_REQUEST_APPROVAL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_APPROVAL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestApproval'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_REJECTION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_REJECTION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestRejection'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_BROADCASTED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_BROADCASTED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestBroadcasted'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_MINED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_MINED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestMined'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TRANSACTION_REQUEST_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_REQUEST_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionRequestFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can make a single feeless token\
        \ transaction on the Tron blockchain protocol. TRX transactions burn certain\
        \ resources called Bandwidth and Energy. Each account has 1500 bandwidth free\
        \ for use every 24 hours and more can be obtained by staking TRX. The unit\
        \ price of Energy is 280 SUN and of bandwidth - 1000 SUN. If the resources\
        \ are insufficient, TRX will be burned to pay for them."
      operationId: Create Fungible Token Transaction Request From Address Without
        Fee Priority
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: tron
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - tron
          example: tron
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: nile
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - nile
          example: nile
          type: string
        style: simple
      - description: Defines the specific source address for the transaction.
        example: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
        explode: false
        in: path
        name: senderAddress
        required: true
        schema:
          description: Defines the specific source address for the transaction.
          example: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          type: string
        style: simple
      - description: Defines the unique ID of the Wallet.
        example: 62b9b5c3b97f4b0008092714
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          description: Defines the unique ID of the Wallet.
          example: 62b9b5c3b97f4b0008092714
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Fungible_Token_Transaction_Request_From_Address_Without_Fee_Priority_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Fungible_Token_Transaction_Request_From_Address_Without_Fee_Priority_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Fungible_Token_Transaction_Request_From_Address_Without_Fee_Priority_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Fungible_Token_Transaction_Request_From_Address_Without_Fee_Priority_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Create Fungible Token Transaction Request From Address Without Fee
        Priority
      tags:
      - Transactions
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /wallet-as-a-service/wallets/{blockchain}/{network}/transactions/{transactionId}:
    get:
      description: Through this endpoint users can obtain Wallet transaction information
        by providing a `transactionId`. Customers can receive information only for
        a transaction that has been made from their own wallet.
      operationId: Get Wallet Transaction Details By Transaction ID
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - litecoin
          - bitcoin-cash
          - ethereum-classic
          - dogecoin
          - dash
          - zcash
          - binance-smart-chain
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the unique identifier of a transaction, i.e. it could\
          \ be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
          \ `hash` in Ethereum blockchain."
        example: 3e081861494aed897e589cdeab5d9e628d985e571ed1c19896d1aa698cce9d80
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 3e081861494aed897e589cdeab5d9e628d985e571ed1c19896d1aa698cce9d80
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Wallet_Transaction_Details_By_Transaction_ID_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Wallet_Transaction_Details_By_Transaction_ID_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Wallet_Transaction_Details_By_Transaction_ID_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Wallet Transaction Details By Transaction ID
      tags:
      - Informative
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/transactions/{transactionHash}/internal:
    get:
      description: "Through this endpoint customers can list internal transactions\
        \ along with their details by a specific attribute `transactionHash`, which\
        \ is the parent transaction's Hash.\r\n\r\nAn internal transaction is the\
        \ result of a smart contract being triggered by an EOA or a subsequent contract\
        \ call."
      operationId: List Internal Transaction Details by Transaction Hash
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - binance-smart-chain
          - ethereum-classic
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: mainnet
          type: string
        style: simple
      - description: String identifier of the parent transaction of the internal transaction
          represented in CryptoAPIs.
        example: 0x5d4ea0471b70de09fa3d6a4bc32f703ec44483bffa4d6169fa0a36c6a1dc108a
        explode: false
        in: path
        name: transactionHash
        required: true
        schema:
          description: String identifier of the parent transaction of the internal
            transaction represented in CryptoAPIs.
          example: 0x5d4ea0471b70de09fa3d6a4bc32f703ec44483bffa4d6169fa0a36c6a1dc108a
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInternalTransactionDetailsByTransactionHashR'
          description: The request has been sussessful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transaction_Details_by_Transaction_Hash_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transaction_Details_by_Transaction_Hash_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transaction_Details_by_Transaction_Hash_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Internal Transaction Details by Transaction Hash
      tags:
      - internal
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/hd/sync-new:
    post:
      description: "Through this endpoint users can add a brand new xPub to the Crypto\
        \ APIs system to be ready for deriving. Unlike our other similar endpoint\
        \ “Sync HD Wallet (xPub, yPub, zPub)”, this endpoint does not create new addresses\
        \ nor syncs old data."
      operationId: "Sync New HD Wallet (xPub, yPub, zPub)"
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_New_HD_Wallet__xPub__yPub__zPub__400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_New_HD_Wallet__xPub__yPub__zPub__401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_New_HD_Wallet__xPub__yPub__zPub__403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_New_HD_Wallet__xPub__yPub__zPub__409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sync_New_HD_Wallet__xPub__yPub__zPub__422_response'
          description: "422"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "Sync New HD Wallet (xPub, yPub, zPub)"
      tags:
      - HD Wallets
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/transactions/{transactionHash}/internal/{operationId}:
    get:
      description: "Through this endpoint customers can obtain detailed information\
        \ about a specific Internal Transaction by using the attributes `transactionHash`\
        \  (the parent transaction's Hash) and `operationId` (type trace address).\r\
        \n\r\nAn internal transaction is the result of a smart contract being triggered\
        \ by an EOA or a subsequent contract call."
      operationId: Get Internal Transaction by Transaction Hash and Operation Id
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - binance-smart-chain
          - ethereum-classic
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mainnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: mainnet
          type: string
        style: simple
      - description: Represents the unique internal transaction ID in regards to the
          parent transaction (type trace address).
        example: call_4
        explode: false
        in: path
        name: operationId
        required: true
        schema:
          description: Represents the unique internal transaction ID in regards to
            the parent transaction (type trace address).
          example: call_4
          type: string
        style: simple
      - description: String identifier of the parent transaction of the internal transaction
          represented in CryptoAPIs.
        example: 0x92bb77e16444e0417c8b50dfab68e89c7ad27d4140a766c3bbd4d0ac195f12fc
        explode: false
        in: path
        name: transactionHash
        required: true
        schema:
          description: String identifier of the parent transaction of the internal
            transaction represented in CryptoAPIs.
          example: 0x92bb77e16444e0417c8b50dfab68e89c7ad27d4140a766c3bbd4d0ac195f12fc
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInternalTransactionByTransactionHashAndOperationIdR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Internal_Transaction_by_Transaction_Hash_and_Operation_Id_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Internal_Transaction_by_Transaction_Hash_and_Operation_Id_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Internal_Transaction_by_Transaction_Hash_and_Operation_Id_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Internal_Transaction_by_Transaction_Hash_and_Operation_Id_404_response'
          description: The specified internal transaction has not been found on the
            specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Internal Transaction by Transaction Hash and Operation Id
      tags:
      - internal
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/addresses/{address}/internal:
    get:
      description: Through this endpoint customers can list internal transactions
        by the `address` attribute.
      operationId: List Internal Transactions By Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: String identifier of the address document represented in CryptoAPIs
        example: 0xc8fe2ceac93ad50e496b497357ae5385192dd28d
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: String identifier of the address document represented in CryptoAPIs
          example: 0xc8fe2ceac93ad50e496b497357ae5385192dd28d
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInternalTransactionsByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transactions_By_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transactions_By_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transactions_By_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Internal Transactions By Address
      tags:
      - internal
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/hd/derive-and-sync:
    post:
      description: "Through this endpoint users can derive 100 receiving addresses,\
        \ starting from the last index we have data for, which are then added to the\
        \ xPub, subscribed for syncing, and start recording data. If no data is available,\
        \ it will start from index 0."
      operationId: Derive And Sync New Receiving Addresses
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesR'
          description: Successfull Request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_And_Sync_New_Receiving_Addresses_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_And_Sync_New_Receiving_Addresses_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_And_Sync_New_Receiving_Addresses_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Derive And Sync New Receiving Addresses
      tags:
      - HD Wallets
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/hd/derive-sync-change:
    post:
      description: "Through this endpoint users can derive 100 change addresses, starting\
        \ from the last index we have data for, which are then added to the xPub,\
        \ subscribed for syncing, and start recording data. If no data is available,\
        \ it will start from index 0."
      operationId: Derive And Sync New Change Addresses
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesR'
          description: Successfull Request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_And_Sync_New_Change_Addresses_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_And_Sync_New_Change_Addresses_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_And_Sync_New_Change_Addresses_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Derive And Sync New Change Addresses
      tags:
      - HD Wallets
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/mempool/fees:
    get:
      description: "Through this endpoint customers can obtain fee recommendations.\
        \ Our fees recommendations are based on Mempool data which makes them much\
        \ more accurate than fees based on already mined blocks. Calculations are\
        \ done in real time live. Using this endpoint customers can get gas price\
        \ for Ethereum, fee per byte for Bitcoin, etc."
      operationId: Get Fee Recommendations
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - ethereum-classic
          - bitcoin-cash
          - dogecoin
          - dash
          - litecoin
          - binance-smart-chain
          - zcash
          - xrp
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeeRecommendationsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Fee_Recommendations_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Fee_Recommendations_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Fee_Recommendations_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Fee Recommendations
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/hd/{extendedPublicKey}/synced-addresses:
    get:
      description: "Through this endpoint users can list all addresses that Crypto\
        \ APIs has synced for a specific xPub. This includes previous and current/new\
        \ xPubs, what addresses we’ve synced for them, etc."
      operationId: List Synced Addresses
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          example: ethereum
          type: string
        style: simple
      - description: Defines the account extended publicly known key which is used
          to derive all child public keys.
        example: tpubD9GMECjiZHCaF9NHSMAeMbQMXnM7CviEJZsYBuztVwsUjPHWjxewWAUXWV2UExaAtoEvQGXDBmVWo6ZHGtj6TsH6Pop7D9DskQwGHA1gu1w
        explode: false
        in: path
        name: extendedPublicKey
        required: true
        schema:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: tpubD9GMECjiZHCaF9NHSMAeMbQMXnM7CviEJZsYBuztVwsUjPHWjxewWAUXWV2UExaAtoEvQGXDBmVWo6ZHGtj6TsH6Pop7D9DskQwGHA1gu1w
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines the address format value.
        example: standard
        explode: true
        in: query
        name: addressFormat
        required: false
        schema:
          description: Defines the address format value.
          enum:
          - p2pkh
          - p2sh
          - p2wpkh
          - p2pkh-cash
          - p2sh-cash
          - standard
          - classic
          example: standard
          type: string
        style: form
      - description: Defines if the address is change addres or not.
        example: false
        explode: true
        in: query
        name: isChangeAddress
        required: false
        schema:
          default: true
          description: Defines if the address is change addres or not.
          example: false
          type: boolean
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSyncedAddressesR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Synced_Addresses_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Synced_Addresses_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Synced_Addresses_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Synced Addresses
      tags:
      - HD Wallets
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/addresses/{address}/next-available-nonce:
    get:
      description: "Through this endpoint customers can get information about the\
        \ next available nonce by providing the specific blockchain, network and address."
      operationId: Get Next Available Nonce
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: 0x626b046b0ce356f248b215b01b459f8b8d59e1a4
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: 0x626b046b0ce356f248b215b01b459f8b8d59e1a4
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNextAvailableNonceR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Next_Available_Nonce_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Next_Available_Nonce_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Next_Available_Nonce_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Next Available Nonce
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/addresses/{address}/unspent-outputs:
    get:
      description: Through this endpoint customers can list their transactions' unspent
        outputs by `address`.
      operationId: List Unspent Transaction Outputs By Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dash
          - dogecoin
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - testnet
          - mainnet
          example: testnet
          type: string
        style: simple
      - description: Represents the address that has unspend funds per which the result
          is returned.
        example: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: Represents the address that has unspend funds per which the
            result is returned.
          example: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnspentTransactionOutputsByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unspent_Transaction_Outputs_By_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unspent_Transaction_Outputs_By_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unspent_Transaction_Outputs_By_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Unspent Transaction Outputs By Address
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/hd/{extendedPublicKey}/transactions:
    get:
      description: This endpoint will list HD Wallet transactions.
      operationId: "List HD Wallet (xPub, yPub, zPub) Transactions"
      parameters:
      - description: Represents the specific blockchain.
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: Represents the specific blockchain.
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - zcash
          - ethereum-classic
          - binance-smart-chain
          - xrp
          example: bitcoin
          type: string
        style: simple
      - description: Defines the master public key (xPub) of the account.
        example: tpubD9GMECjiZHCaF9NHSMAeMbQMXnM7CviEJZsYBuztVwsUjPHWjxewWAUXWV2UExaAtoEvQGXDBmVWo6ZHGtj6TsH6Pop7D9DskQwGHA1gu1w
        explode: false
        in: path
        name: extendedPublicKey
        required: true
        schema:
          description: Defines the master public key (xPub) of the account.
          example: tpubD9GMECjiZHCaF9NHSMAeMbQMXnM7CviEJZsYBuztVwsUjPHWjxewWAUXWV2UExaAtoEvQGXDBmVWo6ZHGtj6TsH6Pop7D9DskQwGHA1gu1w
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: "The way how the HD walled derives, for example when the type\
          \ is ACCOUNT, it derives change and receive addresses while when the type\
          \ is BIP32 it derives directly."
        explode: true
        in: query
        name: derivation
        required: false
        schema:
          description: "The way how the HD walled derives, for example when the type\
            \ is ACCOUNT, it derives change and receive addresses while when the type\
            \ is BIP32 it derives directly."
          enum:
          - account
          - bip32
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_HD_Wallet__xPub__yPub__zPub__Transactions_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_HD_Wallet__xPub__yPub__zPub__Transactions_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_HD_Wallet__xPub__yPub__zPub__Transactions_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_HD_Wallet__xPub__yPub__zPub__Transactions_422_response'
          description: "422"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "List HD Wallet (xPub, yPub, zPub) Transactions"
      tags:
      - HD Wallets
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/transactions/{transactionHash}/tokens-transfers:
    get:
      description: "Through this endpoint customers can obtain a list with token transfers\
        \ by the `transactionHash` attribute. Token transfers may include information\
        \ such as addresses of the sender and recipient, token name, token symbol,\
        \ etc.\r\n\r\n{note}This refers only to transfers done for **tokens** not\
        \ coins.{/note}"
      operationId: List Tokens Transfers By Transaction Hash
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Ethereum Classic, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Ethereum Classic, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: "Represents the hash of the transaction, which is its unique\
          \ identifier. It represents a cryptographic digital fingerprint made by\
          \ hashing the block header twice through the SHA256 algorithm."
        example: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
        explode: false
        in: path
        name: transactionHash
        required: true
        schema:
          description: "Represents the hash of the transaction, which is its unique\
            \ identifier. It represents a cryptographic digital fingerprint made by\
            \ hashing the block header twice through the SHA256 algorithm."
          example: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensTransfersByTransactionHashR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_Transfers_By_Transaction_Hash_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_Transfers_By_Transaction_Hash_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_Transfers_By_Transaction_Hash_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Tokens Transfers By Transaction Hash
      tags:
      - Tokens
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/addresses/{address}/transactions-by-time-range:
    get:
      description: This endpoint will list confirmed transactions by the attribute
        `address` and the query parameters `fromTimestamp` and `toTimestamp` which
        gives customers the opportunity to filter the results by a specified time
        period.
      operationId: List Confirmed Transactions By Address And Time Range
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum-classic
          - ethereum
          - binance-smart-chain
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines the specific time/date from which the results will start
          being listed.
        example: 1236238648
        explode: true
        in: query
        name: fromTimestamp
        required: true
        schema:
          description: Defines the specific time/date from which the results will
            start being listed.
          example: 1236238648
          type: integer
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      - description: Defines the specific time/date to which the results will be listed.
        example: 1644417868
        explode: true
        in: query
        name: toTimestamp
        required: true
        schema:
          description: Defines the specific time/date to which the results will be
            listed.
          example: 1644417868
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Transactions_By_Address_And_Time_Range_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Transactions_By_Address_And_Time_Range_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Transactions_By_Address_And_Time_Range_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Confirmed Transactions By Address And Time Range
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/addresses/{address}/tokens-transfers-by-time-range:
    get:
      description: "Through this endpoint customers can obtain a list with **confirmed**\
        \ token transfers by the `address` attribute and the query parameters `fromTimestamp`\
        \ and `toTimestamp` which gives customers the opportunity to filter the results\
        \ by a specified time period.\r\n\r\n{note}This refers only to transfers done\
        \ for **confirmed tokens** not coins.{/note}"
      operationId: List Confirmed Tokens Transfers By Address And Time Range
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Ethereum Classic, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Ethereum Classic, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines the specific time/date from which the results will start
          being listed.
        example: 1236238648
        explode: true
        in: query
        name: fromTimestamp
        required: true
        schema:
          description: Defines the specific time/date from which the results will
            start being listed.
          example: 1236238648
          type: integer
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      - description: Defines the specific time/date to which the results will be listed.
        example: 1644417868
        explode: true
        in: query
        name: toTimestamp
        required: true
        schema:
          description: Defines the specific time/date to which the results will be
            listed.
          example: 1644417868
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressAndTimeRangeR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Tokens_Transfers_By_Address_And_Time_Range_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Tokens_Transfers_By_Address_And_Time_Range_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Tokens_Transfers_By_Address_And_Time_Range_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Confirmed Tokens Transfers By Address And Time Range
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/addresses/{address}/internal-by-time-range:
    get:
      description: Through this endpoint customers can list internal transactions
        by the `address` attribute and the query parameters `fromTimestamp` and `toTimestamp`  which
        gives customers the opportunity to filter the results by a specified time
        period.
      operationId: List Internal Transactions By Address And Time Range
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: String identifier of the address document represented in CryptoAPIs
        example: 0xc8fe2ceac93ad50e496b497357ae5385192dd28d
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: String identifier of the address document represented in CryptoAPIs
          example: 0xc8fe2ceac93ad50e496b497357ae5385192dd28d
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines the specific time/date from which the results will start
          being listed.
        example: 1635979828
        explode: true
        in: query
        name: fromTimestamp
        required: true
        schema:
          description: Defines the specific time/date from which the results will
            start being listed.
          example: 1635979828
          type: integer
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      - description: Defines the specific time/date to which the results will be listed.
        example: 1643329896
        explode: true
        in: query
        name: toTimestamp
        required: true
        schema:
          description: Defines the specific time/date to which the results will be
            listed.
          example: 1643329896
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInternalTransactionsByAddressAndTimeRangeR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transactions_By_Address_And_Time_Range_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transactions_By_Address_And_Time_Range_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Internal_Transactions_By_Address_And_Time_Range_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Internal Transactions By Address And Time Range
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/addresses/{address}/tokens-transfers:
    get:
      description: "Through this endpoint customers can obtain a list with **confirmed**\
        \ token transfers by the `address` attribute. Token transfers may include\
        \ information such as addresses of the sender and recipient, token name, token\
        \ symbol, etc.\r\n\r\n{note}This refers only to transfers done for **confirmed\
        \ tokens** not coins.{/note}"
      operationId: List Confirmed Tokens Transfers By Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Ethereum Classic, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Ethereum Classic, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Tokens_Transfers_By_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Tokens_Transfers_By_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Confirmed_Tokens_Transfers_By_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Confirmed Tokens Transfers By Address
      tags:
      - Tokens
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/hd/{extendedPublicKey}/utxos:
    get:
      description: Through this endpoint you can list HD wallet's UTXOs (Unspent Transaction
        Outputs) by providing extended public key of an already synced HD wallet.
      operationId: "List HD Wallet (xPub, yPub, zPub) UTXOs"
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: Defines the account extended publicly known key which is used
          to derive all child public keys.
        example: tpubDDCs6jf3Tg8VTts6EBCNpibVanPQpSkmYRLAXVvuhcuC6ZcbYtEizqERj8D4TBukuvjNSjtjEbKYdtFuRG5WuisrirZG9m5L8wUvf4bHhgQ
        explode: false
        in: path
        name: extendedPublicKey
        required: true
        schema:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: tpubDDCs6jf3Tg8VTts6EBCNpibVanPQpSkmYRLAXVvuhcuC6ZcbYtEizqERj8D4TBukuvjNSjtjEbKYdtFuRG5WuisrirZG9m5L8wUvf4bHhgQ
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: "The way how the HD walled derives, for example when the type\
          \ is ACCOUNT, it derives change and receive addresses while when the type\
          \ is BIP32 it derives directly."
        example: account
        explode: true
        in: query
        name: derivation
        required: false
        schema:
          description: "The way how the HD walled derives, for example when the type\
            \ is ACCOUNT, it derives change and receive addresses while when the type\
            \ is BIP32 it derives directly."
          enum:
          - account
          - bip32
          example: account
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHDWalletXPubYPubZPubUTXOsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_HD_Wallet__xPub__yPub__zPub__UTXOs_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_HD_Wallet__xPub__yPub__zPub__UTXOs_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_HD_Wallet__xPub__yPub__zPub__UTXOs_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_HD_Wallet__xPub__yPub__zPub__UTXOs_422_response'
          description: "422"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "List HD Wallet (xPub, yPub, zPub) UTXOs"
      tags:
      - HD Wallets
      x-cost: 5
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/transactions/{transactionId}/raw-data:
    get:
      description: Through this endpoint customers can get information on a transaction
        in its raw format by providing its `transactionId`.
      operationId: Get Raw Transaction Data
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: "Represents the unique identifier of a transaction, i.e. it could\
          \ be transactionId in UTXO-based protocols like Bitcoin, and transaction\
          \ hash in Ethereum blockchain."
        example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be transactionId in UTXO-based protocols like Bitcoin, and transaction\
            \ hash in Ethereum blockchain."
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRawTransactionDataR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Raw_Transaction_Data_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Raw_Transaction_Data_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Raw_Transaction_Data_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_404_response'
          description: The specified transaction has not been found on the specific
            blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Raw Transaction Data
      tags:
      - Unified Endpoints
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/addresses/{address}/tokens-transfers-unconfirmed:
    get:
      description: "Through this endpoint customers can obtain a list with **unconfirmed**\
        \ token transfers by the `address` attribute. Token transfers may include\
        \ information such as addresses of the sender and recipient, token name, token\
        \ symbol, etc.\r\n\r\n{note}This refers only to transfers done for **unconfirmed\
        \ tokens** not coins.{/note}"
      operationId: List Unconfirmed Tokens Transfers By Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Ethereum Classic, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Ethereum Classic, etc."
          enum:
          - ethereum
          - ethereum-classic
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnconfirmedTokensTransfersByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unconfirmed_Tokens_Transfers_By_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unconfirmed_Tokens_Transfers_By_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Unconfirmed_Tokens_Transfers_By_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Unconfirmed Tokens Transfers By Address
      tags:
      - Tokens
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/addresses/{address}/tokens:
    get:
      description: "Through this endpoint customers can obtain token data by providing\
        \ an attribute - `address`.  The information that can be returned can include\
        \ the contract address, the token symbol, type and balance."
      operationId: List Tokens By Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Ethereum Classic, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Ethereum Classic, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensByAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_By_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_By_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_By_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Tokens By Address
      tags:
      - Tokens
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-data/{blockchain}/{network}/estimate-transaction-smart-fee:
    get:
      description: "Through this endpoint, customers can estimate the approximate\
        \ fee per kilobyte needed for a transaction to begin confirmation within the\
        \ `confirmationTarget` blocks when possible. After which it will return the\
        \ number of blocks for which the estimate is valid."
      operationId: Estimate Transaction Smart Fee
      parameters:
      - example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          enum:
          - bitcoin
          - litecoin
          - dash
          example: bitcoin
          type: string
        style: simple
      - example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - testnet
          - mainnet
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Integer representation of confirmation target in blocks that
          estimation will be valid for
        example: 2
        explode: true
        in: query
        name: confirmationTarget
        required: false
        schema:
          description: Integer representation of confirmation target in blocks that
            estimation will be valid for
          example: 2
          type: integer
        style: form
      - description: String representation of the address
        example: economical
        explode: true
        in: query
        name: estimateMode
        required: false
        schema:
          description: String representation of the address
          enum:
          - economical
          - conservative
          example: economical
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateTransactionSmartFeeR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Transaction_Smart_Fee_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Transaction_Smart_Fee_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Transaction_Smart_Fee_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
        "501":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Transaction_Smart_Fee_501_response'
          description: "This {feature} has not been implemented yet."
      summary: Estimate Transaction Smart Fee
      tags:
      - Unified Endpoints
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/transactions/prepare-utxo-transaction:
    post:
      description: "Through the “Prepare a UTXO-based transaction from xPub” endpoint\
        \ users can prepare a transaction for signing from all synced with Crypto\
        \ APIs addresses for the specific xPub. This is based on the `selectionStrategy`\
        \ and the addresses’ balances. In the case a user has an address not synced\
        \ with Crypto APIs, it will not be included. This endpoint applies to all\
        \ supported UTXO-based blockchain protocols, e.g. Bitcoin, Litecoin, etc."
      operationId: "Prepare A UTXO-Based Transaction From HD Wallet (xPub, yPub, zPub)"
      parameters:
      - example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          enum:
          - bitcoin
          example: bitcoin
          type: string
        style: simple
      - example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - testnet
          - mainnet
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubR'
          description: The resource has been successfully submitted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepare_A_UTXO_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepare_A_UTXO_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepare_A_UTXO_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "Prepare A UTXO-Based Transaction From HD Wallet (xPub, yPub, zPub)"
      tags:
      - HD Wallets
      x-cost: 50
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/addresses/{contractAddress}/contract:
    get:
      description: "Though this endpoint customers can obtain information about token\
        \ details. This can be done by providing the `contact address` parameter.\r\
        \n\r\n{note}This address is **not** the same as the smart contract creator\
        \ address.{/note}"
      operationId: Get Token Details by Contract Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          default: ethereum
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: Defines the specific address of the contract.
        example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
        explode: false
        in: path
        name: contractAddress
        required: true
        schema:
          description: Defines the specific address of the contract.
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenDetailsByContractAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Token_Details_by_Contract_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Token_Details_by_Contract_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Token_Details_by_Contract_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Token Details by Contract Address
      tags:
      - Tokens
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/transactions/prepare-account-based-transaction:
    post:
      description: "Through the “Prepare an account-based transaction from xPub” endpoint\
        \ users can prepare a transaction for signing from a synced with Crypto APIs\
        \ address from the specific xPub. This endpoint applies to all supported account-based\
        \ blockchain protocols, e.g. Ethereum, BSC, etc"
      operationId: "Prepare An Account-Based Transaction From HD Wallet (xPub, yPub,\
        \ zPub)"
      parameters:
      - example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          enum:
          - ethereum
          example: ethereum
          type: string
        style: simple
      - example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - mainnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubR'
          description: The resource has been successfully submitted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepare_An_Account_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepare_An_Account_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepare_An_Account_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "Prepare An Account-Based Transaction From HD Wallet (xPub, yPub, zPub)"
      tags:
      - HD Wallets
      x-cost: 50
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/hd/{extendedPublicKey}/assets:
    get:
      description: "This endpoint will return details on assets we support for a specified\
        \ from the customer extended public key (xPub). These could be cryptocurrencies,\
        \ fungible or non-fungible (NFT) tokens. Each asset has a unique identifier\
        \ - assetId, and a unique symbol in the form of a string, e.g. \"USDT\"."
      operationId: "Get HD Wallet (xPub, yPub, zPub) Assets"
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - zcash
          - ethereum-classic
          - binance-smart-chain
          - xrp
          example: ethereum
          type: string
        style: simple
      - description: Defines the account extended publicly known key which is used
          to derive all child public keys.
        example: xpub68SyZPMPpZUy9QB2fk2J28b5Rwd6jeWKind3K8oziZuVcL7wWZiXZNCPKuh42ejSpTLYngQ9Gbzj9a1Ap2QQmoFs2sMSbUvkEr8D3GW7MrR
        explode: false
        in: path
        name: extendedPublicKey
        required: true
        schema:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: xpub68SyZPMPpZUy9QB2fk2J28b5Rwd6jeWKind3K8oziZuVcL7wWZiXZNCPKuh42ejSpTLYngQ9Gbzj9a1Ap2QQmoFs2sMSbUvkEr8D3GW7MrR
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: "The way how the HD walled derives, for example when the type\
          \ is ACCOUNT, it derives change and receive addresses while when the type\
          \ is BIP32 it derives directly."
        example: account
        explode: true
        in: query
        name: derivation
        required: false
        schema:
          description: "The way how the HD walled derives, for example when the type\
            \ is ACCOUNT, it derives change and receive addresses while when the type\
            \ is BIP32 it derives directly."
          enum:
          - account
          - bip32
          example: account
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_HD_Wallet__xPub__yPub__zPub__Assets_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_HD_Wallet__xPub__yPub__zPub__Assets_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_HD_Wallet__xPub__yPub__zPub__Assets_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_HD_Wallet__xPub__yPub__zPub__Assets_422_response'
          description: "422"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "Get HD Wallet (xPub, yPub, zPub) Assets"
      tags:
      - HD Wallets
      x-cost: 25
      x-charge-count: 1
      x-is-list: false
  /blockchain-data/{blockchain}/{network}/hd/{extendedPublicKey}/details:
    get:
      description: "HD wallet details is useful endpoint to get the most important\
        \ data about HD wallet without the need to do a lot of calculations, once\
        \ the HD Wallet is synced using Sync endpoint we keep it up to date and we\
        \ calculate these details in advance."
      operationId: "Get HD Wallet (xPub, yPub, zPub) Details"
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - zcash
          - ethereum-classic
          - binance-smart-chain
          - xrp
          example: bitcoin
          type: string
        style: simple
      - description: Defines the account extended publicly known key which is used
          to derive all child public keys.
        example: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
        explode: false
        in: path
        name: extendedPublicKey
        required: true
        schema:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: "The way how the HD walled derives, for example when the type\
          \ is ACCOUNT, it derives change and receive addresses while when the type\
          \ is BIP32 it derives directly."
        explode: true
        in: query
        name: derivation
        required: false
        schema:
          description: "The way how the HD walled derives, for example when the type\
            \ is ACCOUNT, it derives change and receive addresses while when the type\
            \ is BIP32 it derives directly."
          enum:
          - account
          - bip32
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHDWalletXPubYPubZPubDetailsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_HD_Wallet__xPub__yPub__zPub__Details_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_HD_Wallet__xPub__yPub__zPub__Details_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_HD_Wallet__xPub__yPub__zPub__Details_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_HD_Wallet__xPub__yPub__zPub__Details_422_response'
          description: "422"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "Get HD Wallet (xPub, yPub, zPub) Details"
      tags:
      - HD Wallets
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/hd/{extendedPublicKey}/addresses/derive-address:
    get:
      description: "Through this endpoint, customers can derive up to 10 addresses\
        \ - both change and receive, from a certain HD Wallet (xPub, yPub, zPub),\
        \ by providing an extended public key. By default the system creates a receiving/deposit\
        \ address, unless the isChange attribute is set to 'true'. In that case the\
        \ system derives a 'change' address. The change address can be derived only\
        \ for UTXO based blockchains, for all the rest, this endpoint always creates\
        \ a deposit/receiving address."
      operationId: "Derive HD Wallet (xPub, yPub, zPub) Change Or Receiving Addresses"
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - binance-smart-chain
          - zcash
          - tron
          example: bitcoin
          type: string
        style: simple
      - description: Defines the account extended publicly known key which is used
          to derive all child public keys.
        example: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
        explode: false
        in: path
        name: extendedPublicKey
        required: true
        schema:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Represents the format of the address.
        example: p2sh
        explode: true
        in: query
        name: addressFormat
        required: false
        schema:
          description: Represents the format of the address.
          enum:
          - p2pkh
          - p2sh
          - p2wpkh
          - standard
          - p2sh-cash
          - p2pkh-cash
          - classic
          example: p2sh
          type: string
        style: form
      - description: Represents the addresses count.
        example: 2
        explode: true
        in: query
        name: addressesCount
        required: false
        schema:
          description: Represents the addresses count.
          example: 2
          format: int64
          type: integer
        style: form
      - description: "Defines if the specific address is a change or deposit address.\
          \ If the value is True - it is a change address, if it is False - it is\
          \ a Deposit address."
        example: true
        explode: true
        in: query
        name: isChange
        required: false
        schema:
          description: "Defines if the specific address is a change or deposit address.\
            \ If the value is True - it is a change address, if it is False - it is\
            \ a Deposit address."
          example: true
          type: boolean
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 3
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 3
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_HD_Wallet__xPub__yPub__zPub__Change_Or_Receiving_Addresses_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_HD_Wallet__xPub__yPub__zPub__Change_Or_Receiving_Addresses_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Derive_HD_Wallet__xPub__yPub__zPub__Change_Or_Receiving_Addresses_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: "Derive HD Wallet (xPub, yPub, zPub) Change Or Receiving Addresses"
      tags:
      - Features
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/address-coins-transactions-unconfirmed:
    post:
      callbacks:
        ADDRESS_COINS_TRANSACTION_UNCONFIRMED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: aDDRESS_COINS_TRANSACTION_UNCONFIRMED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddressCoinsTransactionUnconfirmed'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when there are new unconfirmed\
        \ coins transactions for the user. By creating this subscription the user\
        \ will be notified by Crypto APIs 2.0 when that event occurs. The information\
        \ is returned per specified address.\r\n\r\nUnconfirmed coins transactions\
        \ remain in the mempool (memory pool) until they are confirmed by miners and\
        \ added to the next block. Sometimes spikes in transaction activity can cause\
        \ delays in confirmations.\r\n\r\n{note}For UTXO-based protocols like Bitcoin\
        \ a transaction could have multiple inputs and outputs which means the address\
        \ could in as both sender and recipient. [Here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-data-returned-for-utxo-based-transactions)\
        \ is how we inform you on that.{/note}\r\n\r\n{warning}We cannot guarantee\
        \ at 100% that webhooks for unconfirmed transactions will always be received.\
        \ Some may **not get received** due to the possibility of some nodes not being\
        \ updated with that information. This can occur in networks with low activity\
        \ and/or not many nodes, e.g. Testnet networks and rarely Mainnets.{/warning}\r\
        \n\r\n{note}To have an operational callback subscription, you need to first\
        \ verify a domain for the Callback URL. Please see more information on Callbacks\
        \ [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{note}It is also **important to note** that just because pending unconfirmed\
        \ transactions are in the mempool, **doesn't necessarily** mean they will\
        \ get confirmed.{/note}\r\n\r\n{warning}Crypto APIs will notify the user **only\
        \ when** the event occurs. There are cases when the specific event doesn't\
        \ happen at all, or takes a long time to do so. A callback notification **will\
        \ not** be sent if the event does not or cannot occur, or will take long time\
        \ to occur.{/warning}"
      operationId: New unconfirmed coins transactions
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - zcash
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_unconfirmed_coins_transactions_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_unconfirmed_coins_transactions_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_unconfirmed_coins_transactions_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_unconfirmed_coins_transactions_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New unconfirmed coins transactions
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/address-tokens-transactions-unconfirmed:
    post:
      callbacks:
        ADDRESS_TOKENS_TRANSACTION_UNCONFIRMED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: aDDRESS_TOKENS_TRANSACTION_UNCONFIRMED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddressTokensTransactionUnconfirmed'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when there are new unconfirmed\
        \ tokens transactions for the user. By creating this subscription the user\
        \ will be notified by Crypto APIs 2.0 when that event occurs. The information\
        \ is returned per specified address.\r\n\r\nUnconfirmed tokens transactions\
        \ remain in the mempool (memory pool) until they are confirmed by miners and\
        \ added to the next block. Sometimes spikes in transaction activity can cause\
        \ delays in confirmations.\r\n\r\n{warning}We cannot guarantee at 100% that\
        \ webhooks for unconfirmed transactions will always be received. Some may\
        \ **not get received** due to the possibility of some nodes not being updated\
        \ with that information. This can occur in networks with low activity and/or\
        \ not many nodes, e.g. Testnet networks and rarely Mainnets.{/warning}\r\n\
        \r\n{note}To have an operational callback subscription, you need to first\
        \ verify a domain for the Callback URL. Please see more information on Callbacks\
        \ [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{note}It is also **important to note** that just because pending unconfirmed\
        \ transactions are in the mempool, **doesn't necessarily** mean they will\
        \ get confirmed.{/note}\r\n\r\n{warning}Crypto APIs will notify the user **only\
        \ when** the event occurs. There are cases when the specific event doesn't\
        \ happen at all, or takes a long time to do so. A callback notification **will\
        \ not** be sent if the event does not or cannot occur, or will take long time\
        \ to occur.{/warning}"
      operationId: New unconfirmed tokens transactions
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - ethereum-classic
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - mumbai
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_unconfirmed_tokens_transactions_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_unconfirmed_tokens_transactions_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_unconfirmed_tokens_transactions_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_unconfirmed_tokens_transactions_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New unconfirmed tokens transactions
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/address-coins-transactions-confirmed:
    post:
      callbacks:
        ADDRESS_COINS_TRANSACTION_CONFIRMED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: aDDRESS_COINS_TRANSACTION_CONFIRMED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddressCoinsTransactionConfirmed'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when there are new incoming\
        \ or outgoing confirmed transactions for coins from/to the customer's address.\
        \ By creating this subscription the user will be notified by Crypto APIs 2.0\
        \ when that event occurs. The information is returned per specified address.\
        \ \r\n\r\nBeing confirmed means that the transactions are verified by miners\
        \ and added to the next block.\r\n\r\n{note}For UTXO-based protocols like\
        \ Bitcoin a transaction could have multiple inputs and outputs which means\
        \ the address could in as both sender and recipient. [Here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-data-returned-for-utxo-based-transactions)\
        \ is how we inform you on that.{/note}\r\n\r\n{note}To have an operational\
        \ callback subscription, you need to first verify a domain for the Callback\
        \ URL. Please see more information on Callbacks [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: New confirmed coins transactions
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zilliqa
          - binance-smart-chain
          - zcash
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedCoinsTransactionsRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedCoinsTransactionsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_coins_transactions_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_coins_transactions_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_coins_transactions_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_coins_transactions_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New confirmed coins transactions
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/address-tokens-transactions-confirmed:
    post:
      callbacks:
        ADDRESS_TOKENS_TRANSACTION_CONFIRMED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: aDDRESS_TOKENS_TRANSACTION_CONFIRMED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddressTokensTransactionConfirmed'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when there are new incoming\
        \ or outgoing confirmed transactions for tokens from/to the customer's address.\
        \ By creating this subscription the user will be notified by Crypto APIs 2.0\
        \ when that event occurs. The information is returned per specified address.\
        \ \r\n\r\nBeing confirmed means that the transactions are verified by miners\
        \ and added to the next block. This endpoint refers to **tokens transactions\
        \ only, not coins**.\r\n\r\n{note}To have an operational callback subscription,\
        \ you need to first verify a domain for the Callback URL. Please see more\
        \ information on Callbacks [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: New confirmed tokens transactions
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - tron
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedTokensTransactionsRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedTokensTransactionsR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_tokens_transactions_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_tokens_transactions_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_tokens_transactions_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_tokens_transactions_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New confirmed tokens transactions
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/address-tokens-transactions-confirmed-each-confirmation:
    post:
      callbacks:
        ADDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: aDDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddressTokensTransactionConfirmedEachConfirmation'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when there are new incoming\
        \ or outgoing confirmed transactions for tokens from/to the customer's address\
        \ with also a response at each confirmation the transaction has received until\
        \ the specified confirmations limit is reached. By creating this subscription\
        \ the user will be notified by Crypto APIs 2.0 when that event occurs. The\
        \ information is returned per specified address. \r\n\r\nBeing confirmed means\
        \ that the transactions are verified by miners and added to the next block.\
        \ This endpoint refers to **tokens transactions only, not coins**.\r\n\r\n\
        {note}To have an operational callback subscription, you need to first verify\
        \ a domain for the Callback URL. Please see more information on Callbacks\
        \ [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: New confirmed tokens transactions and each confirmation
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - tron
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_tokens_transactions_and_each_confirmation_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_tokens_transactions_and_each_confirmation_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_tokens_transactions_and_each_confirmation_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_tokens_transactions_and_each_confirmation_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New confirmed tokens transactions and each confirmation
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/address-coins-transactions-confirmed-each-confirmation:
    post:
      callbacks:
        ADDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: aDDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddressCoinsTransactionConfirmedEachConfirmation'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when there are new incoming\
        \ or outgoing confirmed transactions for coins from/to the customer's address\
        \ with also a response at each confirmation the transaction has received until\
        \ the specified confirmations limit is reached. By creating this subscription\
        \ the user will be notified by Crypto APIs 2.0 when that event occurs. The\
        \ information is returned per specified address. \r\n\r\nBeing confirmed means\
        \ that the transactions are verified by miners and added to the next block.\
        \ This endpoint refers to **coins transactions only, not tokens**.\r\n\r\n\
        {note}For UTXO-based protocols like Bitcoin a transaction could have multiple\
        \ inputs and outputs which means the address could in as both sender and recipient.\
        \ [Here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-data-returned-for-utxo-based-transactions)\
        \ is how we inform you on that.{/note}\r\n\r\n{note}To have an operational\
        \ callback subscription, you need to first verify a domain for the Callback\
        \ URL. Please see more information on Callbacks [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: New confirmed coins transactions and each confirmation
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zilliqa
          - binance-smart-chain
          - zcash
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_coins_transactions_and_each_confirmation_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_coins_transactions_and_each_confirmation_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_coins_transactions_and_each_confirmation_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_coins_transactions_and_each_confirmation_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New confirmed coins transactions and each confirmation
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/transaction-mined:
    post:
      callbacks:
        TRANSACTION_MINED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tRANSACTION_MINED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TransactionMined'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when a specific transaction\
        \ is mined. By creating this subscription the user will be notified by Crypto\
        \ APIs 2.0 when that event occurs. The information is returned per specified\
        \ `transactionId`.\r\n\r\nA transaction is mined when it is included in a\
        \ new block in the blockchain.\r\n\r\n{note}To have an operational callback\
        \ subscription, you need to first verify a domain for the Callback URL. Please\
        \ see more information on Callbacks [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: Mined transaction
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zilliqa
          - binance-smart-chain
          - zcash
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinedTransactionRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinedTransactionR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mined_transaction_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mined_transaction_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mined_transaction_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mined_transaction_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Mined transaction
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/block-mined:
    post:
      callbacks:
        BLOCK_MINED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: bLOCK_MINED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/BlockMined'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when a new block is mined\
        \ in the specific blockchain. By creating this subscription the user will\
        \ be notified by Crypto APIs 2.0 when that event occurs. The information is\
        \ returned per specified address.\r\n\r\nA new block is mined when it is added\
        \ to the chain once a consensus is reached by the majority of the miners,\
        \ which is when the block gets validated and added to the blockchain.\r\n\r\
        \n{note}To have an operational callback subscription, you need to first verify\
        \ a domain for the Callback URL. Please see more information on Callbacks\
        \ [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: New Block
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zilliqa
          - binance-smart-chain
          - zcash
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBlockRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewBlockR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Block_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Block_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Block_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Block_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New Block
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/block-height-reached:
    post:
      callbacks:
        BLOCK_HEIGHT_REACHED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: bLOCK_HEIGHT_REACHED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/BlockHeightReached'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: Through this endpoint customers can create callback subscriptions
        for a specific block height that hasn't been reached yet. In this case the
        event is when the specified block height in the request body is reached in
        a said blockchain. By creating this subscription the user will be notified
        by Crypto APIs 2.0 when that event occurs.
      operationId: Block Height Reached
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - dash
          - dogecoin
          - zcash
          - litecoin
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - xrp
          - zilliqa
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockHeightReachedRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockHeightReachedR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block_Height_Reached_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block_Height_Reached_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block_Height_Reached_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block_Height_Reached_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Block Height Reached
      tags:
      - Create Subscriptions for
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions:
    get:
      description: "Through this endpoint the customer can obtain a list of their\
        \ callback subscriptions for the available Blockchain events.\r\n\r\nCurrently\
        \ Crypto APIs 2.0 offers certain Blockchain event endpoints which allow the\
        \ user to subscribe for one/a few/all and receive callback notifications when\
        \ the specific event occurs.\r\n\r\n{note}To have an operational callback\
        \ subscription, you need to first verify a domain for the Callback URL. Please\
        \ see more information on Callbacks [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}"
      operationId: List Blockchain Events Subscriptions
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zilliqa
          - binance-smart-chain
          - zcash
          - tron
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBlockchainEventsSubscriptionsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Blockchain_Events_Subscriptions_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Blockchain_Events_Subscriptions_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Blockchain_Events_Subscriptions_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Blockchain Events Subscriptions
      tags:
      - Manage Subscriptions
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /blockchain-events/subscriptions/{referenceId}:
    get:
      description: "Through this endpoint the customer can get detailed information\
        \ for a callback subscription by providing its reference ID.\r\n\r\nCurrently\
        \ Crypto APIs 2.0 offers certain Blockchain event endpoints which allow the\
        \ user to subscribe for one/a few/all and receive callback notifications when\
        \ the specific event occurs."
      operationId: Get Blockchain Event Subscription Details By Reference ID
      parameters:
      - description: Represents a unique ID used to reference the specific callback
          subscription.
        example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        explode: false
        in: path
        name: referenceId
        required: true
        schema:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockchainEventSubscriptionDetailsByReferenceIDR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Blockchain_Event_Subscription_Details_By_Reference_ID_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Blockchain_Event_Subscription_Details_By_Reference_ID_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Blockchain_Event_Subscription_Details_By_Reference_ID_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Blockchain Event Subscription Details By Reference ID
      tags:
      - Manage Subscriptions
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/subscriptions/{referenceId}/activate:
    post:
      description: "Through this endpoint customers can reactivate an event subscription\
        \ (callback) which has been deactivated by the system. Deactivations could\
        \ happen due to various reasons, most often \"maximum retry attempts reached\"\
        ."
      operationId: Activate Blockchain Event Subscription
      parameters:
      - description: Represents a unique ID used to reference the specific callback
          subscription.
        example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        explode: false
        in: path
        name: referenceId
        required: true
        schema:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateBlockchainEventSubscriptionRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateBlockchainEventSubscriptionR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activate_Blockchain_Event_Subscription_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activate_Blockchain_Event_Subscription_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activate_Blockchain_Event_Subscription_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Activate Blockchain Event Subscription
      tags:
      - Manage Subscriptions
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/{referenceId}:
    delete:
      description: "Through this endpoint the customer can delete blockchain event\
        \ subscriptions they have by attributes `referenceId` and `network`.\r\n\r\
        \nCurrently Crypto APIs 2.0 offers certain Blockchain event endpoints which\
        \ allow the user to subscribe for one/a few/all and receive callback notifications\
        \ when the specific event occurs.\r\n\r\n{note}To have an operational callback\
        \ subscription, you need to first verify a domain for the Callback URL. Please\
        \ see more information on Callbacks [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: Delete Blockchain Event Subscription
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zilliqa
          - binance-smart-chain
          - zcash
          - tron
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          example: testnet
          type: string
        style: simple
      - description: Represents a unique ID used to reference the specific callback
          subscription.
        example: d3fd6a0e-f2b6-4bb5-9fd3-7944bcec9e9f
        explode: false
        in: path
        name: referenceId
        required: true
        schema:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: d3fd6a0e-f2b6-4bb5-9fd3-7944bcec9e9f
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBlockchainEventSubscriptionR'
          description: The delete request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Blockchain_Event_Subscription_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Blockchain_Event_Subscription_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Blockchain_Event_Subscription_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Delete Blockchain Event Subscription
      tags:
      - Manage Subscriptions
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/addresses/{address}:
    get:
      description: This endpoint creates a shortcut to obtain information from Blockchain
        data by going through Blockchain Events and a specific Event Subscription.
        It provides data for a specific address from the Event it takes part in only
        if the address already exists in the blockchain events subscriptions. It applies
        only for Events related to that customer.
      operationId: Get Address Details From Callback
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dash
          - dogecoin
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - xrp
          - zilliqa
          - zcash
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
        explode: false
        in: path
        name: address
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressDetailsFromCallbackR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Details_From_Callback_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Details_From_Callback_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Details_From_Callback_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Address_Details_From_Callback_404_response'
          description: The provided address has no subscriptions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Address Details From Callback
      tags:
      - Callback Data
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/transactions/{transactionId}:
    get:
      description: This endpoint creates a shortcut to obtain information from Blockchain
        data by going through Blockchain Events and a specific Event Subscription.
        It provides data for a specific transaction from the Event it takes part in
        by providing the `transactionId` attribute. It applies only for Events related
        to that user.
      operationId: Get Transaction Details By Transaction ID From Callback
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          - bitcoin-cash
          - litecoin
          - dash
          - dogecoin
          - zcash
          - ethereum-classic
          - binance-smart-chain
          - zilliqa
          - xrp
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the unique identifier of a transaction, i.e. it could\
          \ be transactionId in UTXO-based protocols like Bitcoin, and transaction\
          \ hash in Ethereum blockchain."
        example: 8888f6c8168ff69aaf6438ab185c690e8c76c63e5f9c472c1c86f08406ea74f2
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be transactionId in UTXO-based protocols like Bitcoin, and transaction\
            \ hash in Ethereum blockchain."
          example: 8888f6c8168ff69aaf6438ab185c690e8c76c63e5f9c472c1c86f08406ea74f2
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_From_Callback_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_From_Callback_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Transaction_Details_By_Transaction_ID_From_Callback_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Transaction Details By Transaction ID From Callback
      tags:
      - Callback Data
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/blocks/hash/{blockHash}:
    get:
      description: This endpoint creates a shortcut to obtain information from Blockchain
        data by going through Blockchain Events and a specific Event Subscription.
        It provides data for a specific block by providing the `blockHash` attribute
        from the Event it takes part in and after making check that the customer in
        question does have a subscription for this block. It applies only for Events
        related to that user.
      operationId: Get Block Details By Block Hash From Callback
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dash
          - dogecoin
          - ethereum
          - binance-smart-chain
          - ethereum-classic
          - zilliqa
          - xrp
          - zcash
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: "Represents the hash of the block, which is its unique identifier.\
          \ It represents a cryptographic digital fingerprint made by hashing the\
          \ block header twice through the SHA256 algorithm."
        example: 000000000000000bdea8ba7df4bfd9f398e428fde8ee47152bcf93834ee48e8a
        explode: false
        in: path
        name: blockHash
        required: true
        schema:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 000000000000000bdea8ba7df4bfd9f398e428fde8ee47152bcf93834ee48e8a
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Hash_From_Callback_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Hash_From_Callback_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Hash_From_Callback_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Block Details By Block Hash From Callback
      tags:
      - Callback Data
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/blocks/height/{blockHeight}:
    get:
      description: This endpoint creates a shortcut to obtain information from Blockchain
        data by going through Blockchain Events and a specific Event Subscription.
        It provides data for the specific Block by providing the `blockHeight` attribute
        from the Event it takes part in. It applies only for Events related to that
        user.
      operationId: Get Block Details By Block Height From Callback
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dash
          - dogecoin
          - ethereum
          - binance-smart-chain
          - ethereum-classic
          - zilliqa
          - xrp
          - zcash
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: Represents the number of blocks in the blockchain preceding this
          specific block. Block numbers have no gaps. A blockchain usually starts
          with block 0 called the "Genesis block".
        example: "673852"
        explode: false
        in: path
        name: blockHeight
        required: true
        schema:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: "673852"
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Height_From_Callback_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Height_From_Callback_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Block_Details_By_Block_Height_From_Callback_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Transactions_by_Block_Height_404_response'
          description: The specified block has not been found on the specific blockchain.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Block Details By Block Height From Callback
      tags:
      - Callback Data
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/address-internal-transactions-confirmed:
    post:
      callbacks:
        ADDRESS_INTERNAL_TRANSACTION_CONFIRMED:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: aDDRESS_INTERNAL_TRANSACTION_CONFIRMED_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddressInternalTransactionConfirmed'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when there are new confirmed\
        \ internal transactions. By creating this subscription the user will be notified\
        \ by Crypto APIs 2.0 when that event occurs.\r\n\r\nBeing confirmed means\
        \ that the transactions are verified by miners and added to the next block.\r\
        \n\r\n{note}To have an operational callback subscription, you need to first\
        \ verify a domain for the Callback URL. Please see more information on Callbacks\
        \ [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: New confirmed internal transactions
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum-classic
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - tron
          - polygon
          example: ethereum-classic
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mordor
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: mordor
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedInternalTransactionsRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedInternalTransactionsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_internal_transactions_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_internal_transactions_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_internal_transactions_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_internal_transactions_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New confirmed internal transactions
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/address-internal-transactions-confirmed-each-confirmation:
    post:
      callbacks:
        ADDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: aDDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddressInternalTransactionConfirmedEachConfirmation'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event. In this case the event is when there are new confirmed\
        \ internal transactions. Includes also a response at each confirmation the\
        \ transaction receives until the specified confirmations limit is reached.\
        \ By creating this subscription the user will be notified by Crypto APIs 2.0\
        \ when that event occurs. \r\n\r\nBeing confirmed means that the transactions\
        \ are verified by miners and added to the next block.\r\n\r\n{note}To have\
        \ an operational callback subscription, you need to first verify a domain\
        \ for the Callback URL. Please see more information on Callbacks [here](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-url).{/note}\r\
        \n\r\n{warning}Crypto APIs will notify the user **only when** the event occurs.\
        \ There are cases when the specific event doesn't happen at all, or takes\
        \ a long time to do so. A callback notification **will not** be sent if the\
        \ event does not or cannot occur, or will take long time to occur.{/warning}"
      operationId: New confirmed internal transactions and each confirmation
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum-classic
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - tron
          - polygon
          example: ethereum-classic
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: mordor
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: mordor
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_internal_transactions_and_each_confirmation_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_internal_transactions_and_each_confirmation_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_internal_transactions_and_each_confirmation_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_confirmed_internal_transactions_and_each_confirmation_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New confirmed internal transactions and each confirmation
      tags:
      - Create Subscriptions for
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/coins-transactions-for-specific-amount:
    post:
      callbacks:
        CONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: cONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ConfirmedCoinsTransactionForCertainAmountOrHigher'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event and \"amountHigherThan\" value. In this case the event\
        \ is when there are new incoming or outgoing confirmed coins transactions\
        \ for the specified blockchain and the amount is equal or higher than the\
        \ value specified.  By creating this subscription the user will be notified\
        \ by Crypto APIs 2.0 when that event occurs  filtered for the specified amount.\
        \ The information is returned per specified address.\r\n\r\nBeing confirmed\
        \ means that the transactions are verified by miners and added to the next\
        \ block."
      operationId: New Confirmed Coins Transactions For Specific Amount
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zilliqa
          - binance-smart-chain
          - zcash
          - tron
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Coins_Transactions_For_Specific_Amount_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Coins_Transactions_For_Specific_Amount_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Coins_Transactions_For_Specific_Amount_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Coins_Transactions_For_Specific_Amount_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New Confirmed Coins Transactions For Specific Amount
      tags:
      - Create Subscriptions for
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/tokens-transfers-for-specific-amount:
    post:
      callbacks:
        CONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: cONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ConfirmedTokensTransactionForCertainAmountOrHigher'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event and \"amountHigherThan\" value. In this case the event\
        \ is when there are new incoming or outgoing confirmed token transactions\
        \ for the specified blockchain and the amount is equal or higher than the\
        \ value specified. By creating this subscription the user will be notified\
        \ by Crypto APIs 2.0 when that event occurs, filtered for the specified amount.\r\
        \nBeing confirmed means that the transactions are verified by miners and added\
        \ to the next block. This endpoint refers to tokens transactions only, not\
        \ coins."
      operationId: New Confirmed Token Transactions For Specific Amount
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - tron
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Token_Transactions_For_Specific_Amount_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Token_Transactions_For_Specific_Amount_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Token_Transactions_For_Specific_Amount_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Token_Transactions_For_Specific_Amount_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New Confirmed Token Transactions For Specific Amount
      tags:
      - Create Subscriptions for
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /blockchain-events/{blockchain}/{network}/subscriptions/internal-transactions-for-specific-amount:
    post:
      callbacks:
        CONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: cONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ConfirmedInternalTransactionForCertainAmountOrHigher'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can create callback subscriptions\
        \ for a specific event and \"amountHigherThan\" value. In this case the event\
        \ is when there are new confirmed internal transactions and the amount is\
        \ equal or higher than a value, specified by the customer. By creating this\
        \ subscription the user will be notified by Crypto APIs 2.0 when that event\
        \ occurs, filtered for the specified amount.\r\nBeing confirmed means that\
        \ the transactions are verified by miners and added to the next block"
      operationId: New Confirmed Internal Transactions For Specific Amount
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - tron
          - polygon
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - mumbai
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Internal_Transactions_For_Specific_Amount_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Internal_Transactions_For_Specific_Amount_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Internal_Transactions_For_Specific_Amount_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Confirmed_Internal_Transactions_For_Specific_Amount_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: New Confirmed Internal Transactions For Specific Amount
      tags:
      - Create Subscriptions for
      x-cost: 100
      x-charge-count: 1
      x-is-list: false
  /blockchain-automations/{blockchain}/{network}/coins-forwarding/automations:
    get:
      description: "Through this endpoint customers can list all of their **coins**\
        \ forwarding automations (**not** tokens).\r\n\r\nCustomers can set up automatic\
        \ forwarding functions for coins by setting a `fromAddress` and a `toAddress`,\
        \ and specifying the amount that can be transferred between addresses. \r\n\
        \r\nA `feePriority` will be returned which represents the fee priority of\
        \ the automation whether it is \"SLOW\", \"STANDARD\" OR \"FAST\".\r\n\r\n\
        {warning}The subscription will work for all transactions until it is deleted.\
        \ There is no need to do that for every transaction.{/warning}"
      operationId: List Coins Forwarding Automations
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCoinsForwardingAutomationsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Coins_Forwarding_Automations_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Coins_Forwarding_Automations_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Coins_Forwarding_Automations_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Coins Forwarding Automations
      tags:
      - Automatic Coins Forwarding
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
    post:
      callbacks:
        COINS_FORWARDING_SUCCESS:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: cOINS_FORWARDING_SUCCESS_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CoinsForwardingSuccess'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        COINS_FORWARDING_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: cOINS_FORWARDING_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CoinsForwardingFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can set up an automatic forwarding\
        \ function specifically for coins (**not** tokens). They can have a `toAddress`\
        \ which is essentially the main address and the destination for the automatic\
        \ coins forwarding. \r\n\r\nThere is also a `minimumTransferAmount` which\
        \ only when reached will then trigger the forwarding. Through this the customer\
        \ can save from fees.\r\n\r\nMoreover, `feePriority` can be also set,  which\
        \ defines how quickly to move the coins once they are received. The higher\
        \ priority, the larger the fee will be. It can be \"SLOW\", \"STANDARD\" or\
        \ \"FAST\".\r\n\r\nThe response of this endpoint contains an attribute `fromAddress`\
        \ which can be used as a deposit address. Any funds received by this address\
        \ will be automatically forwarded to `toAddress` based on what the customer\
        \ has set for the automation.\r\n\r\nFor this automatic forwarding the customer\
        \ can set a callback subscription.\r\n\r\n{warning}The subscription will work\
        \ for all incoming transactions until it is deleted. There is no need to do\
        \ that for every transaction.{/warning}\r\n\r\n{note}This endpoint generates\
        \ a new `fromAddress` each time.{/note}"
      operationId: Create Automatic Coins Forwarding
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutomaticCoinsForwardingRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAutomaticCoinsForwardingR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Automatic_Coins_Forwarding_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Automatic_Coins_Forwarding_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Automatic_Coins_Forwarding_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Automatic_Coins_Forwarding_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Create Automatic Coins Forwarding
      tags:
      - Automatic Coins Forwarding
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-automations/{blockchain}/{network}/coins-forwarding/automations/{referenceId}:
    delete:
      description: "Through this endpoint customers can delete a forwarding function\
        \ they have set for **coins** (**not** tokens).\r\n\r\nBy setting a `fromAddress`\
        \ and a `toAddress`, and specifying the amount, coins can be transferred between\
        \ addresses. \r\n\r\nA `feePriority` will be returned which represents the\
        \ fee priority of the automation whether it is \"SLOW\", \"STANDARD\" OR \"\
        FAST\".\r\n\r\n{warning}The subscription will work for all incoming transactions\
        \ until it is deleted. There is no need to do that for every transaction.{/warning}"
      operationId: Delete Automatic Coins Forwarding
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: testnet
          type: string
        style: simple
      - description: Represents a unique ID used to reference the specific callback
          subscription.
        example: 600955ea5e75d660e71d3c7d
        explode: false
        in: path
        name: referenceId
        required: true
        schema:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 600955ea5e75d660e71d3c7d
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAutomaticCoinsForwardingR'
          description: The delete request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Automatic_Coins_Forwarding_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Automatic_Coins_Forwarding_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Automatic_Coins_Forwarding_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Delete Automatic Coins Forwarding
      tags:
      - Automatic Coins Forwarding
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-automations/{blockchain}/{network}/tokens-forwarding/automations:
    get:
      description: "Through this endpoint customers can list all of their **tokens**\
        \ forwarding automations (**not** coins).\r\n\r\nCustomers can set up automatic\
        \ forwarding functions for tokens by setting a `fromAddress` and a `toAddress`,\
        \ and specifying the amount that can be transferred between addresses. \r\n\
        \r\nA `feePriority` will be returned which represents the fee priority of\
        \ the automation whether it is \"SLOW\", \"STANDARD\" OR \"FAST\". \r\n\r\n\
        {warning}Currently we support fungible tokens (ERC-20) **only**, NFTs (ERC-721)\
        \ are **not** supported.{/warning}\r\n\r\n{warning}The subscription will work\
        \ for all transactions until it is deleted. There is no need to do that for\
        \ every transaction.{/warning}"
      operationId: List Tokens Forwarding Automations
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          format: int64
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensForwardingAutomationsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_Forwarding_Automations_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_Forwarding_Automations_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Tokens_Forwarding_Automations_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Tokens Forwarding Automations
      tags:
      - Automatic Tokens Forwarding
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
    post:
      callbacks:
        TOKENS_FORWARDING_SUCCESS:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tOKENS_FORWARDING_SUCCESS_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TokensForwardingSuccess'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TOKENS_FORWARDING_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tOKENS_FORWARDING_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TokensForwardingFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can set up an automatic forwarding\
        \ function specifically for tokens (**not** coins). They can have a `toAddress`\
        \ which is essentially the main address and the destination for the automatic\
        \ tokens forwarding. \r\n\r\nThere is also a `minimumTransferAmount` which\
        \ only when reached will then trigger the forwarding. Through this the customer\
        \ can save from fees.\r\n\r\nMoreover, `feePriority` can be also set,  which\
        \ defines how quickly to move the tokens once they are received. The higher\
        \ priority, the larger the fee will be. It can be \"SLOW\", \"STANDARD\" or\
        \ \"FAST\".\r\n\r\nThe response of this endpoint contains an attribute `fromAddress`\
        \ which can be used as a deposit address. Any funds received by this address\
        \ will be automatically forwarded to `toAddress` based on what the customer\
        \ has set for the automation.\r\n\r\nFor this automatic forwarding the customer\
        \ can set a callback subscription.\r\n\r\n{warning}Currently we support fungible\
        \ tokens (ERC-20) **only**, NFTs (ERC-721) are **not** supported.{/warning}\r\
        \n\r\n{warning}The subscription will work for all incoming transactions until\
        \ it is deleted. There is no need to do that for every transaction.{/warning}\r\
        \n\r\n{note}This endpoint generates a new `fromAddress` each time.{/note}"
      operationId: Create Automatic Tokens Forwarding
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutomaticTokensForwardingRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAutomaticTokensForwardingR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Automatic_Tokens_Forwarding_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Automatic_Tokens_Forwarding_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Automatic_Tokens_Forwarding_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Create Automatic Tokens Forwarding
      tags:
      - Automatic Tokens Forwarding
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-automations/{blockchain}/{network}/tokens-forwarding/automations/add-token:
    post:
      callbacks:
        TOKENS_FORWARDING_SUCCESS:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tOKENS_FORWARDING_SUCCESS_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TokensForwardingSuccess'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        TOKENS_FORWARDING_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: tOKENS_FORWARDING_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/TokensForwardingFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can add **Automatic Tokens forwardings**\
        \ to an already existing `fromAddress`. Unlike the \"Create Automatic Tokens\
        \ Forwarding\" endpoint, where the `fromAddress` is generated each time, with\
        \ this endpoint customers can add an automation from another token to one\
        \ and the same `fromAddress`.\r\n\r\nThe `fromAddress` can be used as a deposit\
        \ address. Any funds received by this address will be automatically forwarded\
        \ to `toAddress` based on what the customer has set for the automation. The\
        \  `toAddress` is essentially the main address and destination for the automatic\
        \ tokens forwarding.\r\n\r\nThere is also a `minimumTransferAmount` which\
        \ only when reached will then trigger the forwarding. Through this the customer\
        \ can save from fees.\r\n\r\nMoreover, `feePriority` can be also set,  which\
        \ defines how quickly to move the tokens once they are received. The higher\
        \ priority, the larger the fee will be. It can be \"SLOW\", \"STANDARD\" or\
        \ \"FAST\".\r\n\r\nFor this automatic forwarding the customer can set a callback\
        \ subscription.\r\n\r\n{warning}Currently we support fungible tokens (ERC-20)\
        \ **only**, NFTs (ERC-721) are **not** supported.{/warning}\r\n\r\n{warning}The\
        \ subscription will work for all incoming transactions until it is deleted.\
        \ There is no need to do that for every transaction.{/warning}"
      operationId: Add Tokens To Existing fromAddress
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTokensToExistingFromAddressRB'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTokensToExistingFromAddressR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Add_Tokens_To_Existing_fromAddress_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Add_Tokens_To_Existing_fromAddress_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Add_Tokens_To_Existing_fromAddress_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Add Tokens To Existing fromAddress
      tags:
      - Automatic Tokens Forwarding
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-automations/{blockchain}/{network}/tokens-forwarding/fee-addresses:
    get:
      description: "Through this endpoint customers can obtain details about a fee\
        \ address. Only one fee address per currency per network for a user's account\
        \ can be set no matter how many tokens or subscriptions they have or want\
        \ to automatically forward.\r\n\r\n{warning}Currently we support fungible\
        \ tokens (ERC-20) **only**, NFTs (ERC-721) are **not** supported.{/warning}"
      operationId: Get Fee Address Details
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeeAddressDetailsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Fee_Address_Details_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Fee_Address_Details_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Fee_Address_Details_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Fee Address Details
      tags:
      - Automatic Tokens Forwarding
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-automations/{blockchain}/{network}/tokens-forwarding/automations/{referenceId}:
    delete:
      description: "Through this endpoint customers can delete a forwarding function\
        \ they have set for **tokens** (**not** coins).\r\n\r\nBy setting a `fromAddress`\
        \ and a `toAddress`, and specifying the amount, tokens can be transferred\
        \ between addresses. \r\n\r\nA `feePriority` will be returned which represents\
        \ the fee priority of the automation whether it is \"SLOW\", \"STANDARD\"\
        \ OR \"FAST\".\r\n\r\n{warning}Currently we support fungible tokens (ERC-20)\
        \ **only**, NFTs (ERC-721) are **not** supported.{/warning}\r\n\r\n{warning}The\
        \ subscription will work for all incoming transactions until it is deleted.\
        \ There is no need to do that for every transaction.{/warning}"
      operationId: Delete Automatic Tokens Forwarding
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - ethereum
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          example: testnet
          type: string
        style: simple
      - description: Represents a unique ID used to reference the specific callback
          subscription.
        example: 6017dd02a309213863be9e55
        explode: false
        in: path
        name: referenceId
        required: true
        schema:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 6017dd02a309213863be9e55
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAutomaticTokensForwardingR'
          description: The delete request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Automatic_Tokens_Forwarding_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Automatic_Tokens_Forwarding_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Automatic_Tokens_Forwarding_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Delete Automatic Tokens Forwarding
      tags:
      - Automatic Tokens Forwarding
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/addresses/validate:
    post:
      description: This endpoint checks user public addresses whether they are valid
        or not.
      operationId: Validate Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zilliqa
          - binance-smart-chain
          - zcash
          - tron
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - nile
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateAddressRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validate_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validate_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validate_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Validate Address
      tags:
      - Features
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/fees/eip1559:
    get:
      description: Through this endpoint customers can obtain fee recommendations
        specifically for EIP 1559.
      operationId: Get EIP 1559 Fee Recommendations
      parameters:
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum."
          enum:
          - ethereum
          example: ethereum
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEIP1559FeeRecommendationsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_EIP_1559_Fee_Recommendations_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_EIP_1559_Fee_Recommendations_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_EIP_1559_Fee_Recommendations_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get EIP 1559 Fee Recommendations
      tags:
      - Features
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/transactions/broadcast:
    post:
      callbacks:
        BROADCAST_TRANSACTION_SUCCESS:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: bROADCAST_TRANSACTION_SUCCESS_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/BroadcastTransactionSuccess'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
        BROADCAST_TRANSACTION_FAIL:
          '{$request.BODY#/callbackUrl':
            post:
              operationId: bROADCAST_TRANSACTION_FAIL_request_BODYCallbackUrlPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/BroadcastTransactionFail'
                required: true
              responses:
                "200":
                  description: A Webhook request expects a response with status code
                    200 (OK) or it will retry the request.
              x-callback-request: true
      description: "Through this endpoint customers can broadcast transactions that\
        \ have been already signed locally. Instead of using a node for broadcasting\
        \ a signed transaction users can use this endpoint. We then keep the user\
        \ posted about the status by sending you a callback with a success or failure\
        \ status.\r\n\r\n{warning}This can be prepared and signed **only** locally,\
        \ not through the API. We can provide support only for the process of broadcasting.{/warning}"
      operationId: Broadcast Locally Signed Transaction
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - zcash
          - binance-smart-chain
          - xrp
          - polygon
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - goerli
          - mordor
          - mumbai
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastLocallySignedTransactionRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastLocallySignedTransactionR'
          description: The resource has been successfully submitted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Broadcast_Locally_Signed_Transaction_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Broadcast_Locally_Signed_Transaction_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Broadcast_Locally_Signed_Transaction_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Broadcast_Locally_Signed_Transaction_409_response'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Broadcast Locally Signed Transaction
      tags:
      - Features
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/gas-limit:
    post:
      description: This endpoint helps customer in estimating the gas limit needed
        for a transaction. It gives information for gas expenses when sending ether
        to contracts or making a transaction with additional data in it.
      operationId: Estimate Gas Limit
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstimateGasLimitRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateGasLimitR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Gas_Limit_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Gas_Limit_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Gas_Limit_403_response'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response'
          description: The specified resource has not been found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Estimate Gas Limit
      tags:
      - Features
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/gas-limit/contract:
    post:
      description: This endpoint helps customer in estimating the Contract Gas Limit
        needed for a transaction. It gives information for gas expenses for a specific
        contract when sending ethers or making a transaction with additional data
        in it.
      operationId: Estimate Token Gas Limit
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum."
        example: ethereum
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum."
          enum:
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          example: ethereum
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: ropsten
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - mordor
          - testnet
          - goerli
          example: ropsten
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstimateTokenGasLimitRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateTokenGasLimitR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Token_Gas_Limit_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Token_Gas_Limit_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimate_Token_Gas_Limit_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Estimate Token Gas Limit
      tags:
      - Features
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/decode-raw-transaction:
    post:
      description: Through this endpoint customers can decode a raw transaction hex
        and see the decoded transactions' details.
      operationId: Decode Raw Transaction Hex
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - binance-smart-chain
          - zcash
          example: bitcoin
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - mordor
          - goerli
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecodeRawTransactionHexRB'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecodeRawTransactionHexR'
          description: The resource has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decode_Raw_Transaction_Hex_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decode_Raw_Transaction_Hex_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decode_Raw_Transaction_Hex_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Decode Raw Transaction Hex
      tags:
      - Features
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/decode-x-address/{xAddress}:
    get:
      description: "Through this endpoint, customers can decode an encoded XRP address\
        \ with tag, by providing the specific x-address. The response includes the\
        \ decoded classic address and the tag."
      operationId: Decode X-Address
      parameters:
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: xrp
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - xrp
          example: xrp
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: Represents the encoded classic address with its destination tag.
        example: TVTMSyg6nRscAm2JtRd8hnpF9nD21CgZx6ibb9iy3EWHotV
        explode: false
        in: path
        name: xAddress
        required: true
        schema:
          description: Represents the encoded classic address with its destination
            tag.
          example: TVTMSyg6nRscAm2JtRd8hnpF9nD21CgZx6ibb9iy3EWHotV
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecodeX-AddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decode_X_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decode_X_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decode_X_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Decode X-Address
      tags:
      - Features
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /blockchain-tools/{blockchain}/{network}/encode-x-address/{classicAddress}/{addressTag}:
    get:
      description: "Through this endpoint, customers can encode an encoded XRP address\
        \ with tag, by providing the specific x-address. The response includes the\
        \ encoded classic address and the tag."
      operationId: Encode X-Address
      parameters:
      - description: Defines a specific Tag that is an additional XRP address feature.
          It helps identifying a transaction recipient beyond a wallet address.
        example: 3999472835
        explode: false
        in: path
        name: addressTag
        required: true
        schema:
          description: Defines a specific Tag that is an additional XRP address feature.
            It helps identifying a transaction recipient beyond a wallet address.
          example: 3999472835
          type: integer
        style: simple
      - description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
          \ Bitcoin, etc."
        example: xrp
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - xrp
          example: xrp
          type: string
        style: simple
      - description: "Represents the public address, which is a compressed and shortened\
          \ form of a public key."
        example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        explode: false
        in: path
        name: classicAddress
        required: true
        schema:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          type: string
        style: simple
      - description: "Represents the name of the blockchain network used; blockchain\
          \ networks are usually identical as technology and software, but they differ\
          \ in data, e.g. - \"mainnet\" is the live network with actual data while\
          \ networks like \"testnet\", \"ropsten\" are test networks."
        example: testnet
        explode: false
        in: path
        name: network
        required: true
        schema:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          example: testnet
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncodeX-AddressR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encode_X_Address_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encode_X_Address_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encode_X_Address_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Encode X-Address
      tags:
      - Features
      x-cost: 10
      x-charge-count: 1
      x-is-list: false
  /market-data/assets/supported:
    get:
      description: "This endpoint will return a list of supported assets. The asset\
        \ could be a cryptocurrency or FIAT assets that we support. Each asset has\
        \ a unique identifier - `assetId` and a unique symbol in the form of a string,\
        \ e.g. \"BTC\"."
      operationId: List Supported Assets
      parameters:
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines the type of the supported asset. This could be either
          "crypto" or "fiat".
        example: crypto
        explode: true
        in: query
        name: assetType
        required: false
        schema:
          description: Defines the type of the supported asset. This could be either
            "crypto" or "fiat".
          enum:
          - fiat
          - crypto
          example: crypto
          type: string
        style: form
      - description: Defines how many items should be returned in the response per
          page basis.
        example: 50
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        style: form
      - description: "The starting index of the response items, i.e. where the response\
          \ should start listing the returned items."
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSupportedAssetsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Supported_Assets_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Supported_Assets_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Supported_Assets_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: List Supported Assets
      tags:
      - Metadata
      x-cost: 1
      x-charge-count: 1
      x-is-list: true
  /market-data/exchange-rates/by-symbols/{fromAssetSymbol}/{toAssetSymbol}:
    get:
      description: Through this endpoint customers can obtain exchange rates by asset
        symbols. The process represents the exchange rate value of a single unit of
        one asset versus another one. Data is provided per unique asset symbol.
      operationId: Get Exchange Rate By Asset Symbols
      parameters:
      - description: Defines the base asset symbol to get a rate for.
        example: btc
        explode: false
        in: path
        name: fromAssetSymbol
        required: true
        schema:
          description: Defines the base asset symbol to get a rate for.
          example: btc
          type: string
        style: simple
      - description: Defines the relation asset symbol in which the base asset rate
          will be displayed.
        example: usd
        explode: false
        in: path
        name: toAssetSymbol
        required: true
        schema:
          description: Defines the relation asset symbol in which the base asset rate
            will be displayed.
          example: usd
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines the time of the market data used to calculate the exchange
          rate in UNIX Timestamp. Oldest possible timestamp is 30 days.
        example: 1635514425
        explode: true
        in: query
        name: calculationTimestamp
        required: false
        schema:
          description: Defines the time of the market data used to calculate the exchange
            rate in UNIX Timestamp. Oldest possible timestamp is 30 days.
          example: 1635514425
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExchangeRateByAssetSymbolsR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Exchange_Rate_By_Asset_Symbols_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Exchange_Rate_By_Asset_Symbols_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Exchange_Rate_By_Asset_Symbols_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Exchange_Rate_By_Asset_Symbols_422_response'
          description: "422"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Exchange Rate By Asset Symbols
      tags:
      - Exchange Rates
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /market-data/exchange-rates/by-asset-ids/{fromAssetId}/{toAssetId}:
    get:
      description: Through this endpoint customers can obtain exchange rates by asset
        IDs. The process represents the exchange rate value of a single unit of one
        asset versus another one. Data is provided per unique asset Reference ID.
      operationId: Get Exchange Rate By Assets IDs
      parameters:
      - description: Defines the base asset Reference ID to get a rate for.
        example: 5b1ea92e584bf50020130612
        explode: false
        in: path
        name: fromAssetId
        required: true
        schema:
          description: Defines the base asset Reference ID to get a rate for.
          example: 5b1ea92e584bf50020130612
          type: string
        style: simple
      - description: Defines the relation asset Reference ID in which the base asset
          rate will be displayed.
        example: 5b1ea92e584bf50020130615
        explode: false
        in: path
        name: toAssetId
        required: true
        schema:
          description: Defines the relation asset Reference ID in which the base asset
            rate will be displayed.
          example: 5b1ea92e584bf50020130615
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      - description: Defines the time of the market data used to calculate the exchange
          rate in UNIX Timestamp. Oldest possible timestamp is 30 days.
        example: 1618577849
        explode: true
        in: query
        name: calculationTimestamp
        required: false
        schema:
          description: Defines the time of the market data used to calculate the exchange
            rate in UNIX Timestamp. Oldest possible timestamp is 30 days.
          example: 1618577849
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExchangeRateByAssetsIDsR'
          description: The request has been successfull.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Exchange_Rate_By_Assets_IDs_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Exchange_Rate_By_Assets_IDs_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Exchange_Rate_By_Assets_IDs_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Exchange_Rate_By_Assets_IDs_422_response'
          description: "422"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Exchange Rate By Assets IDs
      tags:
      - Exchange Rates
      x-cost: 1
      x-charge-count: 1
      x-is-list: false
  /market-data/assets/assetId/{assetId}:
    get:
      description: "Through this endpoint users can obtain information on assets by\
        \ `assetId`.\r\n\r\nThe details returned could include information on the\
        \ latest rate and rate fluctuation of different periods of time - 24 hours,\
        \ a week, one hour, the encoding of the logo, and more."
      operationId: Get Asset Details By Asset ID
      parameters:
      - description: Defines the unique ID of the specific asset.
        example: 5b1ea92e584bf50020130612
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          description: Defines the unique ID of the specific asset.
          example: 5b1ea92e584bf50020130612
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetDetailsByAssetIDR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Asset_Details_By_Asset_ID_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Asset_Details_By_Asset_ID_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Asset_Details_By_Asset_ID_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Asset Details By Asset ID
      tags:
      - Assets
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
  /market-data/assets/{assetSymbol}:
    get:
      description: "Through this endpoint users can obtain information on assets by\
        \ asset symbol.\r\n\r\nThe details returned could include information on the\
        \ latest rate and rate fluctuation of different periods of time - 24 hours,\
        \ a week, one hour, the encoding of the logo, and more."
      operationId: Get Asset Details By Asset Symbol
      parameters:
      - description: Specifies the asset's unique symbol in the Crypto APIs listings.
        example: BTC
        explode: false
        in: path
        name: assetSymbol
        required: true
        schema:
          description: Specifies the asset's unique symbol in the Crypto APIs listings.
          example: BTC
          type: string
        style: simple
      - description: In batch situations the user can use the context to correlate
          responses with requests. This property is present regardless of whether
          the response was successful or returned as an error. `context` is specified
          by the user.
        example: yourExampleString
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: yourExampleString
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetDetailsByAssetSymbolR'
          description: The request has been successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Asset_Details_By_Asset_Symbol_400_response'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Asset_Details_By_Asset_Symbol_401_response'
          description: "401"
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_402_response'
          description: You have insufficient credits. Please upgrade your plan from
            your Dashboard or contact our team via email.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_Asset_Details_By_Asset_Symbol_403_response'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_409_response'
          description: The data provided seems to be invalid.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_415_response'
          description: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_422_response'
          description: "Your request body for POST requests must have a structure\
            \ of { data: { item: [...properties] } }"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_429_response'
          description: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convert_Bitcoin_Cash_Address_500_response'
          description: "An unexpected server error has occurred, we are working to\
            \ fix this. Please try again later and in case it occurs again please\
            \ report it to our team via email."
      summary: Get Asset Details By Asset Symbol
      tags:
      - Assets
      x-cost: 5
      x-charge-count: 1
      x-is-list: false
components:
  schemas:
    ConvertBitcoinCashAddressRB:
      example:
        data:
          item:
            address: bchtest:qpcgz3zt5zp5dj7vd9ms24xquamncvhnxvlz97eee8
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ConvertBitcoinCashAddressRB_data'
      required:
      - data
      type: object
    GenerateDepositAddressRB:
      example:
        data:
          item:
            label: yourLabelStringHere
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GenerateDepositAddressRB_data'
      required:
      - data
      type: object
    CreateCoinsTransactionRequestFromWalletRB:
      example:
        data:
          item:
            feePriority: standard
            note: yourAdditionalInformationhere
            recipients:
            - amount: "0.125"
              address: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
            - amount: "0.125"
              address: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
            prepareStrategy: minimize-dust
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletRB_data'
      required:
      - data
      type: object
    CreateCoinsTransactionRequestFromAddressRB:
      example:
        data:
          item:
            feePriority: slow
            note: yourAdditionalInformationhere
            amount: "0.2"
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressRB_data'
      required:
      - data
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountRB:
      example:
        data:
          item:
            feePriority: standard
            note: yourAdditionalInformationhere
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountRB_data'
      required:
      - data
      type: object
    CreateFungibleTokensTransactionRequestFromAddressRB:
      example:
        data:
          item:
            feePriority: standard
            note: yourAdditionalInformationhere
            amount: "0.2"
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
            tokenIdentifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressRB_data'
      required:
      - data
      type: object
    CreateFungibleTokensTransactionRequestFromAddressRISE:
      description: Ethereum Erc20 Token
      properties:
        contractAddress:
          description: Defines the contract address in the blockchain for an ERC20
            token.
          example: 0x092de782a7e1e0a92991ad829a0a33aef3c7545e
          type: string
      required:
      - contractAddress
      type: object
    CreateFungibleTokensTransactionRequestFromAddressRIS:
      description: Represents the specific token data which depends on its type -
        if it is a Coin or Token.
      oneOf:
      - $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressRISE'
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityRB:
      example:
        data:
          item:
            note: yourAdditionalInformationhere
            amount: "0.0006"
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            recipientAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityRB_data'
      required:
      - data
      type: object
    SyncHDWalletXPubYPubZPubRB:
      example:
        data:
          item:
            extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubRB_data'
      required:
      - data
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRB:
      example:
        data:
          item:
            note: yourAdditionalInformationhere
            amount: "0.25684"
            feeLimit: "1000000000"
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            recipientAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
            tokenIdentifier: TF17BgPaZYbz8oxbjhriubPDsA7ArKoLX3
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRB_data'
      required:
      - data
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST:
      description: Tron Trc20 Token
      properties:
        contractAddress:
          description: Defines the contract address in the blockchain for an ERC20
            token.
          example: TF17BgPaZYbz8oxbjhriubPDsA7ArKoLX3
          type: string
        feeLimit:
          description: Defines the fee limit value.
          example: "1000000000"
          type: string
        symbol:
          description: Defines the Token symbol.
          example: JST
          type: string
      required:
      - contractAddress
      - feeLimit
      - symbol
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS:
      description: Represents the specific token data which depends on its type -
        if it is a Coin or Token.
      oneOf:
      - $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIST'
      type: object
    SyncNewHDWalletXPubYPubZPubRB:
      example:
        data:
          item:
            extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubRB_data'
      required:
      - data
      type: object
    DeriveAndSyncNewReceivingAddressesRB:
      example:
        data:
          item:
            extendedPublicKey: xpub6DSqNgZke91RZBXk9s8tBknGPiVB7AQqVyxHCLEM49D3VGeMWg6qmSDruSn7SgQApVH1M8cSvjXfDmhRysDt9hZWFAMcZf4X1DAzd23G4ZQ
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesRB_data'
      required:
      - data
      type: object
    DeriveAndSyncNewChangeAddressesRB:
      example:
        data:
          item:
            extendedPublicKey: xpub6BuJ8T4xTEePRTWxEcyyZRHPRZw91GFRjuu4H1eNqNGDswpraD5Hthf7JBbK7iQayuLf2MbxT6MVrKGbY7HvBcQo937Qiwmxz7Fzy9S5y9q
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesRB_data'
      required:
      - data
      type: object
    PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubRB:
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRB_data'
      required:
      - data
      type: object
    PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubRB:
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubRB_data'
      required:
      - data
      type: object
    NewUnconfirmedCoinsTransactionsRB:
      example:
        data:
          item:
            address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsRB_data'
      required:
      - data
      type: object
    NewUnconfirmedTokensTransactionsRB:
      example:
        data:
          item:
            address: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsRB_data'
      required:
      - data
      type: object
    NewConfirmedCoinsTransactionsRB:
      example:
        data:
          item:
            address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
            callbackSecretKey: yourSecretKey
            callbackURL: https://example.com
            receiveCallbackOn: 3
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsRB_data'
      required:
      - data
      type: object
    NewConfirmedTokensTransactionsRB:
      example:
        data:
          item:
            address: 0xbf16582e53d6fd892f11de8a3e29e8c3b65d77c2
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            receiveCallbackOn: 3
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsRB_data'
      required:
      - data
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationRB:
      example:
        data:
          item:
            confirmationsCount: 3
            address: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationRB_data'
      required:
      - data
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationRB:
      example:
        data:
          item:
            confirmationsCount: 3
            address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationRB_data'
      required:
      - data
      type: object
    MinedTransactionRB:
      example:
        data:
          item:
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: false
            transactionId: df2690ff97e72c1f8b0f2102a8cb5c1d0fa8fb8754d543c9bc0edc4d4bc34bfc
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/MinedTransactionRB_data'
      required:
      - data
      type: object
    NewBlockRB:
      example:
        data:
          item:
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewBlockRB_data'
      required:
      - data
      type: object
    BlockHeightReachedRB:
      example:
        data:
          item:
            blockHeightReached: 667900
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/BlockHeightReachedRB_data'
      required:
      - data
      type: object
    ActivateBlockchainEventSubscriptionRB:
      example:
        data:
          item: "{}"
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ActivateBlockchainEventSubscriptionRB_data'
      required:
      - data
      type: object
    NewConfirmedInternalTransactionsRB:
      example:
        data:
          item:
            address: 0xbcc817f057950b0df41206c5d7125e6225cae18e
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            receiveCallbackOn: 3
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsRB_data'
      required:
      - data
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationRB:
      example:
        data:
          item:
            confirmationsCount: 3
            address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            allowDuplicates: true
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationRB_data'
      required:
      - data
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountRB:
      example:
        data:
          item:
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
            amountHigherThan: 2
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountRB_data'
      required:
      - data
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountRB:
      example:
        data:
          item:
            contractAddress: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
            amountHigherThan: 2
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountRB_data'
      required:
      - data
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountRB:
      example:
        data:
          item:
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            allowDuplicates: true
            amountHigherThan: 3
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountRB_data'
      required:
      - data
      type: object
    CreateAutomaticCoinsForwardingRB:
      example:
        data:
          item:
            confirmationsCount: 3
            feePriority: standard
            minimumTransferAmount: "0.02"
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateAutomaticCoinsForwardingRB_data'
      required:
      - data
      type: object
    CreateAutomaticTokensForwardingRBTokenDataBitcoinOmniToken:
      description: Bitcoin Omni Token
      properties:
        propertyId:
          description: Represents the specific `propertyId` of the token data that
            will be forwarded.
          example: 31
          type: integer
      required:
      - propertyId
      type: object
    CreateAutomaticTokensForwardingRBTokenDataEthereumToken:
      description: Ethereum Token
      properties:
        contractAddress:
          description: Represents the specific `contractAddress` of the Token that
            will be forwarded.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - contractAddress
      type: object
    CreateAutomaticTokensForwardingRBTokenData:
      oneOf:
      - $ref: '#/components/schemas/CreateAutomaticTokensForwardingRBTokenDataBitcoinOmniToken'
      - $ref: '#/components/schemas/CreateAutomaticTokensForwardingRBTokenDataEthereumToken'
      type: object
    CreateAutomaticTokensForwardingRB:
      example:
        data:
          item:
            confirmationsCount: "3"
            feePriority: standard
            tokenData: null
            minimumTransferAmount: "0.00002"
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingRB_data'
      required:
      - data
      type: object
    AddTokensToExistingFromAddressRBTokenDataBitcoinOmniToken:
      description: Bitcoin Omni Token
      properties:
        propertyId:
          description: Represents the specific `propertyId` of the token data that
            will be forwarded.
          example: 2
          type: integer
      required:
      - propertyId
      type: object
    AddTokensToExistingFromAddressRBTokenDataEthereumToken:
      description: Ethereum Token
      properties:
        contractAddress:
          description: Represents the specific `contractAddress` of the Token that
            will be forwarded.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - contractAddress
      type: object
    AddTokensToExistingFromAddressRBTokenData:
      oneOf:
      - $ref: '#/components/schemas/AddTokensToExistingFromAddressRBTokenDataBitcoinOmniToken'
      - $ref: '#/components/schemas/AddTokensToExistingFromAddressRBTokenDataEthereumToken'
      type: object
    AddTokensToExistingFromAddressRB:
      example:
        data:
          item:
            confirmationsCount: 3
            feePriority: standard
            tokenData: null
            minimumTransferAmount: "0.00001"
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
            toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressRB_data'
      required:
      - data
      type: object
    ValidateAddressRB:
      example:
        data:
          item:
            address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ValidateAddressRB_data'
      required:
      - data
      type: object
    BroadcastLocallySignedTransactionRB:
      example:
        data:
          item:
            signedTransactionHex: 0xf86a22827d00831e8480941b85a43e2e7f52e766ddfdfa2b901c42cb1201be8801b27f33b807c0008029a084ccbf02b27e0842fb1eda7a187a5589c3759be0e969e0ca989dc469a5e5e394a02e111e1156b197f1de4c1d9ba4af26e50665ea6d617d05b3e4047da12b915e69
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/BroadcastLocallySignedTransactionRB_data'
      required:
      - data
      type: object
    EstimateGasLimitRB:
      example:
        data:
          item:
            amount: "0.002"
            sender: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
            recipient: 0xc065b539490f81b6c297c37b1925c3be2f190738
            additionalData: yourAdditionalString
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/EstimateGasLimitRB_data'
      required:
      - data
      type: object
    EstimateTokenGasLimitRB:
      example:
        data:
          item:
            amount: "0.12"
            sender: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
            contractType: ERC-20
            contract: 0x092de782a7e1e0a92991ad829a0a33aef3c7545e
            recipient: 0xc065b539490f81b6c297c37b1925c3be2f190738
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/EstimateTokenGasLimitRB_data'
      required:
      - data
      type: object
    DecodeRawTransactionHexRB:
      example:
        data:
          item:
            rawTransactionHex: 0100000001f3f6a909f8521adb57d898d2985834e632374e770fd9e2b98656f1bf1fdfd427010000006b48304502203a776322ebf8eb8b58cc6ced4f2574f4c73aa664edce0b0022690f2f6f47c521022100b82353305988cb0ebd443089a173ceec93fe4dbfe98d74419ecc84a6a698e31d012103c5c1bc61f60ce3d6223a63cedbece03b12ef9f0068f2f3c4a7e7f06c523c3664ffffffff0260e31600000000001976a914977ae6e32349b99b72196cb62b5ef37329ed81b488ac063d1000000000001976a914f76bc4190f3d8e2315e5c11c59cfc8be9df747e388ac00000000
        context: yourExampleString
      properties:
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DecodeRawTransactionHexRB_data'
      required:
      - data
      type: object
    DecodeRawTransactionHexRISB:
      description: Bitcoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          type: integer
        transactionHash:
          description: "Represents the same as transactionId for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols hash is different from transactionId\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        vSize:
          description: Represents the virtual size of this transaction.
          example: 166
          type: integer
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISB_vout_inner'
          type: array
        weight:
          description: "Represents the size of Bitcoin block, measured in weight units\
            \ and including the segwit discount."
          example: 236
          type: integer
      required:
      - locktime
      - transactionHash
      - vSize
      - version
      - vin
      - vout
      type: object
    DecodeRawTransactionHexRISB2:
      description: Bitcoin Cash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          type: integer
        transactionHash:
          description: "Represents the same as transactionId for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols hash is different from transactionId\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISB2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISB2_vout_inner'
          type: array
        weight:
          description: "Represents the size of a block, measured in weight units and\
            \ including the segwit discount."
          example: 256
          type: integer
      required:
      - locktime
      - transactionHash
      - vSize
      - version
      - vin
      - vout
      type: object
    DecodeRawTransactionHexRISD:
      description: Dash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          type: integer
        transactionHash:
          description: "Represents the same as transactionId for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols hash is different from transactionId\
            \ for SegWit transactions."
          example: 1b2a8bd59c0d776015cfe6fd6b5b4f936ffcf8adf7a56a1eed460e915ce82ea7
          type: string
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISD_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISD_vout_inner'
          type: array
        weight:
          description: "Represents the size of a block, measured in weight units and\
            \ including the segwit discount."
          example: 256
          type: integer
      required:
      - locktime
      - transactionHash
      - vSize
      - version
      - vin
      - vout
      type: object
    DecodeRawTransactionHexRISD2:
      description: Dogecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          type: integer
        transactionHash:
          description: "Represents the same as transactionId for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols hash is different from transactionId\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents transaction version number
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISD2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISD2_vout_inner'
          type: array
        weight:
          description: "Represents the size of a block, measured in weight units and\
            \ including the segwit discount."
          example: 154
          type: integer
      required:
      - locktime
      - transactionHash
      - vSize
      - version
      - vin
      - vout
      type: object
    DecodeRawTransactionHexRISL:
      description: Litecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain
          example: 2
          type: integer
        transactionHash:
          description: "Represents the same as transactionId for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols hash is different from transactionId\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISL_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISL_vout_inner'
          type: array
        weight:
          description: "Represents the size of a block, measured in weight units and\
            \ including the segwit discount."
          example: 245
          type: integer
      required:
      - locktime
      - transactionHash
      - vSize
      - version
      - vin
      - vout
      type: object
    DecodeRawTransactionHexRISE:
      description: Ethereum
      properties:
        approximateFee:
          description: Defines the approximate fee value. When isConfirmed is True
            - Defines the amount of the transaction fee When isConfirmed is False
            - For ETH-based blockchains this attribute represents the max fee value.
          example: "0.00016932"
          type: string
        approximateMinimumRequiredFee:
          description: Defines the approximate minimum fee that is required for the
            transaction.
          example: "0.000021"
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPaidForData:
          description: Represents the amount of gas paid for the data in the transaction.
          example: "0"
          type: string
        gasPrice:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "2994782927"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        maxFeePerGas:
          description: Defines the maximum amount that customer is willing to pay
            per unit of gas to get his transaction included in a block.
          example: "0.000000149248157973"
          type: string
        maxFeePriorityPerGas:
          description: Represents determined by the user value that is paid directly
            to miners.
          example: "0.000000002"
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        r:
          description: Represents output of an ECDSA signature.
          example: 0xc297031972fe2d4926e01e66768d669882ace256f8a8397f757af341f5e7c499
          type: string
        recipient:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 0xd30b438df65f4f788563b2b3611bd6059bff4ad9
          type: string
        s:
          description: Represents output of an ECDSA signature.
          example: 0x7b717faa31c5edf9332e1cd5fa3f736838a9262834ece621bb3c30671b66ab05
          type: string
        sender:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 0xd30b438df65f4f788563b2b3611bd6059bff4ad9
          type: string
        type:
          description: "Specifies the transaction type as one from three options:\
            \ if response returns a `\"0\"` it means the raw transaction includes\
            \ legacy transaction data, if it is `\"1\"` - includes access lists for\
            \ EIP2930, and if it is `\"2\"` - EIP1559 data."
          example: 0
          type: integer
        v:
          description: Defines the the recovery id.
          example: 0x26
          type: string
        value:
          description: Represents the sent/received amount.
          example: "0.06"
          type: string
      required:
      - gasLimit
      - nonce
      - recipient
      - sender
      - type
      type: object
    DecodeRawTransactionHexRISE2:
      description: Ethereum Classic
      properties:
        approximateFee:
          description: Defines the approximate fee value. When isConfirmed is True
            - Defines the amount of the transaction fee When isConfirmed is False
            - For ETH-based blockchains this attribute represents the max fee value.
          example: "0.003675"
          type: string
        approximateMinimumRequiredFee:
          description: Defines the approximate minimum fee that is required for the
            transaction.
          example: "0.000021"
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPaidForData:
          description: Represents the amount of gas paid for the data in the transaction.
          example: "0"
          type: string
        gasPrice:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "2994782927"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        r:
          description: Represents output of an ECDSA signature.
          example: 0xc297031972fe2d4926e01e66768d669882ace256f8a8397f757af341f5e7c499
          type: string
        recipient:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 0xd80881d8560a293ae1137166b3180b28b960a9ad
          type: string
        s:
          description: Represents output of an ECDSA signature.
          example: 0x7b717faa31c5edf9332e1cd5fa3f736838a9262834ece621bb3c30671b66ab05
          type: string
        sender:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 0xd80881d8560a293ae1137166b3180b28b960a9ad
          type: string
        type:
          description: "Specifies the transaction type as one from three options:\
            \ if response returns a `\"0\"` it means the raw transaction includes\
            \ legacy transaction data, if it is `\"1\"` - includes access lists for\
            \ EIP2930, and if it is `\"2\"` - EIP1559 data."
          example: 0
          type: integer
        v:
          description: Defines the the recovery id.
          example: 0x26
          type: string
        value:
          description: Represents the sent/received amount.
          example: "0.025"
          type: string
      required:
      - gasLimit
      - nonce
      - recipient
      - sender
      - type
      type: object
    DecodeRawTransactionHexRISB22:
      description: Binance Smart Chain
      properties:
        approximateFee:
          description: Defines the approximate fee value. When isConfirmed is True
            - Defines the amount of the transaction fee When isConfirmed is False
            - For ETH-based blockchains this attribute represents the max fee value.
          example: "0.00016932"
          type: string
        approximateMinimumRequiredFee:
          description: Defines the approximate minimum fee that is required for the
            transaction.
          example: "0.000021"
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPaidForData:
          description: Represents the amount of gas paid for the data in the transaction.
          example: "0"
          type: string
        gasPrice:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "2994782927"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x34
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        r:
          description: Represents output of an ECDSA signature.
          example: 0xc297031972fe2d4926e01e66768d669882ace256f8a8397f757af341f5e7c49
          type: string
        recipient:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 0x59d9d70DC4717cc9F3c1f7Bf3Fb9B62430872725
          type: string
        s:
          description: Represents output of an ECDSA signature.
          example: 0x7b717faa31c5edf9332e1cd5fa3f736838a9262834ece621bb3c30671b66ab05
          type: string
        sender:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 0x4dF189c73C714dd636a99AA4f3317CcD72a05d62
          type: string
        type:
          description: "Specifies the transaction type as one from three options:\
            \ if response returns a `\"0\"` it means the raw transaction includes\
            \ legacy transaction data, if it is `\"1\"` - includes access lists for\
            \ EIP2930, and if it is `\"2\"` - EIP1559 data."
          example: 0
          type: integer
        v:
          description: Defines the the recovery id.
          example: 0x26
          type: string
        value:
          description: Represents the sent/received amount.
          example: "11.25"
          type: string
      required:
      - gasLimit
      - nonce
      - recipient
      - sender
      - type
      type: object
    DecodeRawTransactionHexRISZ:
      description: Zcash
      properties:
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        saplinged:
          description: Defines if the transaction includes sapling or not.
          example: true
          type: boolean
        transactionHash:
          description: "Represents the same as transactionId for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols hash is different from transactionId\
            \ for SegWit transactions."
          example: e8ae0fed2699de544f48a9209085a6fe85e4697f3cc5625a85fd5021299e8f82
          type: string
        valueBalance:
          description: Defines the transaction value balance.
          example: "0"
          type: string
        version:
          description: Represents the transaction version number.
          example: 4
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID
          example: "2301567109"
          type: string
        vin:
          description: Represents the Inputs of the transaction
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISZ_vin_inner'
          type: array
        vout:
          description: Represents the Inputs of the transaction
          items:
            $ref: '#/components/schemas/DecodeRawTransactionHexRISZ_vout_inner'
          type: array
      required:
      - expiryHeight
      - locktime
      - overwintered
      - saplinged
      - transactionHash
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    DecodeRawTransactionHexRIS:
      description: Represents the specific transaction data according to the blockchain
      oneOf:
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISB'
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISB2'
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISD'
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISD2'
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISL'
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISE'
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISE2'
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISB22'
      - $ref: '#/components/schemas/DecodeRawTransactionHexRISZ'
      type: object
    GetAssetDetailsByAssetIDRISC:
      description: Crypto Type Data
      properties:
        "1HourPriceChangeInPercentage":
          description: Represents the percentage of the asset's current price against
            the its price from 1 hour ago.
          example: "-0.4277852328344024"
          type: string
        "1WeekPriceChangeInPercentage":
          description: Represents the percentage of the asset's current price against
            the its price from 1 week ago.
          example: "1.6572304104646762"
          type: string
        "24HoursPriceChangeInPercentage":
          description: Represents the percentage of the asset's current price against
            the its price from 24 hours ago.
          example: "-0.059688916478600924"
          type: string
        "24HoursTradingVolume":
          description: Represents the trading volume of the asset for the time frame
            of 24 hours.
          example: "3116834672.508857"
          type: string
        assetType:
          description: Represent a subtype of the crypto assets. Could be COIN or
            TOKEN.
          enum:
          - coin
          - token
          example: coin
          type: string
        circulatingSupply:
          description: Represents the amount of the asset that is circulating on the
            market and in public hands.
          example: "18562881"
          type: string
        marketCapInUSD:
          description: Defines the total market value of the asset's circulating supply
            in USD.
          example: "1146119021006.8835"
          type: string
        maxSupply:
          description: Represents the maximum amount of all coins of a specific asset
            that will ever exist in its lifetime.
          example: "21000000"
          type: string
      required:
      - 1HourPriceChangeInPercentage
      - 1WeekPriceChangeInPercentage
      - 24HoursPriceChangeInPercentage
      - 24HoursTradingVolume
      - assetType
      - circulatingSupply
      - marketCapInUSD
      - maxSupply
      type: object
    GetAssetDetailsByAssetIDRIS:
      description: Represents a specific asset's data depending on its type (whether
        it is "crypto" or "fiat").
      oneOf:
      - $ref: '#/components/schemas/GetAssetDetailsByAssetIDRISC'
      type: object
    GetAssetDetailsByAssetSymbolRISC:
      description: Crypto Type Data
      properties:
        "1HourPriceChangeInPercentage":
          description: Represents the percentage of the asset's current price against
            the its price from 1 hour ago.
          example: "-0.4277852328344024"
          type: string
        "1WeekPriceChangeInPercentage":
          description: Represents the percentage of the asset's current price against
            the its price from 1 week ago.
          example: "1.6572304104646762"
          type: string
        "24HoursPriceChangeInPercentage":
          description: Represents the percentage of the asset's current price against
            the its price from 24 hours ago.
          example: "-0.059688916478600924"
          type: string
        "24HoursTradingVolume":
          description: Represents the trading volume of the asset for the time frame
            of 24 hours.
          example: "3116834672.508857"
          type: string
        assetType:
          description: Defines the type of the supported asset. This could be either
            "crypto" or "fiat".
          enum:
          - coin
          - token
          example: coin
          type: string
        circulatingSupply:
          description: Represents the amount of the asset that is circulating on the
            market and in public hands.
          example: "18562881"
          type: string
        marketCapInUSD:
          description: Defines the total market value of the asset's circulating supply
            in USD.
          example: "1146119021006.8835"
          type: string
        maxSupply:
          description: Represents the maximum amount of all coins of a specific asset
            that will ever exist in its lifetime.
          example: "21000000"
          type: string
      required:
      - 1HourPriceChangeInPercentage
      - 1WeekPriceChangeInPercentage
      - 24HoursPriceChangeInPercentage
      - 24HoursTradingVolume
      - assetType
      - circulatingSupply
      - marketCapInUSD
      - maxSupply
      type: object
    GetAssetDetailsByAssetSymbolRIS:
      description: Represents a specific asset's data depending on its type (whether
        it is "crypto" or "fiat").
      oneOf:
      - $ref: '#/components/schemas/GetAssetDetailsByAssetSymbolRISC'
      type: object
    ConvertBitcoinCashAddressRI:
      example:
        convertedAddress: mqmpq9nZBbotG22nVDruEVwn2nCHWKfU4p
      properties:
        convertedAddress:
          description: Represents the converted address
          example: mqmpq9nZBbotG22nVDruEVwn2nCHWKfU4p
          type: string
      required:
      - convertedAddress
      type: object
    ConvertBitcoinCashAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            convertedAddress: mqmpq9nZBbotG22nVDruEVwn2nCHWKfU4p
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ConvertBitcoinCashAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    BannedIpAddress:
      description: banned_ip_address
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: banned_ip_address
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "This IP address has been banned. To check the reason for that,\
            \ please contact our team via email."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    UriNotFound:
      description: uri_not_found
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: uri_not_found
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The specified URI has not been found. Check the URI and try again.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    UnexpectedServerError:
      description: unexpected_server_error
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: unexpected_server_error
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "An unexpected server error has occurred, we are working to fix\
            \ this. Please try again later and in case it occurs again please report\
            \ it to our team via email."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    MissingApiKey:
      description: missing_api_key
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: missing_api_key
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "The specific authorization header (API Key) is missing, please\
            \ check our Authorization section in our Documentation."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    UnsupportedMediaType:
      description: unsupported_media_type
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: unsupported_media_type
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The selected Media Type is unavailable. The Content-Type header
            should be 'application/json'.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    RequestLimitReached:
      description: request_limit_reached
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: request_limit_reached
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "The request limit has been reached. There can be maximum {requests}\
            \ requests per {seconds} second(s) made. Please contact our team via email\
            \ if you need more or upgrade your plan."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    InvalidApiKey:
      description: invalid_api_key
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: invalid_api_key
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "The provided API key is invalid. Please, generate a new one from\
            \ your Dashboard."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    ConvertBitcoinCashAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    InsufficientCredits:
      description: insufficient_credits
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: insufficient_credits
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: You have insufficient credits. Please upgrade your plan from your
            Dashboard or contact our team via email.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    InvalidData:
      description: invalid_data
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: invalid_data
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The data provided seems to be invalid.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    LimitGreaterThanAllowed:
      description: limit_greater_than_allowed
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: limit_greater_than_allowed
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "You have reached the allowed limit. The maximum number of items\
            \ for this endpoint is {limit}, please use the specific pagination attributes\
            \ to get the items in portions."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    ConvertBitcoinCashAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      type: object
    InvalidPagination:
      description: invalid_pagination
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: invalid_pagination
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The pagination attributes that have been used are invalid. Please
            check the Documentation to see details on pagination.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    EndpointNotAllowedForPlan:
      description: endpoint_not_allowed_for_plan
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: endpoint_not_allowed_for_plan
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "This endpoint is not available for your current subscription plan,\
            \ please upgrade your plan to be able to use it."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    ConvertBitcoinCashAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    EndpointNotAllowedForApiKey:
      description: endpoint_not_allowed_for_api_key
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: endpoint_not_allowed_for_api_key
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: This endpoint is not available for your API key.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    FeatureMainnetsNotAllowedForPlan:
      description: feature_mainnets_not_allowed_for_plan
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: feature_mainnets_not_allowed_for_plan
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "Mainnets access is not available for your current subscription\
            \ plan, please upgrade your plan to be able to use it."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    InvalidRequestBodyStructure:
      description: invalid_request_body_structure
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: invalid_request_body_structure
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "Your request body for POST requests must have a structure of {\
            \ data: { item: [...properties] } }"
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    InvalidBlockchain:
      description: invalid_blockchain
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: invalid_blockchain
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "Invalid blockchain! Blockchain MUST be one of: {validBlockchains}"
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    GetAddressBalanceRI:
      example:
        confirmedBalance:
          amount: "3.25"
          unit: TRX
      properties:
        confirmedBalance:
          $ref: '#/components/schemas/GetAddressBalanceRI_confirmedBalance'
      required:
      - confirmedBalance
      type: object
    GetAddressBalanceR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmedBalance:
              amount: "3.25"
              unit: TRX
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetAddressBalanceR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetAddressBalanceE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetAddressBalanceE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetAddressBalanceE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetAddressDetailsRI:
      example:
        confirmedBalance:
          amount: amount
          unit: BTC
        totalSpent:
          amount: "2.1"
          unit: BTC
        incomingTransactionsCount: 2
        totalReceived:
          amount: "5.6"
          unit: BTC
        outgoingTransactionsCount: 2
        transactionsCount: 3
      properties:
        transactionsCount:
          description: "Represents the total number of confirmed coins transactions\
            \ for this address, both incoming and outgoing. Applies for coins only\
            \ **and not** tokens transfers e.g. for Ethereum. `transactionsCount`\
            \ could result as less than incoming and outgoing transactions put together\
            \ (e.g. in Bitcoin), due to the fact that one and the same address could\
            \ be in senders and receivers addresses."
          example: 3
          type: integer
        confirmedBalance:
          $ref: '#/components/schemas/GetAddressDetailsRI_confirmedBalance'
        totalReceived:
          $ref: '#/components/schemas/GetAddressDetailsRI_totalReceived'
        totalSpent:
          $ref: '#/components/schemas/GetAddressDetailsRI_totalSpent'
        incomingTransactionsCount:
          description: Numeric representation of the received transaction count of
            the address
          example: 2
          type: integer
        outgoingTransactionsCount:
          description: Numeric representation of the sent transaction count of the
            address
          example: 2
          type: integer
      required:
      - confirmedBalance
      - incomingTransactionsCount
      - outgoingTransactionsCount
      - totalReceived
      - totalSpent
      - transactionsCount
      type: object
    GetAddressDetailsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmedBalance:
              amount: amount
              unit: BTC
            totalSpent:
              amount: "2.1"
              unit: BTC
            incomingTransactionsCount: 2
            totalReceived:
              amount: "5.6"
              unit: BTC
            outgoingTransactionsCount: 2
            transactionsCount: 3
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetAddressDetailsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetAddressDetailsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetAddressDetailsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetAddressDetailsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetXRPRippleAddressDetailsRI:
      example:
        sequence: 25648975
        incomingTransactionsCount: 1
        balance:
          amount: "22.0000"
          unit: XRP
        outgoingTransactionsCount: 1
        transactionsCount: 2
      properties:
        balance:
          $ref: '#/components/schemas/GetXRPRippleAddressDetailsRI_balance'
        incomingTransactionsCount:
          description: "Defines the count of all confirmed incoming transactions from\
            \ the address for coins. This applies to coins only, not to tokens transfers"
          example: 1
          type: integer
        outgoingTransactionsCount:
          description: "Defines the count of all confirmed outgoing transactions for\
            \ coins. This applies to coins only, not to tokens transfers"
          example: 1
          type: integer
        sequence:
          description: "Defines the transaction input's sequence as an integer, which\
            \ is is used when transactions are replaced with newer versions before\
            \ LockTime."
          example: 25648975
          format: int64
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 2
          type: integer
      required:
      - balance
      - incomingTransactionsCount
      - outgoingTransactionsCount
      - sequence
      - transactionsCount
      type: object
    GetXRPRippleAddressDetailsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            sequence: 25648975
            incomingTransactionsCount: 1
            balance:
              amount: "22.0000"
              unit: XRP
            outgoingTransactionsCount: 1
            transactionsCount: 2
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetXRPRippleAddressDetailsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetXRPRippleAddressDetailsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetXRPRippleAddressDetailsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetXRPRippleAddressDetailsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetZilliqaAddressDetailsRI:
      example:
        incomingTransactionsCount: 5
        balance:
          amount: "23.125"
          unit: ZIL
        outgoingTransactionsCount: 2
        transactionsCount: 5
      properties:
        balance:
          $ref: '#/components/schemas/GetZilliqaAddressDetailsRI_balance'
        incomingTransactionsCount:
          description: Defines the received transaction count to the address.
          example: 5
          type: integer
        outgoingTransactionsCount:
          description: Defines the sent transaction count from the address.
          example: 2
          type: integer
        transactionsCount:
          description: Defines the entire count of the transactions.
          example: 5
          type: integer
      required:
      - balance
      - incomingTransactionsCount
      - outgoingTransactionsCount
      - transactionsCount
      type: object
    GetZilliqaAddressDetailsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            incomingTransactionsCount: 5
            balance:
              amount: "23.125"
              unit: ZIL
            outgoingTransactionsCount: 2
            transactionsCount: 5
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetZilliqaAddressDetailsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetZilliqaAddressDetailsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetZilliqaAddressDetailsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetZilliqaAddressDetailsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetTransactionDetailsByTransactionIDRIBSB:
      description: Bitcoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 166
          type: integer
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDRIBSBC:
      description: Bitcoin Cash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBC_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBC_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDRIBSL:
      description: Litecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 2
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDRIBSD:
      description: Dogecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 266
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDRIBSD2:
      description: Dash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 125
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD2_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDRIBSE:
      description: Ethereum
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSE_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        transactionStatus:
          description: Represents the status of this transaction.
          example: 0x1
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    GetTransactionDetailsByTransactionIDRIBSEC:
      description: Ethereum Classic
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSEC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0xa9059cbb000000000000000000000000acc59ec2f7119dc7a9e69dcd124cff75caae05bf0000000000000000000000000000000000000000000000000000000000989680
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      type: object
    GetTransactionDetailsByTransactionIDRIBSBSC:
      description: Binance Smart Chain
      properties:
        contract:
          description: Represents the specific transaction contract
          example: 0x0000000000000000000000000000000000001000
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBSC_gasPrice'
        gasUsed:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 25341
          type: integer
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      type: object
    GetTransactionDetailsByTransactionIDRIBSZ:
      description: Zcash
      properties:
        bindingSig:
          description: "It is used to enforce balance of Spend and Output transfers,\
            \ in order to prevent their replay across transactions."
          example: 603624b3e78e0de0415dea320797a107076a9f7aabd39f44bc4957803330e9891cb33744ac2ec749c2d2d341f29467c49c0ae35bf34765e2fb7c4cda68584804
          type: string
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        joinSplitPubKey:
          description: Represents an encoding of a JoinSplitSig public validating
            key.
          example: 5d2673b4c727241410e42f214a39218e4f13354d77db8ec31243a7be7ed8e2b7
          type: string
        joinSplitSig:
          description: Is used to sign transactions that contain at least one JoinSplit
            description.
          example: 8b06b926d619ead780b0769e5997ded93f9851fd0efd4b667afc5bcc2792b26cd4a565b4efa7733535fdc09fa566ca59042785d7fd8043d37fdf9e144465080a
          type: string
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 234
          type: integer
        vJoinSplit:
          description: Represents a sequence of JoinSplit descriptions using BCTV14
            proofs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vJoinSplit_inner'
          type: array
        vShieldedOutput:
          description: Object Array representation of transaction output descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedOutput_inner'
          type: array
        vShieldedSpend:
          description: Object Array representation of transaction spend descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner'
          type: array
        valueBalance:
          description: String representation of the transaction value balance
          example: "0"
          type: string
        version:
          description: Defines the version of the transaction.
          example: 1
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID.
          example: 0x892f2085
          type: string
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vout_inner'
          type: array
      required:
      - bindingSig
      - expiryHeight
      - joinSplitPubKey
      - joinSplitSig
      - locktime
      - overwintered
      - size
      - vJoinSplit
      - vShieldedOutput
      - vShieldedSpend
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDRI:
      example:
        recipients:
        - amount: "0.000144"
          address: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
        - amount: "0.000144"
          address: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
        fee:
          amount: "0.00016932"
          unit: ZEC
        minedInBlockHeight: 1939750
        index: 1
        isConfirmed: true
        minedInBlockHash: 00000000407f119ecb74b44229228910400aaeb9f4e3b9869955b85a53e9b7db
        blockchainSpecific: null
        senders:
        - amount: "0.00873472"
          address: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
        - amount: "0.00873472"
          address: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
        transactionHash: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
        transactionId: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
        timestamp: 1582202940
      properties:
        index:
          description: Represents the index position of the transaction in the specific
            block.
          example: 1
          type: integer
        isConfirmed:
          description: Represents the state of the transaction whether it is confirmed
            or not confirmed.
          example: true
          type: boolean
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 00000000407f119ecb74b44229228910400aaeb9f4e3b9869955b85a53e9b7db
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 1939750
          type: integer
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_senders_inner'
          type: array
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        fee:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_fee'
        blockchainSpecific:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBS'
      required:
      - blockchainSpecific
      - fee
      - index
      - isConfirmed
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionId
      type: object
    GetTransactionDetailsByTransactionIDRIBS:
      oneOf:
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBC'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD2'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSE'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSEC'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBSC'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ'
      type: object
    GetTransactionDetailsByTransactionIDR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            recipients:
            - amount: "0.000144"
              address: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
            - amount: "0.000144"
              address: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
            fee:
              amount: "0.00016932"
              unit: ZEC
            minedInBlockHeight: 1939750
            index: 1
            isConfirmed: true
            minedInBlockHash: 00000000407f119ecb74b44229228910400aaeb9f4e3b9869955b85a53e9b7db
            blockchainSpecific: null
            senders:
            - amount: "0.00873472"
              address: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            - amount: "0.00873472"
              address: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            transactionHash: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
            transactionId: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
            timestamp: 1582202940
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetTransactionDetailsByTransactionIDE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetTransactionDetailsByTransactionIDE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetTransactionDetailsByTransactionIDE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    BlockchainDataTransactionNotFound:
      description: blockchain_data_transaction_not_found
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: blockchain_data_transaction_not_found
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The specified transaction has not been found on the specific blockchain.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDRI:
      example:
        receive:
          amount: "2.1256"
          unit: XRP
        destinationTag: 3999472835
        fee:
          amount: "0.0021"
          unit: XRP
        index: "2"
        minedInBlockHash: 3f7af58d6cf1cd9020fb285d8e3e215131800d5109e42647ffd9b3aeae59df33
        type: Payment
        transactionHash: 36a1737481edec87bacc3101dfb752ae2c76f9171e7edebe587e330c1ea77c8d
        offer:
          amount: "3.0154"
          unit: XRP
        sequence: 4294967295
        recipients:
        - amount: "0.00001"
          address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
        - amount: "0.00001"
          address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
        minedInBlockHeight: "15973802"
        additionalData: rPmPErQe4g9725pcNxJpuvKkdqTESTQ6Tu
        senders:
        - amount: "0.00001"
          address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
        - amount: "0.00001"
          address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
        value:
          amount: "3.0254"
          unit: XRP
        status: status
        timestamp: 1582202940
      properties:
        additionalData:
          description: Represents additional data that may be needed.
          example: rPmPErQe4g9725pcNxJpuvKkdqTESTQ6Tu
          type: string
        destinationTag:
          example: 3999472835
          format: int64
          type: integer
        index:
          description: "Defines the index of the transaction, i.e. the consecutive\
            \ place it takes in the blockchain."
          example: "2"
          type: string
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 3f7af58d6cf1cd9020fb285d8e3e215131800d5109e42647ffd9b3aeae59df33
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: "15973802"
          type: string
        offer:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_offer'
        receive:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_receive'
        recipients:
          description: Represents an object of addresses that receive the transactions.
          items:
            $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_recipients_inner'
          type: array
        senders:
          description: Represents an object of addresses that provide the funds.
          items:
            $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_senders_inner'
          type: array
        sequence:
          description: "Defines the transaction input's sequence as an integer, which\
            \ is is used when transactions are replaced with newer versions before\
            \ LockTime."
          example: 4294967295
          format: int64
          type: integer
        status:
          description: Defines the status of the transaction.
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 36a1737481edec87bacc3101dfb752ae2c76f9171e7edebe587e330c1ea77c8d
          type: string
        type:
          description: Defines the type of the transaction.
          example: Payment
          type: string
        fee:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_fee'
        value:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_value'
      required:
      - additionalData
      - fee
      - index
      - minedInBlockHash
      - minedInBlockHeight
      - offer
      - receive
      - recipients
      - senders
      - sequence
      - timestamp
      - transactionHash
      - type
      - value
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            receive:
              amount: "2.1256"
              unit: XRP
            destinationTag: 3999472835
            fee:
              amount: "0.0021"
              unit: XRP
            index: "2"
            minedInBlockHash: 3f7af58d6cf1cd9020fb285d8e3e215131800d5109e42647ffd9b3aeae59df33
            type: Payment
            transactionHash: 36a1737481edec87bacc3101dfb752ae2c76f9171e7edebe587e330c1ea77c8d
            offer:
              amount: "3.0154"
              unit: XRP
            sequence: 4294967295
            recipients:
            - amount: "0.00001"
              address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
            - amount: "0.00001"
              address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
            minedInBlockHeight: "15973802"
            additionalData: rPmPErQe4g9725pcNxJpuvKkdqTESTQ6Tu
            senders:
            - amount: "0.00001"
              address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
            - amount: "0.00001"
              address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
            value:
              amount: "3.0254"
              unit: XRP
            status: status
            timestamp: 1582202940
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ResourceNotFound:
      description: resource_not_found
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: resource_not_found
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: Resource not found
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    GenerateDepositAddressRI:
      example:
        address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
        createdTimestamp: 1624028267
        label: yourLabelStringHere
      properties:
        address:
          description: Specifies the specific address's unique string value.
          example: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
          type: string
        createdTimestamp:
          description: Defines the specific UNIX time when the deposit address was
            created.
          example: 1624028267
          type: integer
        label:
          description: Represents a custom tag that customers can set up for their
            Wallets and addresses. E.g. custom label named "Special addresses".
          example: yourLabelStringHere
          type: string
      required:
      - address
      - createdTimestamp
      - label
      type: object
    GenerateDepositAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
            createdTimestamp: 1624028267
            label: yourLabelStringHere
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GenerateDepositAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GenerateDepositAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GenerateDepositAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GenerateDepositAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceDepositAddressesLimitReached'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    WalletAsAServiceDepositAddressesLimitReached:
      description: wallet_as_a_service_deposit_addresses_limit_reached
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: wallet_as_a_service_deposit_addresses_limit_reached
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "You have reached the maximum Deposit Addresses count which is\
            \ currently {depositAddressesCount}. Please, upgrade your plan in order\
            \ to have a higher Deposit Address count."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType:
      description: wallet_as_a_service_provided_network_is_not_suitable_for_this_wallet_type
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: wallet_as_a_service_provided_network_is_not_suitable_for_this_wallet_type
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: This wallet is not for the provided network.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    GetZilliqaTransactionDetailsByTransactionIDRI:
      example:
        gasLimit: 552020
        gasUsed: 24673
        transactionStatus: "0"
        recipients:
        - amount: "0"
          address: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
        - amount: "0"
          address: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
        fee:
          amount: "0.000235"
          unit: ZIL
        minedInBlockHeight: 1250207
        minedInBlockHash: 0x5ba627aed1ff0f5480694e994ee03a6ec7b5a6fa96be899c84d52725f9830891
        transactionIndex: 0
        nonce: 13
        senders:
        - amount: "0"
          address: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
        - amount: "0"
          address: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
        gasPrice: 2994782927
        timestamp: 1582202940
      properties:
        fee:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDRI_fee'
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 552020
          type: integer
        gasPrice:
          description: Defines the price of the gas.
          example: 2994782927
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 24673
          type: integer
        minedInBlockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0x5ba627aed1ff0f5480694e994ee03a6ec7b5a6fa96be899c84d52725f9830891
          type: string
        minedInBlockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1250207
          type: integer
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 13
          type: integer
        recipients:
          description: Represents an object of addresses that receive the transactions.
          items:
            $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDRI_recipients_inner'
          type: array
        senders:
          description: Represents an object of addresses that provide the funds.
          items:
            $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDRI_senders_inner'
          type: array
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1582202940
          type: integer
        transactionIndex:
          description: Defines the numeric representation of the transaction index.
          example: 0
          type: integer
        transactionStatus:
          description: "Defines the status of the transaction, whether it is e.g.\
            \ pending or complete."
          example: "0"
          type: string
      required:
      - fee
      - gasLimit
      - gasPrice
      - gasUsed
      - minedInBlockHash
      - minedInBlockHeight
      - nonce
      - recipients
      - senders
      - timestamp
      - transactionIndex
      - transactionStatus
      type: object
    GetZilliqaTransactionDetailsByTransactionIDR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            gasLimit: 552020
            gasUsed: 24673
            transactionStatus: "0"
            recipients:
            - amount: "0"
              address: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
            - amount: "0"
              address: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
            fee:
              amount: "0.000235"
              unit: ZIL
            minedInBlockHeight: 1250207
            minedInBlockHash: 0x5ba627aed1ff0f5480694e994ee03a6ec7b5a6fa96be899c84d52725f9830891
            transactionIndex: 0
            nonce: 13
            senders:
            - amount: "0"
              address: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
            - amount: "0"
              address: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
            gasPrice: 2994782927
            timestamp: 1582202940
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetZilliqaTransactionDetailsByTransactionIDE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetZilliqaTransactionDetailsByTransactionIDE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetZilliqaTransactionDetailsByTransactionIDE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListConfirmedTransactionsByAddressRIBSB:
      description: Bitcoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 125
          type: integer
        vSize:
          description: Defines the transaction's virtual size.
          example: 166
          type: integer
        version:
          description: Defines the version of the transaction.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSB_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressRIBSBC:
      description: Bitcoin Cash
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSBC_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBC_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      type: object
    ListConfirmedTransactionsByAddressRIBSL:
      description: Litecoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 2
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSL_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressRIBSD:
      description: Dogecoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 266
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 3
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressRIBSD2:
      description: Dash
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 196
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 3
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressRIBSEC:
      description: Ethereum Classic
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSEC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0xa9059cbb000000000000000000000000acc59ec2f7119dc7a9e69dcd124cff75caae05bf0000000000000000000000000000000000000000000000000000000000989680
          type: string
        internalTransactionsCount:
          description: Represents the total internal transactions count.
          example: 2
          type: integer
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        tokenTransfersCount:
          description: Represents the total token transfers count.
          example: 2
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - internalTransactionsCount
      - nonce
      - tokenTransfersCount
      - transactionStatus
      type: object
    ListConfirmedTransactionsByAddressRIBSE:
      description: Ethereum
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSE_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        internalTransactionsCount:
          description: Represents the total internal transactions count.
          example: 2
          type: integer
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 13
          type: integer
        tokenTransfersCount:
          description: Represents the total token transfers count.
          example: 2
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - internalTransactionsCount
      - nonce
      - tokenTransfersCount
      - transactionStatus
      type: object
    ListConfirmedTransactionsByAddressRIBSBSC:
      description: Binance Smart Chain
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x0000000000000000000000000000000000001000
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSBSC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x
          type: string
        internalTransactionsCount:
          description: Represents the total internal transactions count.
          example: 2
          type: integer
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 25341
          type: integer
        tokenTransfersCount:
          description: Represents the total token transfers count.
          example: 2
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - internalTransactionsCount
      - nonce
      - tokenTransfersCount
      - transactionStatus
      type: object
    ListConfirmedTransactionsByAddressRIBSZ:
      description: Zcash
      properties:
        bindingSig:
          description: "It is used to enforce balance of Spend and Output transfers,\
            \ in order to prevent their replay across transactions."
          example: 603624b3e78e0de0415dea320797a107076a9f7aabd39f44bc4957803330e9891cb33744ac2ec749c2d2d341f29467c49c0ae35bf34765e2fb7c4cda68584804
          type: string
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        joinSplitPubKey:
          description: Represents an encoding of a JoinSplitSig public validating
            key.
          example: 5d2673b4c727241410e42f214a39218e4f13354d77db8ec31243a7be7ed8e2b7
          type: string
        joinSplitSig:
          description: Is used to sign transactions that contain at least one JoinSplit
            description.
          example: 8b06b926d619ead780b0769e5997ded93f9851fd0efd4b667afc5bcc2792b26cd4a565b4efa7733535fdc09fa566ca59042785d7fd8043d37fdf9e144465080a
          type: string
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 234
          type: integer
        vJoinSplit:
          description: Represents a sequence of JoinSplit descriptions using BCTV14
            proofs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSZ_vJoinSplit_inner'
          type: array
        vShieldedOutput:
          description: Object Array representation of transaction output descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedOutput_inner'
          type: array
        vShieldedSpend:
          description: Object Array representation of transaction spend descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner'
          type: array
        valueBalance:
          description: Defines the transaction value balance.
          example: "0"
          type: string
        version:
          description: Defines the version of the transaction.
          example: 1
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID.
          example: 0x892f2085
          type: string
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSZ_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vout_inner'
          type: array
      required:
      - bindingSig
      - expiryHeight
      - joinSplitPubKey
      - joinSplitSig
      - locktime
      - overwintered
      - size
      - vJoinSplit
      - vShieldedOutput
      - vShieldedSpend
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressRI:
      properties:
        index:
          description: Represents the index position of the transaction in the block.
          example: 1
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 00000000407f119ecb74b44229228910400aaeb9f4e3b9869955b85a53e9b7db
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 1903849
          type: integer
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_senders_inner'
          type: array
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        fee:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRI_fee'
        blockchainSpecific:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBS'
      required:
      - blockchainSpecific
      - fee
      - index
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionId
      type: object
    ListConfirmedTransactionsByAddressRIBS:
      oneOf:
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSB'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSBC'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSL'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSEC'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSE'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSBSC'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSZ'
      type: object
    ListConfirmedTransactionsByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListConfirmedTransactionsByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListConfirmedTransactionsByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListConfirmedTransactionsByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListXRPRippleTransactionsByAddressRI:
      properties:
        destinationTag:
          example: 3999472835
          format: int64
          type: integer
        index:
          description: Represents the index position of the transaction in the block.
          example: 3
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 3dff3ab3697a0a3116062a92a499dc7b5c9c777b2035f79bb906894972d4573d
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 15949067
          type: integer
        recipients:
          description: Represents an object of addresses that receive the transactions.
          items:
            $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_recipients_inner'
          type: array
        senders:
          description: Represents an object of addresses that provide the funds.
          items:
            $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_senders_inner'
          type: array
        sequence:
          description: "Defines the transaction input's sequence as an integer, which\
            \ is is used when transactions are replaced with newer versions before\
            \ LockTime."
          example: 39673
          format: int64
          type: integer
        status:
          description: Defines the status of the transaction.
          example: tesSUCCESS
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 4256894
          type: integer
        transactionHash:
          description: Represents the hash of the XRP transaction.
          example: 33684d38ccf56f5b10a25e60b11b251abe6288f41aadd03c7596dced895b282a
          type: string
        type:
          description: Specifies the type of the transaction.
          example: OfferCreate
          type: string
        fee:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI_fee'
        offer:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI_offer'
        receive:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI_receive'
        value:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI_value'
      required:
      - fee
      - index
      - minedInBlockHash
      - minedInBlockHeight
      - offer
      - receive
      - recipients
      - senders
      - sequence
      - status
      - timestamp
      - transactionHash
      - type
      - value
      type: object
    ListXRPRippleTransactionsByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListXRPRippleTransactionsByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListXRPRippleTransactionsByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListXRPRippleTransactionsByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    CreateCoinsTransactionRequestFromWalletRI:
      example:
        feePriority: standard
        note: yourAdditionalInformationhere
        totalTransactionAmount: "0.001"
        transactionRequestStatus: created
        recipients:
        - amount: "0.00123"
          address: mmd963W1fECjLyaDCHcioSCZYHkRwjkhtr
        - amount: "0.00123"
          address: mmd963W1fECjLyaDCHcioSCZYHkRwjkhtr
        transactionRequestId: 6017dd02a309213863be9e55
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs.  For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipients:
          description: "Defines the destination of the transaction, whether it is\
            \ incoming or outgoing."
          items:
            $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletRI_recipients_inner'
          type: array
        totalTransactionAmount:
          description: Represents the specific amount of the transaction.
          example: "0.001"
          type: string
        transactionRequestId:
          description: "Represents a unique identifier of the transaction request\
            \ (the request sent to make a transaction), which helps in identifying\
            \ which callback and which `referenceId` concern that specific transaction\
            \ request."
          example: 6017dd02a309213863be9e55
          type: string
        transactionRequestStatus:
          description: "Defines the status of the transaction, e.g. \"created, \"\
            await_approval\", \"pending\", \"prepared\", \"signed\", \"broadcasted\"\
            , \"success\", \"failed\", \"rejected\", mined\"."
          enum:
          - created
          - await-approval
          - pending
          - prepared
          - signed
          - broadcasted
          - success
          - failed
          - rejected
          - mined
          example: created
          type: string
      required:
      - feePriority
      - recipients
      - totalTransactionAmount
      - transactionRequestId
      - transactionRequestStatus
      type: object
    CreateCoinsTransactionRequestFromWalletR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            feePriority: standard
            note: yourAdditionalInformationhere
            totalTransactionAmount: "0.001"
            transactionRequestStatus: created
            recipients:
            - amount: "0.00123"
              address: mmd963W1fECjLyaDCHcioSCZYHkRwjkhtr
            - amount: "0.00123"
              address: mmd963W1fECjLyaDCHcioSCZYHkRwjkhtr
            transactionRequestId: 6017dd02a309213863be9e55
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    CreateCoinsTransactionRequestFromWalletE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    CreateCoinsTransactionRequestFromWalletE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    CreateCoinsTransactionRequestFromWalletE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    WalletAsAServiceWalletBalanceNotEnough:
      description: wallet_as_a_service_wallet_balance_not_enough
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: wallet_as_a_service_wallet_balance_not_enough
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: Your wallet balance is insufficient to complete this action. Please
            check for any pending transaction requests or add more funds.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    CreateCoinsTransactionRequestFromWalletE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/WalletAsAServiceWalletBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceAddressBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceNoDepositAddressesFound'
      type: object
    WalletAsAServiceAddressBalanceNotEnough:
      description: wallet_as_a_service_address_balance_not_enough
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: wallet_as_a_service_address_balance_not_enough
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: Your address balance is insufficient to complete this action. Please
            check for any pending transaction requests or add more funds.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    WalletAsAServiceNoDepositAddressesFound:
      description: wallet_as_a_service_no_deposit_addresses_found
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: wallet_as_a_service_no_deposit_addresses_found
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "Please first create a deposit address for the specific blockchain\
            \ and network, in order to be able to make transactions."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    ListZilliqaTransactionsByAddressRI:
      properties:
        fee:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDRI_fee'
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasPrice:
          description: Defines the price of the gas.
          example: 2994782927
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 24673
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 0x7c18901ff8d5af3cebde1c9128c9b20cb046d73fba23d45951f5619b61679c9b
          type: string
        minedInBlockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1250283
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: 13
          type: integer
        recipients:
          description: Defines an object array of the transaction recipients.
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByAddressRI_recipients_inner'
          type: array
        senders:
          description: Represents an object of addresses that provide the funds.
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByAddressRI_senders_inner'
          type: array
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the hash of the transaction, which is its unique\
            \ identifier."
          example: 0xf4a847a1489a043ee509d5d7df48f2bf7ba1b15354ed14600b035ff2f7670203
          type: string
        transactionIndex:
          description: Defines the numeric representation of the transaction index.
          example: 0
          type: integer
        transactionStatus:
          description: "Defines the status of the transaction, whether it is e.g.\
            \ pending or complete."
          example: "2"
          type: string
      required:
      - fee
      - gasLimit
      - gasPrice
      - gasUsed
      - minedInBlockHash
      - minedInBlockHeight
      - nonce
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionIndex
      - transactionStatus
      type: object
    ListZilliqaTransactionsByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListZilliqaTransactionsByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListZilliqaTransactionsByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListZilliqaTransactionsByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListZilliqaTransactionsByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListUnconfirmedTransactionsByAddressRIBSB:
      description: Bitcoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 222
          type: integer
        vSize:
          description: Defines the transaction's virtual size.
          example: 222
          type: integer
        version:
          description: Defines the version of the transaction.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSB_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListUnconfirmedTransactionsByAddressRIBSBC:
      description: Bitcoin Cash
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 123
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSBC_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSBC_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListUnconfirmedTransactionsByAddressRIBSL:
      description: Litecoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 2
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSL_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSL_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListUnconfirmedTransactionsByAddressRIBSD:
      description: Dogecoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 233
          type: integer
        version:
          description: Numeric representation of the transaction version
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSD_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListUnconfirmedTransactionsByAddressRIBSD2:
      description: Dash
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 196
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 3
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSD2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSD2_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListUnconfirmedTransactionsByAddressRIBSE:
      description: Ethereum
      properties:
        fee:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSE_fee'
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSE_gasPrice'
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 12
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - fee
      - gasLimit
      - gasPrice
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListUnconfirmedTransactionsByAddressRIBSEC:
      description: Ethereum Classic
      properties:
        fee:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSEC_fee'
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSEC_gasPrice'
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - fee
      - gasLimit
      - gasPrice
      - nonce
      - transactionStatus
      type: object
    ListUnconfirmedTransactionsByAddressRIBSZ:
      description: Zcash
      properties:
        bindingSig:
          description: "It is used to enforce balance of Spend and Output transfers,\
            \ in order to prevent their replay across transactions."
          example: 603624b3e78e0de0415dea320797a107076a9f7aabd39f44bc4957803330e9891cb33744ac2ec749c2d2d341f29467c49c0ae35bf34765e2fb7c4cda68584804
          type: string
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        joinSplitPubKey:
          description: Represents an encoding of a JoinSplitSig public validating
            key.
          example: 5d2673b4c727241410e42f214a39218e4f13354d77db8ec31243a7be7ed8e2b7
          type: string
        joinSplitSig:
          description: Is used to sign transactions that contain at least one JoinSplit
            description.
          example: 8b06b926d619ead780b0769e5997ded93f9851fd0efd4b667afc5bcc2792b26cd4a565b4efa7733535fdc09fa566ca59042785d7fd8043d37fdf9e144465080a
          type: string
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 234
          type: integer
        vJoinSplit:
          description: Represents a sequence of JoinSplit descriptions using BCTV14
            proofs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSZ_vJoinSplit_inner'
          type: array
        vShieldedOutput:
          description: Object Array representation of transaction output descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedOutput_inner'
          type: array
        vShieldedSpend:
          description: Object Array representation of transaction spend descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner'
          type: array
        valueBalance:
          description: Defines the transaction value balance.
          example: "0"
          type: string
        version:
          description: Defines the version of the transaction.
          example: 1
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID.
          example: 0x892f2085
          type: string
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vout_inner'
          type: array
      required:
      - bindingSig
      - expiryHeight
      - joinSplitPubKey
      - joinSplitSig
      - locktime
      - overwintered
      - size
      - vJoinSplit
      - vShieldedOutput
      - vShieldedSpend
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    ListUnconfirmedTransactionsByAddressRIBSBSC:
      description: Binance Smart Chain
      properties:
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSBSC_gasPrice'
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 25341
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - gasLimit
      - gasPrice
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListUnconfirmedTransactionsByAddressRI:
      properties:
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRI_senders_inner'
          type: array
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1633518942013
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 3d74a44fe666308242b2c9dd0197a601779d17ba9fe8f7a23612c53a910bc98d
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 3d74a44fe666308242b2c9dd0197a601779d17ba9fe8f7a23612c53a910bc98d
          type: string
        blockchainSpecific:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBS'
      required:
      - blockchainSpecific
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionId
      type: object
    ListUnconfirmedTransactionsByAddressRIBS:
      oneOf:
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSB'
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSBC'
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSL'
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSD'
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSD2'
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSE'
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSEC'
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSZ'
      - $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSBSC'
      type: object
    ListUnconfirmedTransactionsByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListUnconfirmedTransactionsByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListUnconfirmedTransactionsByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListUnconfirmedTransactionsByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListXRPRippleTransactionsByAddressAndTimeRangeRI:
      properties:
        destinationTag:
          description: A destination tag is a value used to discern the holder of
            the Ripple (XRP) being deposited or withdrawn.
          example: 3999472835
          format: int64
          type: integer
        index:
          description: Represents the index position of the transaction in the block.
          example: 3
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 3dff3ab3697a0a3116062a92a499dc7b5c9c777b2035f79bb906894972d4573d
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 15949067
          type: integer
        recipients:
          description: Represents an object of addresses that receive the transactions.
          items:
            $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_recipients_inner'
          type: array
        senders:
          description: Represents an object of addresses that provide the funds.
          items:
            $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_senders_inner'
          type: array
        sequence:
          description: "Defines the transaction input's sequence as an integer, which\
            \ is is used when transactions are replaced with newer versions before\
            \ LockTime."
          example: 39673
          format: int64
          type: integer
        status:
          description: Defines the status of the transaction.
          example: tesSUCCESS
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1644417868
          type: integer
        transactionHash:
          description: Represents the hash of the XRP transaction.
          example: 33684d38ccf56f5b10a25e60b11b251abe6288f41aadd03c7596dced895b282a
          type: string
        type:
          description: Specifies the type of the transaction.
          example: OfferCreate
          type: string
        fee:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI_fee'
        offer:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI_offer'
        receive:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI_receive'
        value:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI_value'
      required:
      - fee
      - index
      - minedInBlockHash
      - minedInBlockHeight
      - offer
      - receive
      - recipients
      - senders
      - sequence
      - status
      - timestamp
      - transactionHash
      - type
      - value
      type: object
    ListXRPRippleTransactionsByAddressAndTimeRangeR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressAndTimeRangeR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListXRPRippleTransactionsByAddressAndTimeRangeE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListXRPRippleTransactionsByAddressAndTimeRangeE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListXRPRippleTransactionsByAddressAndTimeRangeE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListTransactionsByBlockHashRIBSB:
      description: Bitcoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 373
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 208
          type: integer
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSB_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHashRIBSBC:
      description: Bitcoin Cash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSBC_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSBC_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHashRIBSL:
      description: Litecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 2
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents transaction version number.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSL_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSL_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHashRIBSD:
      description: Dogecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 266
          type: integer
        version:
          description: Represents transaction version number.
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHashRIBSD2:
      description: Dash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 125
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD2_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHashRIBSE:
      description: Ethereum
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: String representation of the transaction Represents the amount
            of gas used by this specific transaction alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSE_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0xa9059cbb000000000000000000000000acc59ec2f7119dc7a9e69dcd124cff75caae05bf0000000000000000000000000000000000000000000000000000000000989680
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        transactionStatus:
          description: Represents the status of this transaction.
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListTransactionsByBlockHashRIBSEC:
      description: Ethereum Classic
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSE_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0xa9059cbb000000000000000000000000acc59ec2f7119dc7a9e69dcd124cff75caae05bf0000000000000000000000000000000000000000000000000000000000989680
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: "16"
          type: string
        transactionStatus:
          description: String representation of the transaction status
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListTransactionsByBlockHashRIBSBSC:
      description: Binance Smart Chain
      properties:
        contract:
          description: Represents the specific transaction contract.
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSBSC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 25341
          type: integer
        transactionStatus:
          description: Represents the status of this transaction
          example: 0x1
          type: string
      required:
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListTransactionsByBlockHashRIBSZ:
      description: Zcash
      properties:
        bindingSig:
          description: "It is used to enforce balance of Spend and Output transfers,\
            \ in order to prevent their replay across transactions."
          example: 603624b3e78e0de0415dea320797a107076a9f7aabd39f44bc4957803330e9891cb33744ac2ec749c2d2d341f29467c49c0ae35bf34765e2fb7c4cda68584804
          type: string
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        joinSplitPubKey:
          description: Represents an encoding of a JoinSplitSig public validating
            key.
          example: 5d2673b4c727241410e42f214a39218e4f13354d77db8ec31243a7be7ed8e2b7
          type: string
        joinSplitSig:
          description: Is used to sign transactions that contain at least one JoinSplit
            description.
          example: 8b06b926d619ead780b0769e5997ded93f9851fd0efd4b667afc5bcc2792b26cd4a565b4efa7733535fdc09fa566ca59042785d7fd8043d37fdf9e144465080a
          type: string
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 234
          type: integer
        vJoinSplit:
          description: Represents a sequence of JoinSplit descriptions using BCTV14
            proofs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSZ_vJoinSplit_inner'
          type: array
        vShieldedOutput:
          description: Object Array representation of transaction output descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedOutput_inner'
          type: array
        vShieldedSpend:
          description: Object Array representation of transaction spend descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner'
          type: array
        valueBalance:
          description: Defines the transaction value balance.
          example: "0"
          type: string
        version:
          description: Numeric representation of the transaction Represents the transaction
            version number.
          example: 1
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID.
          example: 0x892f2085
          type: string
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSZ_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vout_inner'
          type: array
      required:
      - bindingSig
      - expiryHeight
      - joinSplitPubKey
      - joinSplitSig
      - locktime
      - overwintered
      - size
      - vJoinSplit
      - vShieldedOutput
      - vShieldedSpend
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    ListTransactionsByBlockHashRI:
      properties:
        index:
          description: Represents the index position of the transaction in the specific
            block.
          example: 1
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 00000000000000127080d8bcf84f4ad830a71ea0aadce3632579b6b2f26cd94b
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 1971147
          type: integer
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRI_senders_inner'
          type: array
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1618208236
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 273eac351a2b76bb98196f3b310eabc787758cf157e8abe726250447185956ed
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 4340d9463f0a5e3b3bc5844c17af78e20fa141f976f20732de630b0e6e4cd571
          type: string
        fee:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRI_fee'
        blockchainSpecific:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBS'
      required:
      - blockchainSpecific
      - fee
      - index
      - minedInBlockHash
      - minedInBlockHeight
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionId
      type: object
    ListTransactionsByBlockHashRIBS:
      oneOf:
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSB'
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSBC'
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSL'
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD'
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD2'
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSE'
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSEC'
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSBSC'
      - $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSZ'
      type: object
    ListTransactionsByBlockHashR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListTransactionsByBlockHashR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListTransactionsByBlockHashE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListTransactionsByBlockHashE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListTransactionsByBlockHashE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListXRPRippleTransactionsByBlockHashRI:
      properties:
        additionalData:
          description: Represents any additional data that may be needed.
          example: r4CmvbkDWGt9AZmkfuubmiSdsxGZFxAKBY
          type: string
        destinationTag:
          example: 3999472835
          format: int64
          type: integer
        index:
          description: Represents the index position of the transaction in the specific
            block.
          example: 3
          type: integer
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 15971358
          type: integer
        recipients:
          description: Represents an object of addresses that receive the transactions.
          items:
            $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashRI_recipients_inner'
          type: array
        senders:
          description: Represents an object of addresses that provide the funds.
          items:
            $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashRI_senders_inner'
          type: array
        sequence:
          description: "Defines the transaction input's sequence as an integer, which\
            \ is is used when transactions are replaced with newer versions before\
            \ LockTime."
          example: 32568
          format: int64
          type: integer
        status:
          description: Defines the status of the transaction.
          example: tesSUCCESS
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 236589
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: ba3bc1337071c8e73b441fe12a1911f4365d7ea82cace7c8ecba3ee9f364978b
          type: string
        type:
          description: Defines the type of the transaction.
          example: Payment
          type: string
        fee:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashRI_fee'
        offer:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashRI_offer'
        receive:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashRI_receive'
        value:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashRI_value'
      required:
      - fee
      - index
      - minedInBlockHeight
      - offer
      - receive
      - recipients
      - senders
      - sequence
      - status
      - timestamp
      - transactionHash
      - type
      - value
      type: object
    ListXRPRippleTransactionsByBlockHashR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListXRPRippleTransactionsByBlockHashE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListXRPRippleTransactionsByBlockHashE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListXRPRippleTransactionsByBlockHashE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    CreateCoinsTransactionRequestFromAddressRI:
      example:
        feePriority: standard
        note: yourAdditionalInformationhere
        transactionRequestStatus: created
        recipients:
        - amount: "0.0023"
          address: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
          addressTag: 3999472835
          classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        - amount: "0.0023"
          address: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
          addressTag: 3999472835
          classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        transactionRequestId: 6017dd02a309213863be9e55
        addressTag: 3999472835
        classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        senders:
          address: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        addressTag:
          description: Defines a specific Tag that is an additional XRP address feature.
            It helps identify a transaction recipient beyond a wallet address. The
            tag that was encoded into the x-Address along with the Source Classic
            Address.
          example: 3999472835
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        classicAddress:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key. The classic address is shown when the source address\
            \ is an x-Address."
          example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipients:
          description: "Defines the destination for the transaction, i.e. the recipient(s)."
          items:
            $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressRI_recipients_inner'
          type: array
        senders:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressRI_senders'
        transactionRequestId:
          description: "Represents a unique identifier of the transaction request\
            \ (the request sent to make a transaction), which helps in identifying\
            \ which callback and which `referenceId` concern that specific transaction\
            \ request."
          example: 6017dd02a309213863be9e55
          type: string
        transactionRequestStatus:
          description: "Defines the status of the transaction request, e.g. \"created,\
            \ \"await_approval\", \"pending\", \"prepared\", \"signed\", \"broadcasted\"\
            , \"success\", \"failed\", \"rejected\", mined\"."
          enum:
          - created
          - await-approval
          - pending
          - prepared
          - signed
          - broadcasted
          - success
          - failed
          - rejected
          - mined
          example: created
          type: string
      required:
      - feePriority
      - recipients
      - senders
      - transactionRequestId
      - transactionRequestStatus
      type: object
    CreateCoinsTransactionRequestFromAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            feePriority: standard
            note: yourAdditionalInformationhere
            transactionRequestStatus: created
            recipients:
            - amount: "0.0023"
              address: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
              addressTag: 3999472835
              classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
            - amount: "0.0023"
              address: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
              addressTag: 3999472835
              classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
            transactionRequestId: 6017dd02a309213863be9e55
            addressTag: 3999472835
            classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            senders:
              address: 0x8798d11a96a2822ae60275f3a0798a2542912a10
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    CreateCoinsTransactionRequestFromAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    CreateCoinsTransactionRequestFromAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    CreateCoinsTransactionRequestFromAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    CreateCoinsTransactionRequestFromAddressE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/WalletAsAServiceWalletBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceAddressBalanceNotEnough'
      type: object
    ListZilliqaTransactionsByBlockHashRI:
      properties:
        fee:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDRI_fee'
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasPrice:
          description: Defines the price of the gas.
          example: 2994782927
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 24673
          type: integer
        minedInBlockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1250392
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: 13
          type: integer
        recipients:
          description: Defines an object array of the transaction recipients.
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByAddressRI_recipients_inner'
          type: array
        senders:
          description: Represents an object of addresses that provide the funds.
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByAddressRI_senders_inner'
          type: array
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the hash of the transaction, which is its unique\
            \ identifier."
          example: 0xf4a847a1489a043ee509d5d7df48f2bf7ba1b15354ed14600b035ff2f7670203
          type: string
        transactionIndex:
          description: Defines the numeric representation of the transaction index.
          example: 0
          type: integer
        transactionStatus:
          description: "Defines the status of the transaction, whether it is e.g.\
            \ pending or complete."
          example: "0"
          type: string
      required:
      - fee
      - gasLimit
      - gasPrice
      - gasUsed
      - minedInBlockHeight
      - nonce
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionIndex
      - transactionStatus
      type: object
    ListZilliqaTransactionsByBlockHashR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHashR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListZilliqaTransactionsByBlockHashE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListZilliqaTransactionsByBlockHashE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListZilliqaTransactionsByBlockHashE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListZilliqaTransactionsByBlockHeightRI:
      properties:
        fee:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDRI_fee'
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasPrice:
          description: Defines the price of the gas.
          example: 2994782927
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 958
          type: integer
        minedInBlockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0x3160ca05ac12f60023de6b6987596eccbf084629f1a92b59534c5c021bf27041
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: 13
          type: integer
        recipients:
          description: Defines an object array of the transaction recipients.
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByAddressRI_recipients_inner'
          type: array
        senders:
          description: Represents an object of addresses that provide the funds.
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByAddressRI_senders_inner'
          type: array
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the hash of the transaction, which is its unique\
            \ identifier."
          example: 0xf4a847a1489a043ee509d5d7df48f2bf7ba1b15354ed14600b035ff2f7670203
          type: string
        transactionIndex:
          description: Defines the numeric representation of the transaction index.
          example: 0
          type: integer
        transactionStatus:
          description: "Defines the status of the transaction, whether it is e.g.\
            \ pending or complete."
          example: "0"
          type: string
      required:
      - fee
      - gasLimit
      - gasPrice
      - gasUsed
      - minedInBlockHash
      - nonce
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionIndex
      - transactionStatus
      type: object
    ListZilliqaTransactionsByBlockHeightR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHeightR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListZilliqaTransactionsByBlockHeightE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListZilliqaTransactionsByBlockHeightE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListZilliqaTransactionsByBlockHeightE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListXRPRippleTransactionsByBlockHeightRI:
      properties:
        additionalData:
          example: r4CmvbkDWGt9AZmkfuubmiSdsxGZFxAKBY
          type: string
        destinationTag:
          example: 3999472835
          format: int64
          type: integer
        index:
          example: 3
          type: integer
        minedInBlockHash:
          example: 14754656235f865a74eba27791fd41a47bdfe07fe811ff6d78f53db32e129e39
          type: string
        recipients:
          description: Object Array representation of transaction receivers
          items:
            $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightRI_recipients_inner'
          type: array
        senders:
          description: Object Array representation of transaction senders
          items:
            $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightRI_senders_inner'
          type: array
        sequence:
          example: 32568
          format: int64
          type: integer
        status:
          example: tesSUCCESS
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 236589
          type: integer
        transactionHash:
          example: ba3bc1337071c8e73b441fe12a1911f4365d7ea82cace7c8ecba3ee9f364978b
          type: string
        type:
          example: Payment
          type: string
        fee:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightRI_fee'
        offer:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightRI_offer'
        receive:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightRI_receive'
        value:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightRI_value'
      required:
      - fee
      - index
      - minedInBlockHash
      - offer
      - receive
      - recipients
      - senders
      - sequence
      - status
      - timestamp
      - transactionHash
      - type
      - value
      type: object
    ListXRPRippleTransactionsByBlockHeightR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListXRPRippleTransactionsByBlockHeightE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListXRPRippleTransactionsByBlockHeightE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListXRPRippleTransactionsByBlockHeightE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListTransactionsByBlockHeightRIBSB:
      description: Bitcoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 166
          type: integer
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSB_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSE:
      description: Ethereum
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x67a5cd06000000000000000000000000516de3a7a567d81737e3a46ec4ff9cfd1fcb0136
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSE_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        transactionStatus:
          description: Represents the status of this transaction.
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListTransactionsByBlockHeightRIBSD:
      description: Dash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 125
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSD_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSD2:
      description: Dogecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 266
          type: integer
        version:
          description: Represents transaction version number.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSD2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSL:
      description: Litecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 2
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents transaction version number.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSL_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSL_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSBC:
      description: Bitcoin Cash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        version:
          description: Represents the total size of this transaction.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSBC_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSBC_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSEC:
      description: Ethereum Classic
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSEC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: "15"
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      type: object
    ListTransactionsByBlockHeightRIBSBSC:
      description: Binance Smart Chain
      properties:
        contract:
          description: Represents the specific transaction contract.
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSBSC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0xe656e7110000000000000000000000000000000000000000000000000000000000000001
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 15
          type: integer
        transactionStatus:
          description: Represents the status of this transaction
          example: 0x1
          type: string
      required:
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListTransactionsByBlockHeightRIBSZ:
      description: Zcash
      properties:
        bindingSig:
          description: "It is used to enforce balance of Spend and Output transfers,\
            \ in order to prevent their replay across transactions."
          example: 603624b3e78e0de0415dea320797a107076a9f7aabd39f44bc4957803330e9891cb33744ac2ec749c2d2d341f29467c49c0ae35bf34765e2fb7c4cda68584804
          type: string
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        joinSplitPubKey:
          description: Represents an encoding of a JoinSplitSig public validating
            key.
          example: 5d2673b4c727241410e42f214a39218e4f13354d77db8ec31243a7be7ed8e2b7
          type: string
        joinSplitSig:
          description: Is used to sign transactions that contain at least one JoinSplit
            description.
          example: 8b06b926d619ead780b0769e5997ded93f9851fd0efd4b667afc5bcc2792b26cd4a565b4efa7733535fdc09fa566ca59042785d7fd8043d37fdf9e144465080a
          type: string
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 234
          type: integer
        vJoinSplit:
          description: Represents a sequence of JoinSplit descriptions using BCTV14
            proofs.
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSZ_vJoinSplit_inner'
          type: array
        vShieldedOutput:
          description: Object Array representation of transaction output descriptions
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSZ_vShieldedOutput_inner'
          type: array
        vShieldedSpend:
          description: Object Array representation of transaction spend descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner'
          type: array
        valueBalance:
          description: Defines the transaction value balance.
          example: "0"
          type: string
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID.
          example: 0x892f2085
          type: string
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSZ_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSZ_vout_inner'
          type: array
      required:
      - bindingSig
      - expiryHeight
      - joinSplitPubKey
      - joinSplitSig
      - locktime
      - overwintered
      - size
      - vJoinSplit
      - vShieldedOutput
      - vShieldedSpend
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    ListTransactionsByBlockHeightRI:
      properties:
        index:
          description: Represents the index position of the transaction in the specific
            block.
          example: 2
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 00000000407f119ecb74b44229228910400aaeb9f4e3b9869955b85a53e9b7db
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 1939750
          type: integer
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_senders_inner'
          type: array
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        fee:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRI_fee'
        blockchainSpecific:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBS'
      required:
      - blockchainSpecific
      - fee
      - index
      - minedInBlockHash
      - minedInBlockHeight
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionId
      type: object
    ListTransactionsByBlockHeightRIBS:
      oneOf:
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSB'
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSE'
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSD'
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSD2'
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSL'
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSBC'
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSEC'
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSBSC'
      - $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSZ'
      type: object
    ListTransactionsByBlockHeightR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListTransactionsByBlockHeightE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListTransactionsByBlockHeightE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListTransactionsByBlockHeightE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    BlockchainDataBlockNotFound:
      description: blockchain_data_block_not_found
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: blockchain_data_block_not_found
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The specified block has not been found on the specific blockchain.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountRI:
      example:
        feePriority: standard
        note: yourExampleStringHere
        transactionRequestStatus: created
        recipients:
        - amount: "0.123"
          address: 0xc065b539490f81b6c297c37b1925c3be2f190732
        - amount: "0.123"
          address: 0xc065b539490f81b6c297c37b1925c3be2f190732
        transactionRequestId: 6017dd02a309213863be9e55
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        senders:
          address: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request.Optional Transaction\
            \ note with additional details"
          example: yourExampleStringHere
          type: string
        recipients:
          description: "Defines the destination for the transaction, i.e. the recipient(s)."
          items:
            $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountRI_recipients_inner'
          type: array
        senders:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountRI_senders'
        transactionRequestId:
          description: "Represents a unique identifier of the transaction request\
            \ (the request sent to make a transaction), which helps in identifying\
            \ which callback and which `referenceId` concern that specific transaction\
            \ request."
          example: 6017dd02a309213863be9e55
          type: string
        transactionRequestStatus:
          description: "Defines the status of the transaction, e.g. \"created, \"\
            await_approval\", \"pending\", \"prepared\", \"signed\", \"broadcasted\"\
            , \"success\", \"failed\", \"rejected\", mined\"."
          enum:
          - created
          - await-approval
          - pending
          - prepared
          - signed
          - broadcasted
          - success
          - failed
          - rejected
          - mined
          example: created
          type: string
      required:
      - feePriority
      - recipients
      - senders
      - transactionRequestId
      - transactionRequestStatus
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            feePriority: standard
            note: yourExampleStringHere
            transactionRequestStatus: created
            recipients:
            - amount: "0.123"
              address: 0xc065b539490f81b6c297c37b1925c3be2f190732
            - amount: "0.123"
              address: 0xc065b539490f81b6c297c37b1925c3be2f190732
            transactionRequestId: 6017dd02a309213863be9e55
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            senders:
              address: 0x8798d11a96a2822ae60275f3a0798a2542912a10
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/WalletAsAServiceWalletBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceAddressBalanceNotEnough'
      type: object
    GetBlockDetailsByBlockHeightRIBSB:
      description: Bitcoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: "A sub-unit of BTC equal to 0.000001 BTC, or 100 Satoshi, and\
            \ is the same as microbitcoin (μBTC). Bits have two-decimal precision."
          example: "420773839"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000003ddecb747af741625d6
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 7b52cc9ce137b92365eb4d0f8a708da9e3ba199aa422f96352a0c0c87221251b
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: 1535290446
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 2840
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 545259520
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 12412
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    GetBlockDetailsByBlockHeightRIBSE:
      description: Ethereum
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd983010203844765746887676f312e342e328777696e646f7773
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "3141592"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "21000"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 8
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "20104747399762079739558"
          type: string
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHeightRIBSEC:
      description: Ethereum Classic
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0x307834383639373636353666366532303530366636663663
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "3141592"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "21000"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 3
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "20104747399762079739558"
          type: string
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHeightRIBSBC:
      description: Bitcoin Cash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: "A sub-unit of BTC equal to 0.000001 BTC, or 100 Satoshi, and\
            \ is the same as microbitcoin (μBTC). Bits have two-decimal precision."
          example: 1917ffc5
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000047a031ea2dedc1db49eee2ca6d6ac39c9362f59b25899538d43c6c68bc7
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 263a9121b0e8aaf6a3df5f77f7658b358def7642ed8d674b97dc4e207b7f6937
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: 1535290446
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetBlockDetailsByBlockHeightRIBSL:
      description: Litecoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: Represents a specific sub-unit of Litecoin. Bits have two-decimal
            precision.
          example: 1917ffc5
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000047a031ea2dedc1db49eee2ca6d6ac39c9362f59b25899538d43c6c68bc7
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 0000047a031ea2dedc1db49eee2ca6d6ac39c9362f59b25899538d43c6c68bc7
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 930838
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 2238302
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    GetBlockDetailsByBlockHeightRIBSD:
      description: Dogecoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: Represents a specific sub-unit of Doge. Bits have two-decimal
            precision.
          example: 1917ffc5
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000047a031ea2dedc1db49eee2ca6d6ac39c9362f59b25899538d43c6c68bc7
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 0000047a031ea2dedc1db49eee2ca6d6ac39c9362f59b25899538d43c6c68bc7
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 930838
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limi
          example: 2238302
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - weight
      type: object
    GetBlockDetailsByBlockHeightRIBSD2:
      description: Dash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: "A sub-unit of BTC equal to 0.000001 BTC, or 100 Satoshi, and\
            \ is the same as microbitcoin (μBTC). Bits have two-decimal precision"
          example: 1917ffc5
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000016abcea319c908148ad0
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 0348f785f8779822c9f81d60684f320e9a230fbfe6241a0502edfe257feff3b6
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "30000000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetBlockDetailsByBlockHeightRIBSBSC:
      description: Binance Smart Chain
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd983010203844765746887676f312e342e328777696e646f7773
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "3141592"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "21000"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 5
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "20104747399762079739558"
          type: string
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHeightRIBSZ:
      description: Zcash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: Represents a specific sub-unit of Zcash. Bits have two-decimal
            precision
          example: "524517883"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000000000000262b072797
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 961113ae943a3abf76da307cf881c4c6b6c13efb27fb67f02c9cdb46029848e8
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        version:
          description: Represents the block version number.
          example: 4
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      type: object
    GetBlockDetailsByBlockHeightRIBSZ2:
      description: Zilliqa
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        dsBlock:
          description: Numeric representation of the ds block
          example: 18531
          type: integer
        dsDifficulty:
          description: Numeric representation of the ds difficulty
          example: "169"
          type: string
        dsLeader:
          description: String representation of the ds leader
          example: zil1wkcgpkyfvq90xkapnla58hk63dvauxjy2kwtlr
          type: string
        gasLimit:
          description: Numeric representation of the block gas_limit
          example: 550000
          type: integer
        gasUsed:
          description: Numeric representation of the block gas_limit
          example: 3660
          type: integer
        microBlocks:
          items:
            description: String array representation of the micro blocks
            example: fdb7c81eeeeeeed94db44786d55ebe65afff4945428891d185587ec1e431813f
            type: string
          type: array
      required:
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      type: object
    GetBlockDetailsByBlockHeightRI:
      example:
        previousBlockHash: 00000000b8c2337ed1221d1861105ad227dfff93b0a1798e78fb6edff58925f5
        nextBlockHash: 000000000000000e2f2e4fab8eaaa6bb39632a79a825d34169d451a86959fe04
        blockchainSpecific: null
        hash: 000000000000000cf507214c4f86a5048449230bc5c5dbbed59aa74421553f26
        transactionsCount: 12
        height: 1939743
        timestamp: 1615378134
      properties:
        hash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 000000000000000cf507214c4f86a5048449230bc5c5dbbed59aa74421553f26
          type: string
        height:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1939743
          type: integer
        nextBlockHash:
          description: Represents the hash of the next block. When this is the last
            block of the blockchain this value will be an empty string.
          example: 000000000000000e2f2e4fab8eaaa6bb39632a79a825d34169d451a86959fe04
          type: string
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 00000000b8c2337ed1221d1861105ad227dfff93b0a1798e78fb6edff58925f5
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
          example: 1615378134
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 12
          type: integer
        blockchainSpecific:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBS'
      required:
      - blockchainSpecific
      - hash
      - height
      - nextBlockHash
      - previousBlockHash
      - timestamp
      - transactionsCount
      type: object
    GetBlockDetailsByBlockHeightRIBS:
      oneOf:
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSB'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSE'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSEC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSBC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSL'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSD'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSD2'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSBSC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSZ'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRIBSZ2'
      type: object
    GetBlockDetailsByBlockHeightR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            previousBlockHash: 00000000b8c2337ed1221d1861105ad227dfff93b0a1798e78fb6edff58925f5
            nextBlockHash: 000000000000000e2f2e4fab8eaaa6bb39632a79a825d34169d451a86959fe04
            blockchainSpecific: null
            hash: 000000000000000cf507214c4f86a5048449230bc5c5dbbed59aa74421553f26
            transactionsCount: 12
            height: 1939743
            timestamp: 1615378134
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetBlockDetailsByBlockHeightE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetBlockDetailsByBlockHeightE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetBlockDetailsByBlockHeightE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetXRPRippleBlockDetailsByBlockHeightRI:
      example:
        blockHash: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
        totalFees:
          amount: "0.004487"
          unit: XRP
        previousBlockHash: dcf6ade36e1d5f30b3e52605692ff47123f290f4c8915cbf5a6b7c3541f2354e
        nextBlockHash: 738cf04b9e32826395a8445aa44ec6bbb83f2cc296d94201625f3a3d6ff85a5a
        blockHeight: 15886156
        totalCoins:
          amount: "22.0012"
          unit: Drops
        transactionsCount: 0
        timestamp: 1616069434
      properties:
        blockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
          type: string
        blockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 15886156
          type: integer
        nextBlockHash:
          description: Represents the hash of the next block. When this is the last
            block of the blockchain this value will be an empty string.
          example: 738cf04b9e32826395a8445aa44ec6bbb83f2cc296d94201625f3a3d6ff85a5a
          type: string
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: dcf6ade36e1d5f30b3e52605692ff47123f290f4c8915cbf5a6b7c3541f2354e
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1616069434
          type: integer
        totalCoins:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightRI_totalCoins'
        totalFees:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightRI_totalFees'
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 0
          type: integer
      required:
      - blockHash
      - blockHeight
      - nextBlockHash
      - previousBlockHash
      - timestamp
      - totalCoins
      - totalFees
      - transactionsCount
      type: object
    GetXRPRippleBlockDetailsByBlockHeightR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            blockHash: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
            totalFees:
              amount: "0.004487"
              unit: XRP
            previousBlockHash: dcf6ade36e1d5f30b3e52605692ff47123f290f4c8915cbf5a6b7c3541f2354e
            nextBlockHash: 738cf04b9e32826395a8445aa44ec6bbb83f2cc296d94201625f3a3d6ff85a5a
            blockHeight: 15886156
            totalCoins:
              amount: "22.0012"
              unit: Drops
            transactionsCount: 0
            timestamp: 1616069434
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetXRPRippleBlockDetailsByBlockHeightE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetXRPRippleBlockDetailsByBlockHeightE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetXRPRippleBlockDetailsByBlockHeightE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListDepositAddressesRI:
      properties:
        address:
          description: Specifies the specific address's unique string value.
          example: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
          type: string
        confirmedBalance:
          $ref: '#/components/schemas/ListDepositAddressesRI_confirmedBalance'
        createdTimestamp:
          description: Defines the specific UNIX time when the deposit address was
            created.
          example: 346658753
          type: integer
        fungibleTokens:
          description: Represents fungible tokens'es detailed information
          items:
            $ref: '#/components/schemas/ListDepositAddressesRI_fungibleTokens_inner'
          type: array
        index:
          description: Represents the index of the address in the wallet.
          example: "1"
          type: string
        label:
          description: Represents a custom tag that customers can set up for their
            Wallets and addresses. E.g. custom label named "Special addresses".
          example: yourStringHere
          type: string
        nonFungibleTokens:
          description: Represents non-fungible tokens'es detailed information.
          items:
            $ref: '#/components/schemas/ListDepositAddressesRI_nonFungibleTokens_inner'
          type: array
      required:
      - address
      - confirmedBalance
      - createdTimestamp
      - fungibleTokens
      - index
      - label
      - nonFungibleTokens
      type: object
    ListDepositAddressesR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListDepositAddressesR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListDepositAddressesE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListDepositAddressesE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListDepositAddressesE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    GetZilliqaBlockDetailsByBlockHeightRI:
      example:
        difficulty: "41.375"
        blockHash: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
          Block 1244297 Block 1244299
        gasLimit: 550000
        gasUsed: 0
        previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
          Block 1244296 Block 1244298
        nextBlockHash: 0x07939adbc3f5a6ba75968012acfe0fee9a351dca72c814e499fee554281b56b6
          Block 1244298 Block 1244300
        dsDifficulty: "48.625"
        dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
        transactionsCount: 1
        dsBlock: 12443
        microBlocks:
        - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119 [1]\
          \ 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
          \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
        - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119 [1]\
          \ 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
          \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
        timestamp: 1616069434
      properties:
        blockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
            Block 1244297 Block 1244299
          type: string
        difficulty:
          description: Defines how difficult it is for a specific miner to mine the
            block.
          example: "41.375"
          type: string
        dsBlock:
          description: Represents the Directory Service block which contains metadata
            about the miners who participate in the consensus protocol.
          example: 12443
          type: integer
        dsDifficulty:
          description: Defines how difficult it is to mine the dsBlocks.
          example: "48.625"
          type: string
        dsLeader:
          description: Represents a part of the DS Committee which leads the consensus
            protocol for the epoch.
          example: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          type: string
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 0
          type: integer
        microBlocks:
          items:
            description: Micro blocks are validated simultaneously with other smaller
              components called "shards" in order to form the final txBlock.
            example: "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            type: string
          type: array
        nextBlockHash:
          description: Defines the hash of the next block from the specific blockchain.
          example: 0x07939adbc3f5a6ba75968012acfe0fee9a351dca72c814e499fee554281b56b6
            Block 1244298 Block 1244300
          type: string
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
            Block 1244296 Block 1244298
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1616069434
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 1
          type: integer
      required:
      - blockHash
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      - nextBlockHash
      - previousBlockHash
      - timestamp
      - transactionsCount
      type: object
    GetZilliqaBlockDetailsByBlockHeightR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            difficulty: "41.375"
            blockHash: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
              Block 1244297 Block 1244299
            gasLimit: 550000
            gasUsed: 0
            previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
              Block 1244296 Block 1244298
            nextBlockHash: 0x07939adbc3f5a6ba75968012acfe0fee9a351dca72c814e499fee554281b56b6
              Block 1244298 Block 1244300
            dsDifficulty: "48.625"
            dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
            transactionsCount: 1
            dsBlock: 12443
            microBlocks:
            - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            timestamp: 1616069434
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHeightR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetZilliqaBlockDetailsByBlockHeightE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetZilliqaBlockDetailsByBlockHeightE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetZilliqaBlockDetailsByBlockHeightE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetBlockDetailsByBlockHashRIBSB:
      description: Bitcoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: "A sub-unit of BTC equal to 0.000001 BTC, or 100 Satoshi, and\
            \ is the same as microbitcoin (μBTC). Bits have two-decimal precision."
          example: "420773839"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000003ddecb747af741625d6
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 7b52cc9ce137b92365eb4d0f8a708da9e3ba199aa422f96352a0c0c87221251b
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: 1535290446
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 2840
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 545259520
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 12412
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    GetBlockDetailsByBlockHashRIBSE:
      description: Ethereum
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd983010203844765746887676f312e342e328777696e646f7773
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "7999992"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "21000"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 12
          type: integer
        nonce:
          description: Numeric representation of the block nonce
          example: "1535290446"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "1088214928417257646845"
          type: string
        uncles:
          items:
            description: "Represents the uncles of the blocks, which occur when more\
              \ than one child block is created from a parent block."
            example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      - uncles
      type: object
    GetBlockDetailsByBlockHashRIBSEC:
      description: Ethereum Classic
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "7999992"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "21000"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 12
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "1088214928417257646845"
          type: string
        uncles:
          items:
            description: "Represents the uncles of the blocks, which occur when more\
              \ than one child block is created from a parent block."
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      - uncles
      type: object
    GetBlockDetailsByBlockHashRIBSBC:
      description: Bitcoin Cash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: "A sub-unit of BTC equal to 0.000001 BTC, or 100 Satoshi, and\
            \ is the same as microbitcoin (μBTC). Bits have two-decimal precision."
          example: 1c011c75
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000044d6888a7ec8caf0ce
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 14add5ff6fb9dfc58767228b658a48f85d988a1cc49151238f9cef85b53e54d2
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: 1535290446
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetBlockDetailsByBlockHashRIBSL:
      description: Litecoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: Represents a specific sub-unit of Litecoin. Bits have two-decimal
            precision.
          example: 191670a9
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000004f7606f3d619a200dc2d
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 95439d11e918c9fd9a901dcf22203d60f538d660ae74efb7cb566825420fd3b7
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 895429
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 37248
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    GetBlockDetailsByBlockHashRIBSD:
      description: Dogecoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: Represents a specific sub-unit of Doge. Bits have two-decimal
            precision.
          example: 191670a9
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000004f7606f3d619a200dc2d
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 95439d11e918c9fd9a901dcf22203d60f538d660ae74efb7cb566825420fd3b7
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 895429
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 37248
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - weight
      type: object
    GetBlockDetailsByBlockHashRIBSD2:
      description: Dash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: Represents a specific sub-unit of Dash. Bits have two-decimal
            precision.
          example: 191b7fd9
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000016b0ef9202fae046555d
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 14add5ff6fb9dfc58767228b658a48f85d988a1cc49151238f9cef85b53e54d2
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetBlockDetailsByBlockHashRIBSBSC:
      description: Binance Smart Chain
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd883010101846765746888676f312e31352e35856c696e75780000001600553d38bc0fb8bfd6358840caee66f735eefb01fca9183e9de74aa9c582ace98b79996ddcbd32d3148e2b931bd1372a78080988a2ca9f2d0a81ca19df0354534dfed700
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "21000"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "21000"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 2
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given paren
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "24670186"
          type: string
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHashRIBSZ:
      description: Zcash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        bits:
          description: Represents a specific sub-unit of Zcash. Bits have two-decimal
            precision
          example: "524517883"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000000000000262b072797
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 961113ae943a3abf76da307cf881c4c6b6c13efb27fb67f02c9cdb46029848e8
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            Proof of Work.
          example: "1535290446"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 3892
          type: integer
        version:
          description: Represents the block version number.
          example: 4
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      type: object
    GetBlockDetailsByBlockHashRIBSZ2:
      description: Zilliqa
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        dsBlock:
          description: Numeric representation of the ds block
          example: 18531
          type: integer
        dsDifficulty:
          description: Numeric representation of the ds difficulty
          example: "169"
          type: string
        dsLeader:
          description: String representation of the ds leader
          example: zil1wkcgpkyfvq90xkapnla58hk63dvauxjy2kwtlr
          type: string
        gasLimit:
          description: Numeric representation of the block gas_limit
          example: 550000
          type: integer
        gasUsed:
          description: Numeric representation of the block gas_limit
          example: 3660
          type: integer
        microBlocks:
          items:
            description: String array representation of the micro blocks
            example: fdb7c81eeeeeeed94db44786d55ebe65afff4945428891d185587ec1e431813f
            type: string
          type: array
      required:
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      type: object
    GetBlockDetailsByBlockHashRI:
      example:
        previousBlockHash: 00000000844434fd86a630ba8e29503d5396a2b6c4003d69bf0a08d96169d4cd
        nextBlockHash: 0000000000000003b08ca90b701da447fb3e7c5c6b43acd33a5e4062fe98dea5
        blockchainSpecific: null
        hash: 0000000006b3f483bec16b8a85c632bdd30a14a202c83a9148002c9ee441dd0c
        transactionsCount: 145
        height: 1941208
        timestamp: 1615378134
      properties:
        hash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0000000006b3f483bec16b8a85c632bdd30a14a202c83a9148002c9ee441dd0c
          type: string
        height:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1941208
          type: integer
        nextBlockHash:
          description: Represents the hash of the next block. When this is the last
            block of the blockchain this value will be an empty string.
          example: 0000000000000003b08ca90b701da447fb3e7c5c6b43acd33a5e4062fe98dea5
          type: string
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 00000000844434fd86a630ba8e29503d5396a2b6c4003d69bf0a08d96169d4cd
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1615378134
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 145
          type: integer
        blockchainSpecific:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBS'
      required:
      - blockchainSpecific
      - hash
      - height
      - nextBlockHash
      - previousBlockHash
      - timestamp
      - transactionsCount
      type: object
    GetBlockDetailsByBlockHashRIBS:
      oneOf:
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSB'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSE'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSEC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSBC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSL'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSD'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSD2'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSBSC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSZ'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashRIBSZ2'
      type: object
    GetBlockDetailsByBlockHashR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            previousBlockHash: 00000000844434fd86a630ba8e29503d5396a2b6c4003d69bf0a08d96169d4cd
            nextBlockHash: 0000000000000003b08ca90b701da447fb3e7c5c6b43acd33a5e4062fe98dea5
            blockchainSpecific: null
            hash: 0000000006b3f483bec16b8a85c632bdd30a14a202c83a9148002c9ee441dd0c
            transactionsCount: 145
            height: 1941208
            timestamp: 1615378134
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetBlockDetailsByBlockHashE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetBlockDetailsByBlockHashE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetBlockDetailsByBlockHashE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetXRPRippleBlockDetailsByBlockHashRI:
      example:
        blockHash: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
        totalFees:
          amount: "0.004487"
          unit: XRP
        previousBlockHash: dcf6ade36e1d5f30b3e52605692ff47123f290f4c8915cbf5a6b7c3541f2354e
        nextBlockHash: 738cf04b9e32826395a8445aa44ec6bbb83f2cc296d94201625f3a3d6ff85a5a
        blockHeight: 15886156
        totalCoins:
          amount: "22.0012"
          unit: Drops
        transactionsCount: 0
        timestamp: 1616069434
      properties:
        blockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
          type: string
        blockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 15886156
          type: integer
        nextBlockHash:
          description: Represents the hash of the next block. When this is the last
            block of the blockchain this value will be an empty string.
          example: 738cf04b9e32826395a8445aa44ec6bbb83f2cc296d94201625f3a3d6ff85a5a
          type: string
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: dcf6ade36e1d5f30b3e52605692ff47123f290f4c8915cbf5a6b7c3541f2354e
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1616069434
          type: integer
        totalCoins:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHashRI_totalCoins'
        totalFees:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightRI_totalFees'
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 0
          type: integer
      required:
      - blockHash
      - blockHeight
      - nextBlockHash
      - previousBlockHash
      - timestamp
      - totalCoins
      - totalFees
      - transactionsCount
      type: object
    GetXRPRippleBlockDetailsByBlockHashR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            blockHash: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
            totalFees:
              amount: "0.004487"
              unit: XRP
            previousBlockHash: dcf6ade36e1d5f30b3e52605692ff47123f290f4c8915cbf5a6b7c3541f2354e
            nextBlockHash: 738cf04b9e32826395a8445aa44ec6bbb83f2cc296d94201625f3a3d6ff85a5a
            blockHeight: 15886156
            totalCoins:
              amount: "22.0012"
              unit: Drops
            transactionsCount: 0
            timestamp: 1616069434
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHashR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetXRPRippleBlockDetailsByBlockHashE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetXRPRippleBlockDetailsByBlockHashE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetXRPRippleBlockDetailsByBlockHashE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetZilliqaBlockDetailsByBlockHashRI:
      example:
        difficulty: "41.375"
        gasLimit: 550000
        gasUsed: 0
        previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
          Block 1244296 Block 1244298
        nextBlockHash: 0x07939adbc3f5a6ba75968012acfe0fee9a351dca72c814e499fee554281b56b6
          Block 1244298 Block 1244300
        blockHeight: 1244298
        dsDifficulty: "48.625"
        dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
        transactionsCount: 0
        dsBlock: 12443
        microBlocks:
        - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119 [1]\
          \ 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
          \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
        - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119 [1]\
          \ 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
          \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
        timestamp: 1616069434
      properties:
        blockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1244298
          type: integer
        difficulty:
          description: Defines how difficult it is for a specific miner to mine the
            block.
          example: "41.375"
          type: string
        dsBlock:
          description: Represents the Directory Service block which contains metadata
            about the miners who participate in the consensus protocol.
          example: 12443
          type: integer
        dsDifficulty:
          description: Defines how difficult it is to mine the dsBlocks.
          example: "48.625"
          type: string
        dsLeader:
          description: Represents a part of the DS Committee which leads the consensus
            protocol for the epoch.
          example: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          type: string
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 0
          type: integer
        microBlocks:
          items:
            description: Micro blocks are validated simultaneously with other smaller
              components called "shards" in order to form the final txBlock.
            example: "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            type: string
          type: array
        nextBlockHash:
          description: Defines the hash of the next block from the specific blockchain.
          example: 0x07939adbc3f5a6ba75968012acfe0fee9a351dca72c814e499fee554281b56b6
            Block 1244298 Block 1244300
          type: string
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
            Block 1244296 Block 1244298
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1616069434
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 0
          type: integer
      required:
      - blockHeight
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      - nextBlockHash
      - previousBlockHash
      - timestamp
      - transactionsCount
      type: object
    GetZilliqaBlockDetailsByBlockHashR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            difficulty: "41.375"
            gasLimit: 550000
            gasUsed: 0
            previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
              Block 1244296 Block 1244298
            nextBlockHash: 0x07939adbc3f5a6ba75968012acfe0fee9a351dca72c814e499fee554281b56b6
              Block 1244298 Block 1244300
            blockHeight: 1244298
            dsDifficulty: "48.625"
            dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
            transactionsCount: 0
            dsBlock: 12443
            microBlocks:
            - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            timestamp: 1616069434
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHashR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetZilliqaBlockDetailsByBlockHashE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetZilliqaBlockDetailsByBlockHashE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetZilliqaBlockDetailsByBlockHashE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListSupportedTokensRI:
      properties:
        decimals:
          description: Defines the token's decimal number or all of its points after
            the zero.
          example: 6
          type: integer
        identifier:
          description: "Represents a unique identifier for the specific blockchain\
            \ and network, e.g. smart contract address, property ID, etc."
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        name:
          description: Defines the token name.
          example: Tether
          type: string
        symbol:
          description: Defines the token's unique symbol in the Crypto APIs listings.
          example: USDT
          type: string
        type:
          description: "Represents the token's type representation, e.g. ERC-20, Omni,\
            \ etc."
          example: ERC-20
          type: string
      required:
      - decimals
      - identifier
      - name
      - symbol
      - type
      type: object
    ListSupportedTokensR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListSupportedTokensR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListSupportedTokensE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListSupportedTokensE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListSupportedTokensE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetWalletAssetDetailsRI:
      example:
        confirmedBalance:
          amount: "0.0101"
          unit: BTC
        fungibleTokens:
        - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
          symbol: USDT
          confirmedAmount: "0.254"
          type: ERC-20
        - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
          symbol: USDT
          confirmedAmount: "0.254"
          type: ERC-20
        recievedConfirmedAmount:
          amount: "0.0345"
          unit: BTC
        name: main vault
        sentConfirmedAmount:
          amount: "0.0134"
          unit: BTC
        nonFungibleTokens:
        - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          symbol: ENS
          tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
          type: ERC-721
        - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          symbol: ENS
          tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
          type: ERC-721
        depositAddressesCount: 5
      properties:
        confirmedBalance:
          $ref: '#/components/schemas/GetWalletAssetDetailsRI_confirmedBalance'
        depositAddressesCount:
          description: Specifies the count of deposit addresses in the Wallet.
          example: 5
          type: integer
        fungibleTokens:
          description: Represents fungible tokens'es detailed information
          items:
            $ref: '#/components/schemas/GetWalletAssetDetailsRI_fungibleTokens_inner'
          type: array
        name:
          description: Defines the name of the Wallet given to it by the user.
          example: main vault
          type: string
        nonFungibleTokens:
          description: Represents non-fungible tokens'es detailed information.
          items:
            $ref: '#/components/schemas/GetWalletAssetDetailsRI_nonFungibleTokens_inner'
          type: array
        recievedConfirmedAmount:
          $ref: '#/components/schemas/GetWalletAssetDetailsRI_recievedConfirmedAmount'
        sentConfirmedAmount:
          $ref: '#/components/schemas/GetWalletAssetDetailsRI_sentConfirmedAmount'
      required:
      - confirmedBalance
      - depositAddressesCount
      - fungibleTokens
      - name
      - nonFungibleTokens
      - recievedConfirmedAmount
      - sentConfirmedAmount
      type: object
    GetWalletAssetDetailsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmedBalance:
              amount: "0.0101"
              unit: BTC
            fungibleTokens:
            - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
              symbol: USDT
              confirmedAmount: "0.254"
              type: ERC-20
            - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
              symbol: USDT
              confirmedAmount: "0.254"
              type: ERC-20
            recievedConfirmedAmount:
              amount: "0.0345"
              unit: BTC
            name: main vault
            sentConfirmedAmount:
              amount: "0.0134"
              unit: BTC
            nonFungibleTokens:
            - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
              symbol: ENS
              tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
              type: ERC-721
            - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
              symbol: ENS
              tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
              type: ERC-721
            depositAddressesCount: 5
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetWalletAssetDetailsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetWalletAssetDetailsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetWalletAssetDetailsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetWalletAssetDetailsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    CreateFungibleTokensTransactionRequestFromAddressRI:
      example:
        feePriority: fast
        note: yourAdditionalInformationhere
        recipients: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
        transactionRequestId: 6038d09050653d1f0e40584c
        tokenTypeSpecificData: null
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        senders: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: fast
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipients:
          description: "Defines the destination for the transaction, i.e. the recipient(s)."
          example: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
          items:
            $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressRI_recipients_inner'
          type: array
        senders:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressRI_senders'
        tokenTypeSpecificData:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressRIS'
        transactionRequestId:
          description: "Represents a unique identifier of the transaction request\
            \ (the request sent to make a transaction), which helps in identifying\
            \ which callback and which `referenceId` concern that specific transaction\
            \ request."
          example: 6038d09050653d1f0e40584c
          type: string
      required:
      - callbackSecretKey
      - callbackUrl
      - feePriority
      - recipients
      - senders
      - tokenTypeSpecificData
      - transactionRequestId
      type: object
    CreateFungibleTokensTransactionRequestFromAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            feePriority: fast
            note: yourAdditionalInformationhere
            recipients: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
            transactionRequestId: 6038d09050653d1f0e40584c
            tokenTypeSpecificData: null
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
            senders: 0x8798d11a96a2822ae60275f3a0798a2542912a10
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    CreateFungibleTokensTransactionRequestFromAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    CreateFungibleTokensTransactionRequestFromAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    CreateFungibleTokensTransactionRequestFromAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    CreateFungibleTokensTransactionRequestFromAddressE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/WalletAsAServiceWalletBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceAddressBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceTokenNotSupported'
      type: object
    WalletAsAServiceTokenNotSupported:
      description: wallet_as_a_service_token_not_supported
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: wallet_as_a_service_token_not_supported
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "The token is not supported for this blockchain and network. To\
            \ be supported, please contact our team."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    ListAllAssetsFromAllWalletsRI:
      properties:
        coins:
          items:
            $ref: '#/components/schemas/ListAllAssetsFromAllWalletsRI_coins_inner'
          type: array
        fungibleTokens:
          description: Represents fungible tokens'es detailed information
          items:
            $ref: '#/components/schemas/ListAllAssetsFromAllWalletsRI_fungibleTokens_inner'
          type: array
        nonFungibleTokens:
          description: Represents non-fungible tokens'es detailed information.
          items:
            $ref: '#/components/schemas/ListAllAssetsFromAllWalletsRI_nonFungibleTokens_inner'
          type: array
        walletId:
          description: Defines the unique ID of the Wallet.
          example: 60c9d9921c38030006675ff6
          type: string
        walletName:
          description: Represents the name of the wallet.
          example: exampleName
          type: string
      required:
      - coins
      - fungibleTokens
      - nonFungibleTokens
      - walletId
      - walletName
      type: object
    ListAllAssetsFromAllWalletsR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListAllAssetsFromAllWalletsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListAllAssetsFromAllWalletsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListAllAssetsFromAllWalletsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListAllAssetsFromAllWalletsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListAllAssetsByWalletIDRI:
      example:
        fungibleTokens:
        - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
          symbol: USDT
          amount: "0.254"
          blockchain: ethereum
          type: ERC-20
          network: mainnet
        - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
          symbol: USDT
          amount: "0.254"
          blockchain: ethereum
          type: ERC-20
          network: mainnet
        walletId: 60c9d9921c38030006675ff6
        coins:
        - confirmedBalance: "0.00009179"
          unit: BTC
          totalSpent: "2.1"
          blockchain: bitcoin
          totalReceived: "5.6"
          network: testnet
        - confirmedBalance: "0.00009179"
          unit: BTC
          totalSpent: "2.1"
          blockchain: bitcoin
          totalReceived: "5.6"
          network: testnet
        walletName: exampleName
        nonFungibleTokens:
        - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          symbol: ENS
          tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
          blockchain: ethereum
          type: ERC-721
          network: ropsten
        - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          symbol: ENS
          tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
          blockchain: ethereum
          type: ERC-721
          network: ropsten
      properties:
        coins:
          items:
            $ref: '#/components/schemas/ListAllAssetsFromAllWalletsRI_coins_inner'
          type: array
        fungibleTokens:
          description: Represents fungible tokens'es detailed information
          items:
            $ref: '#/components/schemas/ListAllAssetsFromAllWalletsRI_fungibleTokens_inner'
          type: array
        nonFungibleTokens:
          description: Represents non-fungible tokens'es detailed information.
          items:
            $ref: '#/components/schemas/ListAllAssetsFromAllWalletsRI_nonFungibleTokens_inner'
          type: array
        walletId:
          description: Defines the unique ID of the Wallet.
          example: 60c9d9921c38030006675ff6
          type: string
        walletName:
          description: Represents the name of the wallet.
          example: exampleName
          type: string
      required:
      - coins
      - fungibleTokens
      - nonFungibleTokens
      - walletId
      - walletName
      type: object
    ListAllAssetsByWalletIDR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            fungibleTokens:
            - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
              symbol: USDT
              amount: "0.254"
              blockchain: ethereum
              type: ERC-20
              network: mainnet
            - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
              symbol: USDT
              amount: "0.254"
              blockchain: ethereum
              type: ERC-20
              network: mainnet
            walletId: 60c9d9921c38030006675ff6
            coins:
            - confirmedBalance: "0.00009179"
              unit: BTC
              totalSpent: "2.1"
              blockchain: bitcoin
              totalReceived: "5.6"
              network: testnet
            - confirmedBalance: "0.00009179"
              unit: BTC
              totalSpent: "2.1"
              blockchain: bitcoin
              totalReceived: "5.6"
              network: testnet
            walletName: exampleName
            nonFungibleTokens:
            - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
              symbol: ENS
              tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
              blockchain: ethereum
              type: ERC-721
              network: ropsten
            - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
              symbol: ENS
              tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
              blockchain: ethereum
              type: ERC-721
              network: ropsten
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListAllAssetsByWalletIDR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListAllAssetsByWalletIDE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListAllAssetsByWalletIDE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListAllAssetsByWalletIDE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetLastMinedBlockRIBSB:
      description: Bitcoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        bits:
          description: "A sub-unit of BTC equal to 0.000001 BTC, or 100 Satoshi, and\
            \ is the same as microbitcoin (μBTC). Bits have two-decimal precision."
          example: 170d21b9
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 00000000000000000000000000000000000000001932c1bc515b0c0e0dee2040
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 02754414626473fa39a0cfbf8d1960fc17ba932ab586340f61f039114053e851
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 925958
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536928256
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "2000000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 3999412
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    GetLastMinedBlockRIBSE:
      description: Ethereum
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0x7070796520e4b883e5bda9e7a59ee4bb99e9b1bc080c
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "12499653"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "12488144"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 17
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "4794080996481072"
          type: string
        uncles:
          items:
            description: String array representation of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      - uncles
      type: object
    GetLastMinedBlockRIBSEC:
      description: Ethereum Classic
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd983010203844765746887676f312e342e328777696e646f7773
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "7999992"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "6494"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 6
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "1086033282060494457577"
          type: string
        uncles:
          items:
            description: String array representation of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      - uncles
      type: object
    GetLastMinedBlockRIBSBC:
      description: Bitcoin Cash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        bits:
          description: "A sub-unit of BCH equal to 0.000001 BCH, or 100 Satoshi, and\
            \ is the same as microbitcoincash (μBCH). Bits have two-decimal precision."
          example: 1805839a
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000015dc8754d8bfaedfffbb3bd
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 543872ba53c13183f951d76dd5933f98900a1bf9b3eef716857dfcc3c0534dfb
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 545259520
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetLastMinedBlockRIBSL:
      description: Litecoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        bits:
          description: Represents a specific sub-unit of Litecoin. Bits have two-decimal
            precision.
          example: 1a01a4ae
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 00000000000000000000000000000000000000000000052f02c48d14c5b35ccc
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: a7d45c761cbea0c31ce55b1f2f04d98005980489470ebcc7c29b7b317f01f96b
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 131447
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 585599
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    GetLastMinedBlockRIBSD:
      description: Dogecoin
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        bits:
          description: Represents a specific sub-unit of Doge. Bits have two-decimal
            precision.
          example: 1a031996
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 00000000000000000000000000000000000000000000048ea6f3be405ae0a819
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: bfeb2ed090f955ec07c51be25bbddc91ea73cafbe8c3d6f1a76b288e70b19df6
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 2113101077
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 4322
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 6422788
          type: integer
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 17288
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - weight
      type: object
    GetLastMinedBlockRIBSD2:
      description: Dash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        bits:
          description: Represents a specific sub-unit of Dash. Bits have two-decimal
            precision.
          example: 1c0b6b81
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000004f2b087db88ad29f2da6
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 67eab41d993576c37ee9ce89054641660e9e61de98fa2b701d19c25cfb4ce037
          type: string
        nonce:
          description: Numeric representation of the block nonce
          example: 2113101077
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000010"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetLastMinedBlockRIBSBSC:
      description: Binance Smart Chain
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd883010001846765746888676f312e31342e34856c696e757800000000000000eb8c4ee17a97af3c7d18e6cfb87d25bf9a483933d393b4fce778c9a7d64eab76471a8ab92c3a7d131c0f9cfbbd9a54b438c80b491c7a579da0e37db6ca823eda01
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "30000000"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "686304"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in second
          example: 3
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block"
          example: "2437536"
          type: string
        uncles:
          items:
            description: String array representation of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      - uncles
      type: object
    GetLastMinedBlockRIBSZ:
      description: Zcash
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        bits:
          description: Represents a specific sub-unit of Zcash. Bits have two-decimal
            precision
          example: "524517883"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000000000000262b072797
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 961113ae943a3abf76da307cf881c4c6b6c13efb27fb67f02c9cdb46029848e8
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work.
          example: "2113101077"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        version:
          description: Represents the transaction version number.
          example: 4
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      type: object
    GetLastMinedBlockRIBSZ2:
      description: Zilliqa
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        dsBlock:
          description: Represents the Directory Service block which contains metadata
            about the miners who participate in the consensus protocol.
          example: 12443
          type: integer
        dsDifficulty:
          description: Defines how difficult it is to mine the dsBlocks.
          example: "48.625"
          type: string
        dsLeader:
          description: Represents a part of the DS Committee which leads the consensus
            protocol for the epoch.
          example: zil1tzzw5f7jzrkzl4pe0lqgj9lp4mcza8zna5c877
          type: string
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 5160
          type: integer
        microBlocks:
          items:
            description: Micro blocks are validated simultaneously with other smaller
              components called "shards" in order to form the final txBlock.
            example: f3be7f225bc5dd4e328721f2d884a006719681a887bb6530d14451f4759b782a
            type: string
          type: array
      required:
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      type: object
    GetLastMinedBlockRI:
      example:
        previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
        blockchainSpecific: null
        hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
        transactionsCount: 2755
        height: 673852
        timestamp: 1610365615
      properties:
        hash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
          type: string
        height:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 673852
          type: integer
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1610365615
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 2755
          type: integer
        blockchainSpecific:
          $ref: '#/components/schemas/GetLastMinedBlockRIBS'
      required:
      - blockchainSpecific
      - hash
      - height
      - previousBlockHash
      - timestamp
      - transactionsCount
      type: object
    GetLastMinedBlockRIBS:
      oneOf:
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSB'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSE'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSEC'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSBC'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSL'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSD'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSD2'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSBSC'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSZ'
      - $ref: '#/components/schemas/GetLastMinedBlockRIBSZ2'
      type: object
    GetLastMinedBlockR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
            blockchainSpecific: null
            hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
            transactionsCount: 2755
            height: 673852
            timestamp: 1610365615
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetLastMinedBlockR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetLastMinedBlockE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetLastMinedBlockE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetLastMinedBlockE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetLatestMinedXRPRippleBlockRI:
      example:
        blockHash: f9b304b7933ef298142fdd58ad2dec414a5267dcbbd8a4fe9fc2c0a5f9dde050
        totalFees:
          amount: "0.00001"
          unit: XRP
        previousBlockHash: de9f9e5b68a1322a16f0d1217cf31765e9101764e6e2f3c7aa058b8c641da37a
        blockHeight: 15975748
        totalCoins:
          amount: "22.0012"
          unit: Drops
        transactionsCount: 1
        timestamp: 1616430182
      properties:
        blockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: f9b304b7933ef298142fdd58ad2dec414a5267dcbbd8a4fe9fc2c0a5f9dde050
          type: string
        blockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 15975748
          type: integer
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: de9f9e5b68a1322a16f0d1217cf31765e9101764e6e2f3c7aa058b8c641da37a
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1616430182
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 1
          type: integer
        totalCoins:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockRI_totalCoins'
        totalFees:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockRI_totalFees'
      required:
      - blockHash
      - blockHeight
      - previousBlockHash
      - timestamp
      - totalCoins
      - totalFees
      - transactionsCount
      type: object
    GetLatestMinedXRPRippleBlockR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            blockHash: f9b304b7933ef298142fdd58ad2dec414a5267dcbbd8a4fe9fc2c0a5f9dde050
            totalFees:
              amount: "0.00001"
              unit: XRP
            previousBlockHash: de9f9e5b68a1322a16f0d1217cf31765e9101764e6e2f3c7aa058b8c641da37a
            blockHeight: 15975748
            totalCoins:
              amount: "22.0012"
              unit: Drops
            transactionsCount: 1
            timestamp: 1616430182
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetLatestMinedXRPRippleBlockE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetLatestMinedXRPRippleBlockE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetLatestMinedXRPRippleBlockE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetLatestMinedZilliqaBlockRI:
      example:
        difficulty: "41.375"
        blockHash: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
          Block 1244297 Block 1244299
        gasLimit: 550000
        gasUsed: 10028
        previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
          Block 1244296 Block 1244298
        blockHeight: 1244298
        dsDifficulty: "48.625"
        dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
        transactionsCount: 1
        dsBlock: 12443
        microBlocks:
        - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119 [1]\
          \ 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
          \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
        - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119 [1]\
          \ 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
          \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
        timestamp: 1616069434
      properties:
        blockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
            Block 1244297 Block 1244299
          type: string
        blockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 1244298
          type: integer
        difficulty:
          description: Defines how difficult it is for a specific miner to mine the
            block.
          example: "41.375"
          type: string
        dsBlock:
          description: Represents the Directory Service block which contains metadata
            about the miners who participate in the consensus protocol.
          example: 12443
          type: integer
        dsDifficulty:
          description: Defines how difficult it is to mine the dsBlocks.
          example: "48.625"
          type: string
        dsLeader:
          description: Represents a part of the DS Committee which leads the consensus
            protocol for the epoch.
          example: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          type: string
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 10028
          type: integer
        microBlocks:
          items:
            description: Micro blocks are validated simultaneously with other smaller
              components called "shards" in order to form the final txBlock.
            example: "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            type: string
          type: array
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
            Block 1244296 Block 1244298
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1616069434
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 1
          type: integer
      required:
      - blockHash
      - blockHeight
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      - previousBlockHash
      - timestamp
      - transactionsCount
      type: object
    GetLatestMinedZilliqaBlockR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            difficulty: "41.375"
            blockHash: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
              Block 1244297 Block 1244299
            gasLimit: 550000
            gasUsed: 10028
            previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
              Block 1244296 Block 1244298
            blockHeight: 1244298
            dsDifficulty: "48.625"
            dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
            transactionsCount: 1
            dsBlock: 12443
            microBlocks:
            - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            timestamp: 1616069434
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetLatestMinedZilliqaBlockR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetLatestMinedZilliqaBlockE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetLatestMinedZilliqaBlockE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetLatestMinedZilliqaBlockE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetTransactionRequestDetailsRI:
      example:
        transactionType: coin
        feePriority: standard
        walletId: 60c9d9921c38030006675ff6
        totalTransactionAmount: "0.001"
        unit: BTC
        transactionRequestStatus: created
        blockchain: bitcoin
        recipients:
        - amount: "0.001"
          unit: BTC
          address: mr3zKBc7skyDHcVHWww4JzzziPnrdYTscR
          addressTag: 3999472835
          classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        - amount: "0.001"
          unit: BTC
          address: mr3zKBc7skyDHcVHWww4JzzziPnrdYTscR
          addressTag: 3999472835
          classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        additionalDetails: yourExampleStringHere
        transactionId: 61922aa68f192800067a8404
        network: testnet
      properties:
        additionalDetails:
          description: Defines an optional note for additional details.
          example: yourExampleStringHere
          type: string
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          enum:
          - bitcoin
          - bitcoin-cash
          - litecoin
          - dogecoin
          - dash
          - ethereum
          - ethereum-classic
          - xrp
          - zcash
          example: bitcoin
          type: string
        feePriority:
          description: "Defines the priority for the fee, if it is \"slow\", \"standard\"\
            \ or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          enum:
          - mainnet
          - testnet
          - ropsten
          - mordor
          example: testnet
          type: string
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/GetTransactionRequestDetailsRI_recipients_inner'
          type: array
        totalTransactionAmount:
          description: Defines the total transaction amount.
          example: "0.001"
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be transactionId in UTXO-based protocols like Bitcoin, and transaction\
            \ hash in Ethereum blockchain."
          example: 61922aa68f192800067a8404
          type: string
        transactionRequestStatus:
          description: "Defines the status of the transaction request, e.g. pending."
          enum:
          - created
          - await-approval
          - pending
          - prepared
          - signed
          - broadcasted
          - success
          - failed
          - rejected
          - mined
          example: created
          type: string
        transactionType:
          description: "Defines the transaction type, if it is for coins or tokens."
          enum:
          - coin
          - token
          example: coin
          type: string
        unit:
          description: Defines the unit of the amount.
          example: BTC
          type: string
        walletId:
          description: Defines the unique ID of the Wallet.
          example: 60c9d9921c38030006675ff6
          type: string
      required:
      - additionalDetails
      - blockchain
      - feePriority
      - network
      - recipients
      - totalTransactionAmount
      - transactionRequestStatus
      - transactionType
      - unit
      - walletId
      type: object
    GetTransactionRequestDetailsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            transactionType: coin
            feePriority: standard
            walletId: 60c9d9921c38030006675ff6
            totalTransactionAmount: "0.001"
            unit: BTC
            transactionRequestStatus: created
            blockchain: bitcoin
            recipients:
            - amount: "0.001"
              unit: BTC
              address: mr3zKBc7skyDHcVHWww4JzzziPnrdYTscR
              addressTag: 3999472835
              classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
            - amount: "0.001"
              unit: BTC
              address: mr3zKBc7skyDHcVHWww4JzzziPnrdYTscR
              addressTag: 3999472835
              classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
            additionalDetails: yourExampleStringHere
            transactionId: 61922aa68f192800067a8404
            network: testnet
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetTransactionRequestDetailsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetTransactionRequestDetailsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetTransactionRequestDetailsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetTransactionRequestDetailsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI:
      example:
        note: yourAdditionalInformationhere
        totalAmount:
          unit: TRX
          value: "0.0006"
        transactionRequestStatus: created
        sender:
          address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
        transactionRequestId: 62da9f003d20a65c737af83f
        recipient:
        - amount: "0.0006"
          unit: TRX
          address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          classicAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
        - amount: "0.0006"
          unit: TRX
          address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          classicAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
        classicAddress: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        classicAddress:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key. The classic address is shown when the source address\
            \ is an x-Address."
          example: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipient:
          description: "Defines the destination for the transaction, i.e. the recipient(s)."
          items:
            $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI_recipient_inner'
          type: array
        sender:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI_sender'
        transactionRequestId:
          description: "Represents a unique identifier of the transaction request\
            \ (the request sent to make a transaction), which helps in identifying\
            \ which callback and which `referenceId` concern that specific transaction\
            \ request."
          example: 62da9f003d20a65c737af83f
          type: string
        transactionRequestStatus:
          description: "Defines the status of the transaction, e.g. \"created, \"\
            await_approval\", \"pending\", \"prepared\", \"signed\", \"broadcasted\"\
            , \"success\", \"failed\", \"rejected\", mined\"."
          enum:
          - created
          - await-approval
          - pending
          - prepared
          - signed
          - broadcasted
          - success
          - failed
          - rejected
          - mined
          - mined-with-errors
          example: created
          type: string
        totalAmount:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI_totalAmount'
      required:
      - recipient
      - sender
      - transactionRequestId
      - transactionRequestStatus
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            note: yourAdditionalInformationhere
            totalAmount:
              unit: TRX
              value: "0.0006"
            transactionRequestStatus: created
            sender:
              address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
            transactionRequestId: 62da9f003d20a65c737af83f
            recipient:
            - amount: "0.0006"
              unit: TRX
              address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
              classicAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
            - amount: "0.0006"
              unit: TRX
              address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
              classicAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
            classicAddress: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/WalletAsAServiceWalletBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceAddressBalanceNotEnough'
      type: object
    ListLatestMinedBlocksRIBSB:
      description: Bitcoin
      properties:
        bits:
          description: "A sub-unit of BCH equal to 0.000001 BCH, or 100 Satoshi, and\
            \ is the same as microbitcoincash (μBCH). Bits have two-decimal precision."
          example: "423838743"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000005c9475aae89058a50a6
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: d3a49e75a5c53ef277bfe0f6474c8ff35c9d3d8f9f9e65a1d3bf45ecff601c82
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 500511677
          format: int64
          type: integer
        size:
          description: Represents the block size
          example: 1864409
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 502
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870916
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000004"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 2263
          type: integer
      required:
      - bits
      - chainwork
      - merkleRoot
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    ListLatestMinedBlocksRIBSBC:
      description: Bitcoin Cash
      properties:
        bits:
          description: "A sub-unit of BCH equal to 0.000001 BCH, or 100 Satoshi, and\
            \ is the same as microbitcoincash (μBCH). Bits have two-decimal precision."
          example: 1805839a
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000015dc8754d8bfaedfffbb3bd
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 543872ba53c13183f951d76dd5933f98900a1bf9b3eef716857dfcc3c0534dfb
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 2113101077
          format: int64
          type: integer
        size:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 1408113
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 545259520
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000004"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    ListLatestMinedBlocksRIBSEC:
      description: Ethereum Classic
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd983010203844765746887676f312e342e328777696e646f7773
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "7999992"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "6494"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 6
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "1086033282060494457577"
          type: string
        uncles:
          items:
            description: Represents the block uncles.
            example: "2113101077"
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      - uncles
      type: object
    ListLatestMinedBlocksRIBSL:
      description: Litecoin
      properties:
        bits:
          description: Represents a specific sub-unit of Litecoin. Bits have two-decimal
            precision.
          example: 1a01a4ae
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 00000000000000000000000000000000000000000000052f02c48d14c5b35ccc
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: a7d45c761cbea0c31ce55b1f2f04d98005980489470ebcc7c29b7b317f01f96b
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 2113101077
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 131447
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 585599
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    ListLatestMinedBlocksRIBSD:
      description: Dash
      properties:
        bits:
          description: Represents a specific sub-unit of Dash. Bits have two-decimal
            precision.
          example: 1c0b6b81
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000004f2b087db88ad29f2da6
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 67eab41d993576c37ee9ce89054641660e9e61de98fa2b701d19c25cfb4ce037
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 2113101077
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000010"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    ListLatestMinedBlocksRIBSD2:
      description: Dogecoin
      properties:
        bits:
          description: Represents a specific sub-unit of Doge. Bits have two-decimal
            precision.
          example: 1a031996
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahash"
          example: 00000000000000000000000000000000000000000000048ea6f3be405ae0a819
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: bfeb2ed090f955ec07c51be25bbddc91ea73cafbe8c3d6f1a76b288e70b19df6
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 2113101077
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 4322
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 6422788
          type: integer
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 17288
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - weight
      type: object
    ListLatestMinedBlocksRIBSBSC:
      description: Binance Smart Chain
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd883010001846765746888676f312e31342e34856c696e757800000000000000eb8c4ee17a97af3c7d18e6cfb87d25bf9a483933d393b4fce778c9a7d64eab76471a8ab92c3a7d131c0f9cfbbd9a54b438c80b491c7a579da0e37db6ca823eda01
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "30000000"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "686304"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in second
          example: 3
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block"
          example: "2437536"
          type: string
        uncles:
          items:
            description: Represents the block uncles.
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      - uncles
      type: object
    ListLatestMinedBlocksRIBSZ:
      description: Zilliqa
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        dsBlock:
          description: Represents the Directory Service block which contains metadata
            about the miners who participate in the consensus protocol.
          example: 12443
          type: integer
        dsDifficulty:
          description: Defines how difficult it is to mine the dsBlocks.
          example: "48.625"
          type: string
        dsLeader:
          description: Represents a part of the DS Committee which leads the consensus
            protocol for the epoch.
          example: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          type: string
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 10028
          type: integer
        microBlocks:
          items:
            description: Micro blocks are validated simultaneously with other smaller
              components called "shards" in order to form the final txBlock.
            example: "5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ , 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ , 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e,\
              \ 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            type: string
          type: array
      required:
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      type: object
    ListLatestMinedBlocksRIBSZ2:
      description: Zcash
      properties:
        bits:
          description: Represents a specific sub-unit of Zcash. Bits have two-decimal
            precision
          example: "524517883"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000000000000262b072797
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 961113ae943a3abf76da307cf881c4c6b6c13efb27fb67f02c9cdb46029848e8
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        version:
          description: Represents the transaction version number.
          example: 536870916
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      type: object
    ListLatestMinedBlocksRIBSX:
      description: XRP
      properties:
        totalCoins:
          $ref: '#/components/schemas/ListLatestMinedBlocksRIBSX_totalCoins'
        totalFees:
          $ref: '#/components/schemas/ListLatestMinedBlocksRIBSX_totalFees'
      required:
      - totalFees
      type: object
    ListLatestMinedBlocksRI:
      properties:
        hash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 000000000000000426bd189cdfaab96a94d72089dda11cf110bd2a87116174a9
          type: string
        height:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 2099743
          type: integer
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 000000000000001e592591fc762bd2bf4d37d0b75e29c49b41576507a501cbc3
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1634642334
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 3
          type: integer
        blockchainSpecific:
          $ref: '#/components/schemas/ListLatestMinedBlocksRIBS'
      required:
      - blockchainSpecific
      - hash
      - height
      - previousBlockHash
      - timestamp
      - transactionsCount
      type: object
    ListLatestMinedBlocksRIBS:
      oneOf:
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSB'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSBC'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSEC'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSL'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSD'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSD2'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSBSC'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSZ'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSZ2'
      - $ref: '#/components/schemas/ListLatestMinedBlocksRIBSX'
      type: object
    ListLatestMinedBlocksR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListLatestMinedBlocksR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListLatestMinedBlocksE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListLatestMinedBlocksE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListLatestMinedBlocksE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    SyncHDWalletXPubYPubZPubRI:
      example:
        extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
      properties:
        extendedPublicKey:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
          type: string
      required:
      - extendedPublicKey
      type: object
    SyncHDWalletXPubYPubZPubR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    SyncHDWalletXPubYPubZPubE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    SyncHDWalletXPubYPubZPubE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      - $ref: '#/components/schemas/XpubNotSynced'
      - $ref: '#/components/schemas/InvalidXpub'
      type: object
    SyncHDWalletXPubYPubZPubE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    InvalidNetwork:
      description: invalid_network
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: invalid_network
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The provided network is invalid. The network **must** be a supported
            one. For the full list of supported networks please see our Documentation.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    XpubNotSynced:
      description: xpub_not_synced
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: xpub_not_synced
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "This xPub is not yet synced, please first use endpoint “Sync HD\
            \ (xPub, yPub, zPub) wallet” to synchronize it."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    XpubSyncInProgress:
      description: xpub_sync_in_progress
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: xpub_sync_in_progress
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "Your wallet (xPub, yPub, zPub) is still syncing, it should take\
            \ few seconds depending on how many transactions it has."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    SyncHDWalletXPubYPubZPubE422:
      oneOf:
      - $ref: '#/components/schemas/InvalidRequestBodyStructure'
      - $ref: '#/components/schemas/XpubSyncInProgress'
      type: object
    AlreadyExists:
      description: already_exists
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: already_exists
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The specified resource already exists.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    SyncHDWalletXPubYPubZPubE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    InvalidXpub:
      description: invalid_xpub
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: invalid_xpub
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The provided Xpub is invalid.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    ListWalletTransactionsRI:
      properties:
        direction:
          description: "Defines the direction of the transaction, e.g. incoming."
          example: incoming
          type: string
        fee:
          $ref: '#/components/schemas/ListWalletTransactionsRI_fee'
        fungibleTokens:
          description: Represents fungible tokens'es detailed information
          items:
            $ref: '#/components/schemas/ListWalletTransactionsRI_fungibleTokens_inner'
          type: array
        internalTransactions:
          items:
            $ref: '#/components/schemas/ListWalletTransactionsRI_internalTransactions_inner'
          type: array
        nonFungibleTokens:
          description: Represents non-fungible tokens'es detailed information.
          items:
            $ref: '#/components/schemas/ListWalletTransactionsRI_nonFungibleTokens_inner'
          type: array
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/ListWalletTransactionsRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/ListWalletTransactionsRI_senders_inner'
          type: array
        status:
          description: "Defines the status of the transaction, if it is confirmed\
            \ or unconfirmed."
          example: confirmed
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1622466746
          type: integer
        transactionId:
          description: Represents the unique TD of the transaction.
          example: b3ddf04d74e5bd57f3ccb5375db6f39d228ed98cfa1ae9bf959b9406fc975f01
          type: string
        value:
          $ref: '#/components/schemas/ListWalletTransactionsRI_value'
      required:
      - direction
      - fee
      - recipients
      - senders
      - status
      - timestamp
      - transactionId
      - value
      type: object
    ListWalletTransactionsR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListWalletTransactionsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListWalletTransactionsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListWalletTransactionsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListWalletTransactionsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRI:
      example:
        note: yourAdditionalInformationhere
        sender:
          address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
        transactionRequestId: 62daacdbc8a7282e9ea01c35
        tokenTypeSpecificData: null
        recipient:
        - amount: "0.2568"
          unit: JST
          address: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
        - amount: "0.2568"
          unit: JST
          address: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipient:
          description: "Defines the destination for the transaction, i.e. the recipient(s)."
          items:
            $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRI_recipient_inner'
          type: array
        sender:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI_sender'
        tokenTypeSpecificData:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRIS'
        transactionRequestId:
          description: "Represents a unique identifier of the transaction request\
            \ (the request sent to make a transaction), which helps in identifying\
            \ which callback and which `referenceId` concern that specific transaction\
            \ request."
          example: 62daacdbc8a7282e9ea01c35
          type: string
      required:
      - recipient
      - sender
      - tokenTypeSpecificData
      - transactionRequestId
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            note: yourAdditionalInformationhere
            sender:
              address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
            transactionRequestId: 62daacdbc8a7282e9ea01c35
            tokenTypeSpecificData: null
            recipient:
            - amount: "0.2568"
              unit: JST
              address: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
            - amount: "0.2568"
              unit: JST
              address: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
            callbackSecretKey: yourSecretString
            callbackUrl: https://example.com
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/WalletAsAServiceProvidedNetworkIsNotSuitableForThisWalletType'
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/WalletAsAServiceWalletBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceAddressBalanceNotEnough'
      - $ref: '#/components/schemas/WalletAsAServiceTokenNotSupported'
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSB:
      description: Bitcoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 591
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 347
          type: integer
        version:
          description: Represents the transaction version number.
          example: 2
          type: integer
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSB_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSE:
      description: Ethereum
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSE_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSL:
      description: Litecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 2
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSL_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSBC:
      description: Bitcoin Cash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSBC_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSBC_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSEC:
      description: Ethereum Classic
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSEC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0xa9059cbb000000000000000000000000acc59ec2f7119dc7a9e69dcd124cff75caae05bf0000000000000000000000000000000000000000000000000000000000989680
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSD:
      description: Dogecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 266
          type: integer
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSD_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSD2:
      description: Dash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 125
          type: integer
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSD2_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD2_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSZ:
      description: Zcash
      properties:
        bindingSig:
          description: "It is used to enforce balance of Spend and Output transfers,\
            \ in order to prevent their replay across transactions."
          example: 603624b3e78e0de0415dea320797a107076a9f7aabd39f44bc4957803330e9891cb33744ac2ec749c2d2d341f29467c49c0ae35bf34765e2fb7c4cda68584804
          type: string
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        joinSplitPubKey:
          description: Represents an encoding of a JoinSplitSig public validating
            key.
          example: 5d2673b4c727241410e42f214a39218e4f13354d77db8ec31243a7be7ed8e2b7
          type: string
        joinSplitSig:
          description: Is used to sign transactions that contain at least one JoinSplit
            description.
          example: 8b06b926d619ead780b0769e5997ded93f9851fd0efd4b667afc5bcc2792b26cd4a565b4efa7733535fdc09fa566ca59042785d7fd8043d37fdf9e144465080a
          type: string
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 234
          type: integer
        vJoinSplit:
          description: Represents a sequence of JoinSplit descriptions using BCTV14
            proofs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vJoinSplit_inner'
          type: array
        vShieldedOutput:
          description: Object Array representation of transaction output descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedOutput_inner'
          type: array
        vShieldedSpend:
          description: Object Array representation of transaction spend descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner'
          type: array
        valueBalance:
          description: String representation of the transaction value balance
          example: "0"
          type: string
        version:
          description: Represents the transaction version number.
          example: 1
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID.
          example: 0x892f2085
          type: string
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSZ_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSZ_vout_inner'
          type: array
      required:
      - bindingSig
      - expiryHeight
      - joinSplitPubKey
      - joinSplitSig
      - locktime
      - overwintered
      - size
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSBSC:
      description: Binance Smart Chain
      properties:
        contract:
          description: Represents the specific transaction contract
          example: 0x0000000000000000000000000000000000001000
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBSC_gasPrice'
        gasUsed:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 25341
          type: integer
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBST:
      description: Tron
      properties:
        amount:
          description: String representation of the amount value
          type: string
        bandwidthUsed:
          description: Numeric representation of the transaction used bandwidth
          type: string
        contract:
          description: Numeric representation of the transaction contract
          type: string
        energyUsed:
          description: String representation of the transaction used energy
          type: string
        hasInternalTransactions:
          type: boolean
        hasTokenTransfers:
          type: boolean
        input:
          description: Numeric representation of the transaction input
          type: string
        status:
          description: String representation of the transaction status
          type: string
      required:
      - amount
      - bandwidthUsed
      - contract
      - energyUsed
      - hasInternalTransactions
      - hasTokenTransfers
      - input
      - status
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSP:
      description: Polygon
      properties:
        contract:
          description: Represents the specific transaction contract
          example: 0x0000000000000000000000000000000000001000
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "2100"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSP_gasPrice'
        gasUsed:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 25341
          type: integer
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      type: object
    GetWalletTransactionDetailsByTransactionIDRI:
      example:
        recipients: recipients
        fee:
          amount: "0.00003812"
          unit: BTC
        minedInBlockHeight: 1250283
        index: 21
        isConfirmed: true
        minedInBlockHash: 0000000000503b5200a935cfa9e7740783b5f2292aaad3bf273554abfb3d91ce
        blockchainSpecific: null
        senders: senders
        transactionHash: c58148bb37b9be020338e427784580b58e0b497ce32d7eddf812de6a1a0d3133
        transactionId: 3e081861494aed897e589cdeab5d9e628d985e571ed1c19896d1aa698cce9d80
        timestamp: 1636972451
      properties:
        index:
          description: Represents the index position of the transaction in the specific
            block.
          example: 21
          type: integer
        isConfirmed:
          description: Represents the state of the transaction whether it is confirmed
            or not confirmed.
          example: true
          type: boolean
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 0000000000503b5200a935cfa9e7740783b5f2292aaad3bf273554abfb3d91ce
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 1250283
          type: integer
        recipients:
          description: String representation of the transaction to address
          type: string
        senders:
          description: String representation of the transaction from address
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1636972451
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: c58148bb37b9be020338e427784580b58e0b497ce32d7eddf812de6a1a0d3133
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 3e081861494aed897e589cdeab5d9e628d985e571ed1c19896d1aa698cce9d80
          type: string
        fee:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRI_fee'
        blockchainSpecific:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBS'
      required:
      - blockchainSpecific
      - fee
      - index
      - isConfirmed
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionId
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBS:
      oneOf:
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSB'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSE'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSL'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSBC'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSEC'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSD'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSD2'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSZ'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSBSC'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBST'
      - $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSP'
      type: object
    GetWalletTransactionDetailsByTransactionIDR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            recipients: recipients
            fee:
              amount: "0.00003812"
              unit: BTC
            minedInBlockHeight: 1250283
            index: 21
            isConfirmed: true
            minedInBlockHash: 0000000000503b5200a935cfa9e7740783b5f2292aaad3bf273554abfb3d91ce
            blockchainSpecific: null
            senders: senders
            transactionHash: c58148bb37b9be020338e427784580b58e0b497ce32d7eddf812de6a1a0d3133
            transactionId: 3e081861494aed897e589cdeab5d9e628d985e571ed1c19896d1aa698cce9d80
            timestamp: 1636972451
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetWalletTransactionDetailsByTransactionIDE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetWalletTransactionDetailsByTransactionIDE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetWalletTransactionDetailsByTransactionIDE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListInternalTransactionDetailsByTransactionHashRI:
      properties:
        amount:
          description: Defines the specific amount of the transaction.
          example: "0.089286906469667626"
          type: string
        blockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0x85d538e441835ea749738cf690b676099d869059815842a7bde3259c58ff29eb
          type: string
        blockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 12561919
          type: integer
        operationID:
          description: Represents the unique internal transaction ID in regards to
            the parent transaction (type trace address).
          example: call_1
          type: string
        operationType:
          description: Defines the call type of the internal transaction.
          example: CALL
          type: string
        parentHash:
          description: Defines the specific hash of the parent transaction.
          example: 0x5d4ea0471b70de09fa3d6a4bc32f703ec44483bffa4d6169fa0a36c6a1dc108a
          type: string
        recipient:
          description: Represents the recipient address with the respective amount.
          example: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2
          type: string
        sender:
          description: Represents the sender address with the respective amount.
          example: 0x7a250d5630b4cf539739df2c5dacb4c659f2488d
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1622728329
          type: integer
      required:
      - amount
      - blockHash
      - blockHeight
      - operationID
      - operationType
      - parentHash
      - recipient
      - sender
      - timestamp
      type: object
    ListInternalTransactionDetailsByTransactionHashR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListInternalTransactionDetailsByTransactionHashR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListInternalTransactionDetailsByTransactionHashE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListInternalTransactionDetailsByTransactionHashE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListInternalTransactionDetailsByTransactionHashE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    SyncNewHDWalletXPubYPubZPubRI:
      example:
        extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
      properties:
        extendedPublicKey:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
          type: string
      required:
      - extendedPublicKey
      type: object
    SyncNewHDWalletXPubYPubZPubR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    SyncNewHDWalletXPubYPubZPubE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    SyncNewHDWalletXPubYPubZPubE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      - $ref: '#/components/schemas/XpubNotSynced'
      - $ref: '#/components/schemas/InvalidXpub'
      type: object
    SyncNewHDWalletXPubYPubZPubE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    SyncNewHDWalletXPubYPubZPubE422:
      oneOf:
      - $ref: '#/components/schemas/InvalidRequestBodyStructure'
      - $ref: '#/components/schemas/XpubSyncInProgress'
      type: object
    SyncNewHDWalletXPubYPubZPubE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    GetInternalTransactionByTransactionHashAndOperationIdRI:
      example:
        blockHash: 0x61262bd96d7cf50884e8ce61a5cf978d748417d28d3d76aea889346f050a2fbb
        amount: "0.000479716904346335"
        blockHeight: 12561779
        sender: 0x7a250d5630b4cf539739df2c5dacb4c659f2488d
        recipient: 0xef7cfdee2f0ef5ae5e0c60098c8838fa7822754e
        operationType: CALL
        parentHash: 0x92bb77e16444e0417c8b50dfab68e89c7ad27d4140a766c3bbd4d0ac195f12fc
        timestamp: 1622726449
      properties:
        amount:
          description: Defines the specific amount of the transaction.
          example: "0.000479716904346335"
          type: string
        blockHash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 0x61262bd96d7cf50884e8ce61a5cf978d748417d28d3d76aea889346f050a2fbb
          type: string
        blockHeight:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 12561779
          type: integer
        operationType:
          description: Defines the specific type of the operation.
          example: CALL
          type: string
        parentHash:
          description: Defines the specific hash of the parent transaction.
          example: 0x92bb77e16444e0417c8b50dfab68e89c7ad27d4140a766c3bbd4d0ac195f12fc
          type: string
        recipient:
          description: Represents the recipient address with the respective amount.
          example: 0xef7cfdee2f0ef5ae5e0c60098c8838fa7822754e
          type: string
        sender:
          description: Represents the sender address with the respective amount.
          example: 0x7a250d5630b4cf539739df2c5dacb4c659f2488d
          type: string
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1622726449
          type: integer
      required:
      - amount
      - blockHash
      - blockHeight
      - operationType
      - parentHash
      - recipient
      - sender
      - timestamp
      type: object
    GetInternalTransactionByTransactionHashAndOperationIdR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            blockHash: 0x61262bd96d7cf50884e8ce61a5cf978d748417d28d3d76aea889346f050a2fbb
            amount: "0.000479716904346335"
            blockHeight: 12561779
            sender: 0x7a250d5630b4cf539739df2c5dacb4c659f2488d
            recipient: 0xef7cfdee2f0ef5ae5e0c60098c8838fa7822754e
            operationType: CALL
            parentHash: 0x92bb77e16444e0417c8b50dfab68e89c7ad27d4140a766c3bbd4d0ac195f12fc
            timestamp: 1622726449
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetInternalTransactionByTransactionHashAndOperationIdR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetInternalTransactionByTransactionHashAndOperationIdE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetInternalTransactionByTransactionHashAndOperationIdE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetInternalTransactionByTransactionHashAndOperationIdE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    BlockchainDataInternalTransactionNotFound:
      description: blockchain_data_internal_transaction_not_found
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: blockchain_data_internal_transaction_not_found
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The specified internal transaction has not been found on the specific
            blockchain.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    ListInternalTransactionsByAddressRI:
      properties:
        amount:
          description: Defines the specific amount of the transaction.
          example: "0.089286906469667626"
          type: string
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 0x85ce0aa9628726c60db14526be8a2b823084b1f4c3dcccdc10b0235f23a49e66
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 11135508
          type: integer
        operationID:
          description: Represents the unique internal transaction ID in regards to
            the parent transaction (type trace address).
          example: call_1
          type: string
        operationType:
          description: Defines the call type of the internal transaction.
          example: CALL
          type: string
        parentHash:
          description: Defines the specific hash of the parent transaction.
          example: 0x5d4ea0471b70de09fa3d6a4bc32f703ec44483bffa4d6169fa0a36c6a1dc108a
          type: string
        recipient:
          description: Represents the recipient address with the respective amount.
          example: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2
          type: string
        sender:
          description: Represents the sender address with the respective amount.
          example: 0x7a250d5630b4cf539739df2c5dacb4c659f2488d
          type: string
        timestamp:
          example: 1582202940
          type: integer
      required:
      - amount
      - minedInBlockHash
      - minedInBlockHeight
      - operationID
      - operationType
      - parentHash
      - recipient
      - sender
      - timestamp
      type: object
    ListInternalTransactionsByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListInternalTransactionsByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListInternalTransactionsByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListInternalTransactionsByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListInternalTransactionsByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    DeriveAndSyncNewReceivingAddressesRI:
      properties:
        address:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: tb1qupysufr3palqvz08hk7seglvskkvah9hmt66s7
          type: string
        addressFormat:
          description: Represents the format of the address.
          example: P2WPKH
          type: string
        addressType:
          description: Defines the address type.
          enum:
          - change
          example: change
          type: string
        derivationType:
          description: Represents the derivation type
          enum:
          - account
          - bip32
          example: bip32
          type: string
        index:
          description: Represents the output index. It refers to the UTXO sequence
            in the transaction outputs (vout).
          example: "1"
          type: string
      required:
      - address
      - addressFormat
      - addressType
      - derivationType
      - index
      type: object
    DeriveAndSyncNewReceivingAddressesR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    DeriveAndSyncNewReceivingAddressesE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    DeriveAndSyncNewReceivingAddressesE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      - $ref: '#/components/schemas/InvalidXpub'
      type: object
    DeriveAndSyncNewReceivingAddressesE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    DeriveAndSyncNewChangeAddressesRI:
      properties:
        address:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: tb1q2sy5l2vn4p648g3ttjxegghp6w9nycvdxap4ef
          type: string
        addressFormat:
          description: Represents the format of the address.
          example: P2WPKH
          type: string
        addressType:
          description: Defines the address type.
          enum:
          - change
          example: change
          type: string
        derivationType:
          description: Represents the derivation type.
          enum:
          - account
          - bip32
          example: bip32
          type: string
        index:
          description: Represents the output index. It refers to the UTXO sequence
            in the transaction outputs (vout).
          example: "1"
          type: string
      required:
      - address
      - addressFormat
      - addressType
      - derivationType
      - index
      type: object
    DeriveAndSyncNewChangeAddressesR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    DeriveAndSyncNewChangeAddressesE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    DeriveAndSyncNewChangeAddressesE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      - $ref: '#/components/schemas/InvalidXpub'
      type: object
    DeriveAndSyncNewChangeAddressesE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetFeeRecommendationsRI:
      example:
        standard: "0.000015"
        unit: BTC
        fast: "0.000025"
        slow: "0.000010"
      properties:
        unit:
          description: Currency unit
          example: BTC
          type: string
        fast:
          description: Fast fee per byte calculated from unconfirmed transactions
          example: "0.000025"
          type: string
        slow:
          description: Slow fee per byte calculated from unconfirmed transactions
          example: "0.000010"
          type: string
        standard:
          description: Standard fee per byte calculated from unconfirmed transactions
          example: "0.000015"
          type: string
      required:
      - fast
      - slow
      - standard
      - unit
      type: object
    GetFeeRecommendationsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            standard: "0.000015"
            unit: BTC
            fast: "0.000025"
            slow: "0.000010"
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetFeeRecommendationsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetFeeRecommendationsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetFeeRecommendationsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetFeeRecommendationsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListSyncedAddressesRI:
      properties:
        address:
          description: Represents the address.
          example: 0x9e91eb3a35b96f0f0fe71f3c17fe8d29eb406b16
          type: string
        index:
          description: Represents the index position of the transaction in the specific
            block.
          example: 1
          format: int64
          type: integer
      required:
      - address
      - index
      type: object
    ListSyncedAddressesR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListSyncedAddressesR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListSyncedAddressesE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListSyncedAddressesE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidXpub'
      type: object
    ListSyncedAddressesE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetNextAvailableNonceRI:
      example:
        nextAvailableNonce: 16
      properties:
        nextAvailableNonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          format: int64
          type: integer
      required:
      - nextAvailableNonce
      type: object
    GetNextAvailableNonceR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            nextAvailableNonce: 16
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetNextAvailableNonceR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetNextAvailableNonceE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetNextAvailableNonceE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetNextAvailableNonceE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListUnspentTransactionOutputsByAddressRI:
      properties:
        address:
          description: Represents the address that has unspend funds per which the
            result is returned.
          example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
          type: string
        amount:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        index:
          description: Represents the index position of the transaction in the block.
          example: 1
          type: integer
        isConfirmed:
          description: Represents the state of the transaction whether it is confirmed
            or not confirmed.
          example: true
          type: boolean
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1622466746
          type: integer
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
      required:
      - address
      - amount
      - index
      - isConfirmed
      - timestamp
      - transactionId
      type: object
    ListUnspentTransactionOutputsByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListUnspentTransactionOutputsByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListUnspentTransactionOutputsByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListUnspentTransactionOutputsByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListUnspentTransactionOutputsByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListHDWalletXPubYPubZPubTransactionsRI:
      properties:
        index:
          description: Represents the index position of the transaction in the block.
          example: 1
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 00000000407f119ecb74b44229228910400aaeb9f4e3b9869955b85a53e9b7db
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 1903849
          format: int64
          type: integer
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsRI_senders_inner'
          type: array
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        fee:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsRI_fee'
      required:
      - fee
      - index
      - minedInBlockHash
      - minedInBlockHeight
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionId
      type: object
    ListHDWalletXPubYPubZPubTransactionsR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListHDWalletXPubYPubZPubTransactionsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListHDWalletXPubYPubZPubTransactionsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidXpub'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      - $ref: '#/components/schemas/XpubNotSynced'
      type: object
    ListHDWalletXPubYPubZPubTransactionsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListHDWalletXPubYPubZPubTransactionsE422:
      oneOf:
      - $ref: '#/components/schemas/InvalidRequestBodyStructure'
      - $ref: '#/components/schemas/XpubSyncInProgress'
      type: object
    ListTokensTransfersByTransactionHashRI:
      properties:
        contractAddress:
          description: "Represents the contract address of the token, which controls\
            \ its logic. It is not the address that holds the tokens."
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
        minedInBlockHeight:
          description: Defines the block height in which this transaction was confirmed/mined.
          example: 9841271
          format: int64
          type: integer
        recipientAddress:
          description: Defines the address to which the recipient receives the transferred
            tokens.
          example: 0x9e91eb3a35b96f0f0fe71f3c17fe8d29eb406b16
          type: string
        senderAddress:
          description: Defines the address from which the sender transfers tokens.
          example: 0x9df8a6441e8a3dda75019595d431f9aa0dec475c
          type: string
        tokenDecimals:
          description: "Defines the decimals of the token, i.e. the number of digits\
            \ that come after the decimal coma of the token."
          example: 6
          type: integer
        tokenName:
          description: Defines the token's name as a string.
          example: Tether USD
          type: string
        tokenSymbol:
          description: Defines the token symbol by which the token contract is known.
            It is usually 3-4 characters in length.
          example: BAND
          type: string
        tokenType:
          description: Defines the specific token type.
          example: ERC-20
          type: string
        tokensAmount:
          description: Defines the token amount of the transfer.
          example: "0.0012"
          type: string
        transactionHash:
          description: "Represents the hash of the transaction, which is its unique\
            \ identifier. It represents a cryptographic digital fingerprint made by\
            \ hashing the block header twice through the SHA256 algorithm."
          example: 0x60ba3dded833e61f63b6b6d62afe5c7526c5ca09c6744749f13eef11afde2cb4
          type: string
        transactionTimestamp:
          description: Defines the specific time/date when the transaction was created
            in Unix Timestamp.
          example: 1615818368
          type: integer
        transactionFee:
          $ref: '#/components/schemas/ListTokensTransfersByTransactionHashRI_transactionFee'
      required:
      - contractAddress
      - minedInBlockHeight
      - recipientAddress
      - senderAddress
      - tokenDecimals
      - tokenName
      - tokenSymbol
      - tokenType
      - tokensAmount
      - transactionFee
      - transactionHash
      - transactionTimestamp
      type: object
    ListTokensTransfersByTransactionHashR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListTokensTransfersByTransactionHashR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListTokensTransfersByTransactionHashE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListTokensTransfersByTransactionHashE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListTokensTransfersByTransactionHashE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSB:
      description: Bitcoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 125
          type: integer
        vSize:
          description: Defines the transaction's virtual size.
          example: 166
          type: integer
        version:
          description: Defines the version of the transaction.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSB_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC:
      description: Bitcoin Cash
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSBC_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBC_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSL:
      description: Litecoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 2
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSL_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSD:
      description: Dogecoin
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 266
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 3
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2:
      description: Dash
      properties:
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 196
          type: integer
        version:
          description: Represents the transaction's version number.
          example: 3
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC:
      description: Ethereum Classic
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSEC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0xa9059cbb000000000000000000000000acc59ec2f7119dc7a9e69dcd124cff75caae05bf0000000000000000000000000000000000000000000000000000000000989680
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSE:
      description: Ethereum
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSE_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 13
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC:
      description: Binance Smart Chain
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x0000000000000000000000000000000000001000
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSBSC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 25341
          type: integer
        transactionStatus:
          description: String representation of the transaction status
          example: 0x1
          type: string
      required:
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ:
      description: Zcash
      properties:
        bindingSig:
          description: "It is used to enforce balance of Spend and Output transfers,\
            \ in order to prevent their replay across transactions."
          example: 603624b3e78e0de0415dea320797a107076a9f7aabd39f44bc4957803330e9891cb33744ac2ec749c2d2d341f29467c49c0ae35bf34765e2fb7c4cda68584804
          type: string
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        joinSplitPubKey:
          description: Represents an encoding of a JoinSplitSig public validating
            key.
          example: 5d2673b4c727241410e42f214a39218e4f13354d77db8ec31243a7be7ed8e2b7
          type: string
        joinSplitSig:
          description: Is used to sign transactions that contain at least one JoinSplit
            description.
          example: 8b06b926d619ead780b0769e5997ded93f9851fd0efd4b667afc5bcc2792b26cd4a565b4efa7733535fdc09fa566ca59042785d7fd8043d37fdf9e144465080a
          type: string
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 234
          type: integer
        vJoinSplit:
          description: Represents a sequence of JoinSplit descriptions using BCTV14
            proofs.
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSZ_vJoinSplit_inner'
          type: array
        vShieldedOutput:
          description: Object Array representation of transaction output descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedOutput_inner'
          type: array
        vShieldedSpend:
          description: Object Array representation of transaction spend descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner'
          type: array
        valueBalance:
          description: Defines the transaction value balance.
          example: "0"
          type: string
        version:
          description: Defines the version of the transaction.
          example: 1
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID.
          example: 0x892f2085
          type: string
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSZ_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vout_inner'
          type: array
      required:
      - bindingSig
      - expiryHeight
      - joinSplitPubKey
      - joinSplitSig
      - locktime
      - overwintered
      - size
      - vJoinSplit
      - vShieldedOutput
      - vShieldedSpend
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRI:
      properties:
        index:
          description: Represents the index position of the transaction in the block.
          example: 1
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 00000000407f119ecb74b44229228910400aaeb9f4e3b9869955b85a53e9b7db
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 1903849
          type: integer
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI_senders_inner'
          type: array
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1582202940
          type: integer
        transactionHash:
          description: "Represents the same as `transactionId` for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId`\
            \ for SegWit transactions."
          example: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        fee:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRI_fee'
        blockchainSpecific:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBS'
      required:
      - blockchainSpecific
      - fee
      - index
      - recipients
      - senders
      - timestamp
      - transactionHash
      - transactionId
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeRIBS:
      oneOf:
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSB'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSBC'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSL'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSD'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSD2'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSEC'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSE'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSBSC'
      - $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRIBSZ'
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListConfirmedTokensTransfersByAddressAndTimeRangeRI:
      properties:
        contractAddress:
          description: "Represents the contract address of the token, which controls\
            \ its logic. It is not the address that holds the tokens."
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        minedInBlockHeight:
          description: Defines the block height in which this transaction was confirmed/mined.
          example: 12046964
          format: int64
          type: integer
        recipientAddress:
          description: Defines the address to which the recipient receives the transferred
            tokens.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        senderAddress:
          description: Defines the address from which the sender transfers tokens.
          example: 0x65b895f400dae5541d70cbbec07527210158f6e2
          type: string
        tokenDecimals:
          description: "Defines the decimals of the token, i.e. the number of digits\
            \ that come after the decimal coma of the token."
          example: 6
          type: integer
        tokenId:
          description: Represents the unique token identifier.
          example: "16721"
          type: string
        tokenName:
          description: Defines the token's name as a string.
          example: Tether USD
          type: string
        tokenSymbol:
          description: Defines the token symbol by which the token contract is known.
            It is usually 3-4 characters in length.
          example: USDT
          type: string
        tokenType:
          description: Defines the specific token type.
          example: ERC-20
          type: string
        tokensAmount:
          description: Defines the token amount of the transfer.
          example: "9.146383"
          type: string
        transactionHash:
          description: "Represents the hash of the transaction, which is its unique\
            \ identifier. It represents a cryptographic digital fingerprint made by\
            \ hashing the block header twice through the SHA256 algorithm."
          example: 0x32de09d747bcbed41e8162681a72b2a6c760cf2116ce372fcd357c260909838a
          type: string
        transactionTimestamp:
          description: Defines the specific time/date when the transaction was created
            in Unix Timestamp.
          example: 1615861410
          type: integer
      required:
      - contractAddress
      - minedInBlockHeight
      - recipientAddress
      - senderAddress
      - tokenDecimals
      - tokenName
      - tokenSymbol
      - tokenType
      - transactionHash
      - transactionTimestamp
      type: object
    ListConfirmedTokensTransfersByAddressAndTimeRangeR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressAndTimeRangeR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListConfirmedTokensTransfersByAddressAndTimeRangeE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListConfirmedTokensTransfersByAddressAndTimeRangeE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListConfirmedTokensTransfersByAddressAndTimeRangeE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListInternalTransactionsByAddressAndTimeRangeRI:
      properties:
        amount:
          description: Defines the specific amount of the transaction.
          example: "0.089286906469667626"
          type: string
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 0x85ce0aa9628726c60db14526be8a2b823084b1f4c3dcccdc10b0235f23a49e66
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 11135508
          type: integer
        operationID:
          description: Represents the unique internal transaction ID in regards to
            the parent transaction (type trace address).
          example: call_1
          type: string
        operationType:
          description: Defines the call type of the internal transaction.
          example: CALL
          type: string
        parentHash:
          description: Defines the specific hash of the parent transaction.
          example: 0x5d4ea0471b70de09fa3d6a4bc32f703ec44483bffa4d6169fa0a36c6a1dc108a
          type: string
        recipient:
          description: Represents the recipient address with the respective amount.
          example: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2
          type: string
        sender:
          description: Represents the sender address with the respective amount.
          example: 0x7a250d5630b4cf539739df2c5dacb4c659f2488d
          type: string
        timestamp:
          example: 1582202940
          type: integer
      required:
      - amount
      - minedInBlockHash
      - minedInBlockHeight
      - operationID
      - operationType
      - parentHash
      - recipient
      - sender
      - timestamp
      type: object
    ListInternalTransactionsByAddressAndTimeRangeR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListInternalTransactionsByAddressAndTimeRangeR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListInternalTransactionsByAddressAndTimeRangeE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListInternalTransactionsByAddressAndTimeRangeE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListInternalTransactionsByAddressAndTimeRangeE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListConfirmedTokensTransfersByAddressRI:
      properties:
        contractAddress:
          description: "Represents the contract address of the token, which controls\
            \ its logic. It is not the address that holds the tokens."
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        minedInBlockHeight:
          description: Defines the block height in which this transaction was confirmed/mined.
          example: 12046964
          format: int64
          type: integer
        recipientAddress:
          description: Defines the address to which the recipient receives the transferred
            tokens.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        senderAddress:
          description: Defines the address from which the sender transfers tokens.
          example: 0x65b895f400dae5541d70cbbec07527210158f6e2
          type: string
        tokenDecimals:
          description: "Defines the decimals of the token, i.e. the number of digits\
            \ that come after the decimal coma of the token."
          example: 6
          type: integer
        tokenId:
          description: Represents the unique token identifier.
          example: "16721"
          type: string
        tokenName:
          description: Defines the token's name as a string.
          example: Tether USD
          type: string
        tokenSymbol:
          description: Defines the token symbol by which the token contract is known.
            It is usually 3-4 characters in length.
          example: USDT
          type: string
        tokenType:
          description: Defines the specific token type.
          example: ERC-20
          type: string
        tokensAmount:
          description: Defines the token amount of the transfer.
          example: "9.146383"
          type: string
        transactionHash:
          description: "Represents the hash of the transaction, which is its unique\
            \ identifier. It represents a cryptographic digital fingerprint made by\
            \ hashing the block header twice through the SHA256 algorithm."
          example: 0x32de09d747bcbed41e8162681a72b2a6c760cf2116ce372fcd357c260909838a
          type: string
        transactionTimestamp:
          description: Defines the specific time/date when the transaction was created
            in Unix Timestamp.
          example: 1615861410
          type: integer
        transactionFee:
          $ref: '#/components/schemas/ListTokensTransfersByTransactionHashRI_transactionFee'
      required:
      - contractAddress
      - minedInBlockHeight
      - recipientAddress
      - senderAddress
      - tokenDecimals
      - tokenName
      - tokenSymbol
      - tokenType
      - transactionFee
      - transactionHash
      - transactionTimestamp
      type: object
    ListConfirmedTokensTransfersByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListConfirmedTokensTransfersByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListConfirmedTokensTransfersByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListConfirmedTokensTransfersByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListHDWalletXPubYPubZPubUTXOsRI:
      properties:
        address:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
          type: string
        addressPath:
          description: Defines a data which tells a Hierarchical Deterministic wallet
            how to derive a specific key within a tree of keys.
          example: m/0/5
          type: string
        amount:
          description: Represents the UTXO amount value.
          example: "0.0005"
          type: string
        derivation:
          description: "The way how the HD walled derives, for example when the type\
            \ is ACCOUNT, it derives change and receive addresses while when the type\
            \ is BIP32 it derives directly."
          example: ACCOUNT
          type: string
        index:
          description: Represents the output index. It refers to the UTXO sequence
            in the transaction outputs (vout).
          example: 1
          type: integer
        isAvailable:
          description: Represents if the UTXO has been used from another unconfirmed
            transaction. If it is - the value will be "false".
          example: true
          type: boolean
        isConfirmed:
          description: Represents the state of the transaction whether it is confirmed
            or not confirmed.
          example: true
          type: boolean
        referenceId:
          description: Represents the reference id of the record. It may be used for
            the startingAfter pagination attribute.
          example: 5b1ea92e584bf50020130615
          type: string
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be transactionId in UTXO-based protocols like Bitcoin, and transaction\
            \ hash in Ethereum blockchain."
          example: 06af8234602b97f497496039a6eb99810db1287ce8aa3c501894dcd03bd4e544
          type: string
      required:
      - address
      - addressPath
      - amount
      - derivation
      - index
      - isAvailable
      - isConfirmed
      - referenceId
      - transactionId
      type: object
    ListHDWalletXPubYPubZPubUTXOsR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubUTXOsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListHDWalletXPubYPubZPubUTXOsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListHDWalletXPubYPubZPubUTXOsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/XpubNotSynced'
      - $ref: '#/components/schemas/InvalidXpub'
      type: object
    ListHDWalletXPubYPubZPubUTXOsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListHDWalletXPubYPubZPubUTXOsE422:
      oneOf:
      - $ref: '#/components/schemas/InvalidRequestBodyStructure'
      - $ref: '#/components/schemas/XpubSyncInProgress'
      type: object
    GetRawTransactionDataRI:
      example:
        transactionHex: 01000000000101f8cb1cd1892d31aaafa35a92128b3a11469e675261c83a30be5b25ae8c97eeca0100000017160014daaf6d5cb86befe42df851a4d1df052e663754c1ffffffff02403800000000000017a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15879cd90c000000000017a91475eb14fa1dc2c72637df3c58bc22d925ca0753af8702483045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901210287e995526aa6ccb96141bb598fc7f73323279e026c55039d15f0cfbda5dea84100000000
      properties:
        transactionHex:
          description: Represents the raw transaction data in hexadecimal format.
          example: 01000000000101f8cb1cd1892d31aaafa35a92128b3a11469e675261c83a30be5b25ae8c97eeca0100000017160014daaf6d5cb86befe42df851a4d1df052e663754c1ffffffff02403800000000000017a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15879cd90c000000000017a91475eb14fa1dc2c72637df3c58bc22d925ca0753af8702483045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901210287e995526aa6ccb96141bb598fc7f73323279e026c55039d15f0cfbda5dea84100000000
          type: string
      required:
      - transactionHex
      type: object
    GetRawTransactionDataR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            transactionHex: 01000000000101f8cb1cd1892d31aaafa35a92128b3a11469e675261c83a30be5b25ae8c97eeca0100000017160014daaf6d5cb86befe42df851a4d1df052e663754c1ffffffff02403800000000000017a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15879cd90c000000000017a91475eb14fa1dc2c72637df3c58bc22d925ca0753af8702483045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901210287e995526aa6ccb96141bb598fc7f73323279e026c55039d15f0cfbda5dea84100000000
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetRawTransactionDataR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetRawTransactionDataE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetRawTransactionDataE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetRawTransactionDataE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListUnconfirmedTokensTransfersByAddressRI:
      properties:
        contractAddress:
          description: "Represents the contract address of the token, which controls\
            \ its logic. It is not the address that holds the tokens."
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        recipientAddress:
          description: Defines the address to which the recipient receives the transferred
            tokens.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        senderAddress:
          description: Defines the address from which the sender transfers tokens.
          example: 0x65b895f400dae5541d70cbbec07527210158f6e2
          type: string
        tokenDecimals:
          description: "Defines the decimals of the token, i.e. the number of digits\
            \ that come after the decimal coma of the token."
          example: 6
          type: integer
        tokenId:
          description: Represents the unique token identifier.
          example: "16721"
          type: string
        tokenName:
          description: Defines the token's name as a string.
          example: Tether USD
          type: string
        tokenSymbol:
          description: Defines the token symbol by which the token contract is known.
            It is usually 3-4 characters in length.
          example: USDT
          type: string
        tokenType:
          description: Defines the specific token type.
          example: ERC-20
          type: string
        tokensAmount:
          description: Defines the token amount of the transfer.
          example: "9.146383"
          type: string
        transactionHash:
          description: "Represents the hash of the transaction, which is its unique\
            \ identifier. It represents a cryptographic digital fingerprint made by\
            \ hashing the block header twice through the SHA256 algorithm."
          example: 0x32de09d747bcbed41e8162681a72b2a6c760cf2116ce372fcd357c260909838a
          type: string
        transactionTimestamp:
          description: Defines the specific time/date when the transaction was created
            in Unix Timestamp.
          example: 1615861410
          type: integer
      required:
      - contractAddress
      - recipientAddress
      - senderAddress
      - tokenDecimals
      - tokenName
      - tokenSymbol
      - tokenType
      - transactionHash
      - transactionTimestamp
      type: object
    ListUnconfirmedTokensTransfersByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListUnconfirmedTokensTransfersByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListUnconfirmedTokensTransfersByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListUnconfirmedTokensTransfersByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListUnconfirmedTokensTransfersByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListTokensByAddressRI:
      properties:
        confirmedBalance:
          description: Defines the token balance that has been confirmed.
          example: "287090.926632"
          type: string
        contractAddress:
          description: "Represents the contract address of the token, which controls\
            \ its logic. It is not the address that holds the tokens."
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        name:
          description: Defines the token's name as a string.
          example: Tether USD
          type: string
        symbol:
          description: Defines the token symbol by which the token contract is known.
            It is usually 3-4 characters in length.
          example: USDT
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-20
          type: string
      required:
      - confirmedBalance
      - contractAddress
      - name
      - symbol
      - type
      type: object
    ListTokensByAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListTokensByAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListTokensByAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListTokensByAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListTokensByAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    EstimateTransactionSmartFeeRI:
      example:
        unit: BTC
        confirmationTarget: 2
        feeRate: "0.00001"
      properties:
        confirmationTarget:
          description: Represents the confirmation target in blocks
          example: 2
          type: integer
        feeRate:
          description: Represents the Fee Rate value.
          example: "0.00001"
          type: string
        unit:
          description: Defines the fee unit.
          example: BTC
          type: string
      required:
      - confirmationTarget
      - feeRate
      - unit
      type: object
    EstimateTransactionSmartFeeR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            unit: BTC
            confirmationTarget: 2
            feeRate: "0.00001"
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/EstimateTransactionSmartFeeR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    EstimateTransactionSmartFeeE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    EstimateTransactionSmartFeeE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    EstimateTransactionSmartFeeE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    Unimplemented:
      description: unimplemented
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: unimplemented
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "This {feature} has not been implemented yet."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubRI:
      example:
        feePerByte: "0.00000014"
        locktime: 1781965
        size: 243
        fee: "0.0000279"
        replaceable: false
        vin:
        - outputIndex: 1
          address: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
          derivationIndex: 1
          change: 0
          sighash: 90cfeef03b2755586b8e81668d8009b16b34d48abf2968729892279222e8d893
          script: 00143bb907c4cd6457aeda7b84c2d7cb79e79a8b9632
          transactionId: ff59ac56616ece7498e62c7f9f957cfdd50f6f2a74402058154e3022e7617bf2
          satoshis: 10000
        - outputIndex: 1
          address: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
          derivationIndex: 1
          change: 0
          sighash: 90cfeef03b2755586b8e81668d8009b16b34d48abf2968729892279222e8d893
          script: 00143bb907c4cd6457aeda7b84c2d7cb79e79a8b9632
          transactionId: ff59ac56616ece7498e62c7f9f957cfdd50f6f2a74402058154e3022e7617bf2
          satoshis: 10000
        additionalData: yourAdditionalDataHere
        vout:
        - address: tb1qvx3fynjuctk475vgecetfck005fxh699mflshv
          script: 0014a3f1019940ce572681c43fd836db97036a85bc8f
          satoshis: 3094
        - address: tb1qvx3fynjuctk475vgecetfck005fxh699mflshv
          script: 0014a3f1019940ce572681c43fd836db97036a85bc8f
          satoshis: 3094
      properties:
        additionalData:
          description: Representation of the additional data
          example: yourAdditionalDataHere
          type: string
        fee:
          description: When isConfirmed is True - Defines the amount of the transaction
            fee When isConfirmed is False - For ETH-based blockchains this attribute
            represents the max fee value.
          example: "0.0000279"
          type: string
        feePerByte:
          description: Defines the fee per byte value
          example: "0.00000014"
          type: string
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        replaceable:
          description: Representation of whether the transaction is replaceable
          example: false
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 243
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRI_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRI_vout_inner'
          type: array
      required:
      - fee
      - locktime
      - replaceable
      - size
      - vin
      - vout
      type: object
    PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            feePerByte: "0.00000014"
            locktime: 1781965
            size: 243
            fee: "0.0000279"
            replaceable: false
            vin:
            - outputIndex: 1
              address: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
              derivationIndex: 1
              change: 0
              sighash: 90cfeef03b2755586b8e81668d8009b16b34d48abf2968729892279222e8d893
              script: 00143bb907c4cd6457aeda7b84c2d7cb79e79a8b9632
              transactionId: ff59ac56616ece7498e62c7f9f957cfdd50f6f2a74402058154e3022e7617bf2
              satoshis: 10000
            - outputIndex: 1
              address: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
              derivationIndex: 1
              change: 0
              sighash: 90cfeef03b2755586b8e81668d8009b16b34d48abf2968729892279222e8d893
              script: 00143bb907c4cd6457aeda7b84c2d7cb79e79a8b9632
              transactionId: ff59ac56616ece7498e62c7f9f957cfdd50f6f2a74402058154e3022e7617bf2
              satoshis: 10000
            additionalData: yourAdditionalDataHere
            vout:
            - address: tb1qvx3fynjuctk475vgecetfck005fxh699mflshv
              script: 0014a3f1019940ce572681c43fd836db97036a85bc8f
              satoshis: 3094
            - address: tb1qvx3fynjuctk475vgecetfck005fxh699mflshv
              script: 0014a3f1019940ce572681c43fd836db97036a85bc8f
              satoshis: 3094
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetTokenDetailsByContractAddressRI:
      example:
        tokenSymbol: BAND
        tokenDecimals: "18"
        totalSupply: "1000000"
        tokenName: Band Protocol
        tokenType: ERC-20
      properties:
        tokenDecimals:
          description: Defines the number of decimals that the token possesses.
          example: "18"
          type: string
        tokenName:
          description: Specifies the token's name.
          example: Band Protocol
          type: string
        tokenSymbol:
          description: Defines the unique symbol of the token.
          example: BAND
          type: string
        tokenType:
          description: Defines the type of the token.
          example: ERC-20
          type: string
        totalSupply:
          description: Defines the total number of tokens created that exist on the
            market minus the ones that have been burned.
          example: "1000000"
          type: string
      required:
      - tokenDecimals
      - tokenType
      - totalSupply
      type: object
    GetTokenDetailsByContractAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            tokenSymbol: BAND
            tokenDecimals: "18"
            totalSupply: "1000000"
            tokenName: Band Protocol
            tokenType: ERC-20
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetTokenDetailsByContractAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetTokenDetailsByContractAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetTokenDetailsByContractAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetTokenDetailsByContractAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubRI:
      example:
        transactionType: legacy-transaction
        amount: "30000000000000"
        derivationIndex: 0
        dataHex: 0x0079006f00750072004100640064006900740069006f006e0061006c00440061007400610048006500720065
        sender: 0x03654A9E78771442CAdf8DB37ae60D6a12bAEa9f
        fee:
          gasLimit: "552020"
          maxPriorityFeePerGas: "2000000000"
          maxFeePerGas: "2000000008"
          gasPrice: "2500000007"
        recipient: 0x041c594a0cc194e826bef5411b29c7f27001b7e3
        sigHash: 40738814e379fd2b1923729c87ac80dddc6810a3f8f02fef05452251972ec83a
        nonce: "0"
      properties:
        amount:
          description: Representation of the amount of the transaction
          example: "30000000000000"
          type: string
        dataHex:
          description: Representation of the data in hex value
          example: 0x0079006f00750072004100640064006900740069006f006e0061006c00440061007400610048006500720065
          type: string
        derivationIndex:
          description: Representation of the derivation index of the xpub address
          example: 0
          format: int64
          type: integer
        fee:
          $ref: '#/components/schemas/PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubRI_fee'
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: "0"
          type: string
        recipient:
          description: Represents a recipient addresses. In account-based protocols
            like Ethereum there is only one address in this list.
          example: 0x041c594a0cc194e826bef5411b29c7f27001b7e3
          type: string
        sender:
          description: Represents a sender address. In account-based protocols like
            Ethereum there is only one address in this list.
          example: 0x03654A9E78771442CAdf8DB37ae60D6a12bAEa9f
          type: string
        sigHash:
          description: Representation of the hash that should be signed.
          example: 40738814e379fd2b1923729c87ac80dddc6810a3f8f02fef05452251972ec83a
          type: string
        transactionType:
          description: Representation of the transaction type
          enum:
          - legacy-transaction
          type: string
      required:
      - amount
      - dataHex
      - derivationIndex
      - fee
      - nonce
      - recipient
      - sender
      - sigHash
      - transactionType
      type: object
    PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            transactionType: legacy-transaction
            amount: "30000000000000"
            derivationIndex: 0
            dataHex: 0x0079006f00750072004100640064006900740069006f006e0061006c00440061007400610048006500720065
            sender: 0x03654A9E78771442CAdf8DB37ae60D6a12bAEa9f
            fee:
              gasLimit: "552020"
              maxPriorityFeePerGas: "2000000000"
              maxFeePerGas: "2000000008"
              gasPrice: "2500000007"
            recipient: 0x041c594a0cc194e826bef5411b29c7f27001b7e3
            sigHash: 40738814e379fd2b1923729c87ac80dddc6810a3f8f02fef05452251972ec83a
            nonce: "0"
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetHDWalletXPubYPubZPubAssetsRI:
      example:
        fungibleTokens:
        - identifier: 0x101848d5c5bbca18e6b4431eedf6b95e9adf82fa
          symbol: WEENUS
          amount: "0.100000000000000000"
          type: ERC-20
        - identifier: 0x101848d5c5bbca18e6b4431eedf6b95e9adf82fa
          symbol: WEENUS
          amount: "0.100000000000000000"
          type: ERC-20
        confirmedBalance:
          amount: "0.008516447598774679"
          unit: ETH
        nonFungibleTokens:
        - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          symbol: GA
          tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
          type: ERC-721
        - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          symbol: GA
          tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
          type: ERC-721
      properties:
        fungibleTokens:
          description: Represents fungible tokens'es detailed information
          items:
            $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsRI_fungibleTokens_inner'
          type: array
        nonFungibleTokens:
          description: Represents non-fungible tokens'es detailed information.
          items:
            $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsRI_nonFungibleTokens_inner'
          type: array
        confirmedBalance:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsRI_confirmedBalance'
      required:
      - confirmedBalance
      type: object
    GetHDWalletXPubYPubZPubAssetsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            fungibleTokens:
            - identifier: 0x101848d5c5bbca18e6b4431eedf6b95e9adf82fa
              symbol: WEENUS
              amount: "0.100000000000000000"
              type: ERC-20
            - identifier: 0x101848d5c5bbca18e6b4431eedf6b95e9adf82fa
              symbol: WEENUS
              amount: "0.100000000000000000"
              type: ERC-20
            confirmedBalance:
              amount: "0.008516447598774679"
              unit: ETH
            nonFungibleTokens:
            - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
              symbol: GA
              tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
              type: ERC-721
            - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
              symbol: GA
              tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
              type: ERC-721
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetHDWalletXPubYPubZPubAssetsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetHDWalletXPubYPubZPubAssetsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidXpub'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      - $ref: '#/components/schemas/XpubNotSynced'
      type: object
    GetHDWalletXPubYPubZPubAssetsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetHDWalletXPubYPubZPubAssetsE422:
      oneOf:
      - $ref: '#/components/schemas/InvalidRequestBodyStructure'
      - $ref: '#/components/schemas/XpubSyncInProgress'
      type: object
    GetHDWalletXPubYPubZPubDetailsRI:
      example:
        confirmedBalance: "0.0021"
        totalSpent: "0.0001"
        totalReceived: "0.0002"
      properties:
        confirmedBalance:
          description: Specifies the confirmed coins balance of the Wallet.
          example: "0.0021"
          type: string
        totalReceived:
          description: Defines the total currency received to the Wallet.
          example: "0.0002"
          type: string
        totalSpent:
          description: Defines the total currency spent from the Wallet.
          example: "0.0001"
          type: string
      required:
      - confirmedBalance
      type: object
    GetHDWalletXPubYPubZPubDetailsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmedBalance: "0.0021"
            totalSpent: "0.0001"
            totalReceived: "0.0002"
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubDetailsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetHDWalletXPubYPubZPubDetailsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetHDWalletXPubYPubZPubDetailsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidXpub'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      - $ref: '#/components/schemas/XpubNotSynced'
      type: object
    GetHDWalletXPubYPubZPubDetailsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetHDWalletXPubYPubZPubDetailsE422:
      oneOf:
      - $ref: '#/components/schemas/InvalidRequestBodyStructure'
      - $ref: '#/components/schemas/XpubSyncInProgress'
      type: object
    DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesRI:
      example:
        addresses:
        - address: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
          index: 1
        - address: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
          index: 1
      properties:
        addresses:
          description: Represents the address details.
          items:
            $ref: '#/components/schemas/DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesRI_addresses_inner'
          type: array
      required:
      - addresses
      type: object
    DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            addresses:
            - address: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
              index: 1
            - address: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
              index: 1
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      type: object
    DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    NewUnconfirmedCoinsTransactionsRI:
      example:
        address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
        isActive: true
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - address
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    NewUnconfirmedCoinsTransactionsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
            isActive: true
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewUnconfirmedCoinsTransactionsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewUnconfirmedCoinsTransactionsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewUnconfirmedCoinsTransactionsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewUnconfirmedCoinsTransactionsE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    BlockchainEventsCallbacksLimitReached:
      description: blockchain_events_callbacks_limit_reached
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: blockchain_events_callbacks_limit_reached
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "You have reached the maximum number of active Blockchain Events\
            \ subscriptions which is {callbacks_limit} now. Please upgrade your plan\
            \ to be get higher number of active subscriptions."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    NewUnconfirmedTokensTransactionsRI:
      example:
        address: 0x65b895f400dae5541d70cbbec07527210158f6e2
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: ADDRESS_TOKENS_TRANSACTION_UNCONFIRMED
        isActive: true
        referenceId: c748624f-1843-4738-a7de-8258ada0f524
      properties:
        address:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: 0x65b895f400dae5541d70cbbec07527210158f6e2
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_TOKENS_TRANSACTION_UNCONFIRMED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: c748624f-1843-4738-a7de-8258ada0f524
          type: string
      required:
      - address
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    NewUnconfirmedTokensTransactionsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            address: 0x65b895f400dae5541d70cbbec07527210158f6e2
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: ADDRESS_TOKENS_TRANSACTION_UNCONFIRMED
            isActive: true
            referenceId: c748624f-1843-4738-a7de-8258ada0f524
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewUnconfirmedTokensTransactionsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewUnconfirmedTokensTransactionsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewUnconfirmedTokensTransactionsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewUnconfirmedTokensTransactionsE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewConfirmedCoinsTransactionsRI:
      example:
        address: mfo7jkvcoSNxpRBM7XfcseZGQf9PmmU8TZ
        createdTimestamp: 1236238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        receiveCallbackOn: 3
        eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED
        isActive: true
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: mfo7jkvcoSNxpRBM7XfcseZGQf9PmmU8TZ
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs 2.0. For\
            \ more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1236238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_COINS_TRANSACTION_CONFIRMED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        receiveCallbackOn:
          description: "Represents the exact confirmation, on which the user wants\
            \ to receive callback."
          example: 3
          type: integer
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - address
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - receiveCallbackOn
      - referenceId
      type: object
    NewConfirmedCoinsTransactionsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            address: mfo7jkvcoSNxpRBM7XfcseZGQf9PmmU8TZ
            createdTimestamp: 1236238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            receiveCallbackOn: 3
            eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED
            isActive: true
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedCoinsTransactionsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedCoinsTransactionsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedCoinsTransactionsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedCoinsTransactionsE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewConfirmedTokensTransactionsRI:
      example:
        address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        receiveCallbackOn: 3
        eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
        isActive: true
        referenceId: c748624f-1843-4738-a7de-8258ada0f524
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        receiveCallbackOn:
          description: "Represents the exact confirmation, on which the user wants\
            \ to receive callback."
          example: 3
          type: integer
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: c748624f-1843-4738-a7de-8258ada0f524
          type: string
      required:
      - address
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - receiveCallbackOn
      - referenceId
      type: object
    NewConfirmedTokensTransactionsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            receiveCallbackOn: 3
            eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
            isActive: true
            referenceId: c748624f-1843-4738-a7de-8258ada0f524
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedTokensTransactionsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedTokensTransactionsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedTokensTransactionsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedTokensTransactionsE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationRI:
      example:
        confirmationsCount: 3
        address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
        createdTimestamp: 1236238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
        isActive: true
        referenceId: c748624f-1843-4738-a7de-8258ada0f524
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1236238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: c748624f-1843-4738-a7de-8258ada0f524
          type: string
      required:
      - address
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 3
            address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
            createdTimestamp: 1236238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
            isActive: true
            referenceId: c748624f-1843-4738-a7de-8258ada0f524
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationRI:
      example:
        confirmationsCount: 3
        address: 15XyNC88pujwuuur8DCsXBCfEhJJMzHayU
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
        isActive: true
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: 15XyNC88pujwuuur8DCsXBCfEhJJMzHayU
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - address
      - callbackSecretKey
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 3
            address: 15XyNC88pujwuuur8DCsXBCfEhJJMzHayU
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
            isActive: true
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    MinedTransactionRI:
      example:
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: TRANSACTION_MINED
        isActive: true
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        transactionId: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: TRANSACTION_MINED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
        transactionId:
          description: Represents the unique identification string that defines the
            transaction.
          example: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
          type: string
      required:
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      - transactionId
      type: object
    MinedTransactionR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: TRANSACTION_MINED
            isActive: true
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
            transactionId: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/MinedTransactionR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    MinedTransactionE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    MinedTransactionE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    MinedTransactionE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    MinedTransactionE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewBlockRI:
      example:
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://yourURL.com
        isActive: true
        referenceId: 4c530a43-5602-41d9-bc69-156a0372f9aa
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://yourURL.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 4c530a43-5602-41d9-bc69-156a0372f9aa
          type: string
      required:
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - isActive
      - referenceId
      type: object
    NewBlockR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://yourURL.com
            isActive: true
            referenceId: 4c530a43-5602-41d9-bc69-156a0372f9aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewBlockR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewBlockE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewBlockE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewBlockE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewBlockE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    BlockHeightReachedRI:
      example:
        blockHeightReached: 667900
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        isActive: true
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        blockHeightReached:
          description: Represents the specified value of block height for which the
            callback will be received.
          example: 667900
          format: int64
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. We support ONLY httpS type of protocol.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - blockHeightReached
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - isActive
      - referenceId
      type: object
    BlockHeightReachedR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            blockHeightReached: 667900
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            isActive: true
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/BlockHeightReachedR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    BlockHeightReachedE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    BlockHeightReachedE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    BlockHeightReachedE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    BlockHeightReachedE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    ListBlockchainEventsSubscriptionsRI:
      properties:
        address:
          description: Represents the address of the transaction.
          example: tb1qtm44m6xmuasy4sc7nl7thvuxcerau2dfvkkgsc
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 5
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1966238648
          type: integer
        deactivationReasons:
          description: "Represents the deactivation reason details, available when\
            \ a blockchain event subscription has status isActive - false."
          items:
            $ref: '#/components/schemas/ListBlockchainEventsSubscriptionsRI_deactivationReasons_inner'
          type: array
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: BLOCK_MINED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
        transactionId:
          description: Represents the unique identification string that defines the
            transaction.
          example: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
          type: string
      required:
      - address
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    ListBlockchainEventsSubscriptionsR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListBlockchainEventsSubscriptionsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListBlockchainEventsSubscriptionsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListBlockchainEventsSubscriptionsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListBlockchainEventsSubscriptionsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetBlockchainEventSubscriptionDetailsByReferenceIDRI:
      example:
        confirmationsCount: 5
        address: tb1qtm44m6xmuasy4sc7nl7thvuxcerau2dfvkkgsc
        blockchain: bitcoin
        deactivationReasons:
        - reason: maximum_retry_attempts_reached
          timestamp: 1642102581
        - reason: maximum_retry_attempts_reached
          timestamp: 1642102581
        createdTimestamp: 1966238648
        callbackSecretKey: yourSecretKey
        callbackUrl: http://example.com
        eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED
        isActive: false
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        transactionId: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
        network: testnet
      properties:
        address:
          description: Represents the address of the transaction.
          example: tb1qtm44m6xmuasy4sc7nl7thvuxcerau2dfvkkgsc
          type: string
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs.
          example: http://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 5
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1966238648
          type: integer
        deactivationReasons:
          description: "Represents the deactivation reason details, available when\
            \ a blockchain event subscription has status isActive - false."
          items:
            $ref: '#/components/schemas/ListBlockchainEventsSubscriptionsRI_deactivationReasons_inner'
          type: array
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_COINS_TRANSACTION_CONFIRMED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: false
          type: boolean
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          example: testnet
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
        transactionId:
          description: Represents the unique identification string that defines the
            transaction.
          example: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
          type: string
      required:
      - blockchain
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - network
      - referenceId
      type: object
    GetBlockchainEventSubscriptionDetailsByReferenceIDR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 5
            address: tb1qtm44m6xmuasy4sc7nl7thvuxcerau2dfvkkgsc
            blockchain: bitcoin
            deactivationReasons:
            - reason: maximum_retry_attempts_reached
              timestamp: 1642102581
            - reason: maximum_retry_attempts_reached
              timestamp: 1642102581
            createdTimestamp: 1966238648
            callbackSecretKey: yourSecretKey
            callbackUrl: http://example.com
            eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED
            isActive: false
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
            transactionId: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
            network: testnet
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetBlockchainEventSubscriptionDetailsByReferenceIDR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetBlockchainEventSubscriptionDetailsByReferenceIDE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetBlockchainEventSubscriptionDetailsByReferenceIDE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetBlockchainEventSubscriptionDetailsByReferenceIDE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ActivateBlockchainEventSubscriptionRI:
      example:
        confirmationsCount: 2
        address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
        blockchain: bitcoin
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
        isActive: true
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
        network: testnet
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our Documentation."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 2
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          example: testnet
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
        transactionId:
          description: Represents the unique identification string that defines the
            transaction.
          example: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          type: string
      required:
      - address
      - blockchain
      - callbackSecretKey
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - eventType
      - isActive
      - network
      - referenceId
      - transactionId
      type: object
    ActivateBlockchainEventSubscriptionR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 2
            address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
            blockchain: bitcoin
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
            isActive: true
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
            transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
            network: testnet
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ActivateBlockchainEventSubscriptionR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ActivateBlockchainEventSubscriptionE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ActivateBlockchainEventSubscriptionE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ActivateBlockchainEventSubscriptionE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    DeleteBlockchainEventSubscriptionRI:
      example:
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
        referenceId: 6de9a6ae-1463-458c-81a5-16d68d108012
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 6de9a6ae-1463-458c-81a5-16d68d108012
          type: string
      required:
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - eventType
      - referenceId
      type: object
    DeleteBlockchainEventSubscriptionR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
            referenceId: 6de9a6ae-1463-458c-81a5-16d68d108012
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DeleteBlockchainEventSubscriptionR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    DeleteBlockchainEventSubscriptionE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    DeleteBlockchainEventSubscriptionE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    DeleteBlockchainEventSubscriptionE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetAddressDetailsFromCallbackRI:
      example:
        confirmedBalance:
          amount: "12.5"
          unit: unit
        sequence: 25648975
        incomingTransactionsCount: 7
        totalSpent:
          amount: "5.2"
          unit: unit
        totalReceived:
          amount: "5.6"
          unit: unit
        outgoingTransactionsCount: 5
        transactionsCount: 12
      properties:
        incomingTransactionsCount:
          description: Defines the received transaction count to the address.
          example: 7
          type: integer
        outgoingTransactionsCount:
          description: Defines the sent transaction count from the address.
          example: 5
          type: integer
        transactionsCount:
          description: "Represents the total number of confirmed coins transactions\
            \ for this address, both incoming and outgoing. Applies for coins only\
            \ and not tokens transfers e.g. for Ethereum. transactionsCount could\
            \ result as less than incoming and outgoing transactions put together\
            \ (e.g. in Bitcoin), due to the fact that one and the same address could\
            \ be in senders and receivers addresses."
          example: 12
          type: integer
        confirmedBalance:
          $ref: '#/components/schemas/GetAddressDetailsFromCallbackRI_confirmedBalance'
        totalReceived:
          $ref: '#/components/schemas/GetAddressDetailsFromCallbackRI_totalReceived'
        totalSpent:
          $ref: '#/components/schemas/GetAddressDetailsFromCallbackRI_totalSpent'
        sequence:
          description: "Defines the transaction input's sequence as an integer, which\
            \ is is used when transactions are replaced with newer versions before\
            \ LockTime."
          example: 25648975
          format: int64
          type: integer
      required:
      - confirmedBalance
      - incomingTransactionsCount
      - outgoingTransactionsCount
      - totalReceived
      - totalSpent
      - transactionsCount
      type: object
    GetAddressDetailsFromCallbackR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmedBalance:
              amount: "12.5"
              unit: unit
            sequence: 25648975
            incomingTransactionsCount: 7
            totalSpent:
              amount: "5.2"
              unit: unit
            totalReceived:
              amount: "5.6"
              unit: unit
            outgoingTransactionsCount: 5
            transactionsCount: 12
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetAddressDetailsFromCallbackR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetAddressDetailsFromCallbackE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetAddressDetailsFromCallbackE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetAddressDetailsFromCallbackE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    BlockchainDataAddressEventSubscriptionNotFound:
      description: blockchain_data_address_event_subscription_not_found
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: blockchain_data_address_event_subscription_not_found
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The provided address has no subscriptions.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSB:
      description: Bitcoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 223
          type: integer
        version:
          description: Represents the transaction version number.
          example: 2
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSB_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSB_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSE:
      description: Ethereum
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSE_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        transactionStatus:
          description: Represents the status of this transaction.
          example: 0x1
          type: string
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      - transactionStatus
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSBC:
      description: Bitcoin Cash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1781965
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBC_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSBC_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSL:
      description: Litecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 2
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 223
          type: integer
        vSize:
          description: Represents the virtual size of this transaction.
          example: 141
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSL_vout_inner'
          type: array
      required:
      - locktime
      - size
      - vSize
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSD:
      description: Dash
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 125
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSD_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSD_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSD2:
      description: Dogecoin
      properties:
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of this transaction.
          example: 266
          type: integer
        version:
          description: Represents transaction version number.
          example: 1
          type: integer
        vin:
          description: Represents the transaction inputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSD2_vin_inner'
          type: array
        vout:
          description: Represents the transaction outputs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSD2_vout_inner'
          type: array
      required:
      - locktime
      - size
      - version
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSZ:
      description: Zcash
      properties:
        bindingSig:
          description: "It is used to enforce balance of Spend and Output transfers,\
            \ in order to prevent their replay across transactions."
          example: 603624b3e78e0de0415dea320797a107076a9f7aabd39f44bc4957803330e9891cb33744ac2ec749c2d2d341f29467c49c0ae35bf34765e2fb7c4cda68584804
          type: string
        expiryHeight:
          description: Represents a block height after which the transaction will
            expire.
          example: 0
          type: integer
        joinSplitPubKey:
          description: Represents an encoding of a JoinSplitSig public validating
            key.
          example: 5d2673b4c727241410e42f214a39218e4f13354d77db8ec31243a7be7ed8e2b7
          type: string
        joinSplitSig:
          description: Is used to sign transactions that contain at least one JoinSplit
            description.
          example: 8b06b926d619ead780b0769e5997ded93f9851fd0efd4b667afc5bcc2792b26cd4a565b4efa7733535fdc09fa566ca59042785d7fd8043d37fdf9e144465080a
          type: string
        locktime:
          description: "Represents the locktime on the transaction on the specific\
            \ blockchain, i.e. the blockheight at which the transaction is valid."
          example: 1781965
          format: int64
          type: integer
        overwintered:
          description: '"Overwinter" is the network upgrade for the Zcash blockchain.'
          example: true
          type: boolean
        size:
          description: Represents the total size of this transaction.
          example: 234
          type: integer
        vJoinSplit:
          description: Represents a sequence of JoinSplit descriptions using BCTV14
            proofs.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vJoinSplit_inner'
          type: array
        vShieldedOutput:
          description: Object Array representation of transaction output descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedOutput_inner'
          type: array
        vShieldedSpend:
          description: Object Array representation of transaction spend descriptions
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner'
          type: array
        valueBalance:
          description: String representation of the transaction value balance
          example: "0"
          type: string
        version:
          description: Defines the version of the transaction.
          example: 1
          type: integer
        versionGroupId:
          description: Represents the transaction version group ID
          example: 0x892f2085
          type: string
        vin:
          description: Object Array representation of transaction inputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vin_inner'
          type: array
        vout:
          description: Object Array representation of transaction outputs
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSZ_vout_inner'
          type: array
      required:
      - bindingSig
      - expiryHeight
      - joinSplitPubKey
      - joinSplitSig
      - locktime
      - overwintered
      - size
      - vJoinSplit
      - vShieldedOutput
      - vShieldedSpend
      - valueBalance
      - version
      - versionGroupId
      - vin
      - vout
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSEC:
      description: Ethereum Classic
      properties:
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSEC_gasPrice'
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0xa9059cbb000000000000000000000000acc59ec2f7119dc7a9e69dcd124cff75caae05bf0000000000000000000000000000000000000000000000000000000000989680
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSBSC:
      description: Binance Smart Chain
      properties:
        contract:
          description: Represents the specific transaction contract
          example: 0x0000000000000000000000000000000000001000
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "21000"
          type: string
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBSC_gasPrice'
        gasUsed:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: "21000"
          type: string
        inputData:
          description: Represents additional information that is required for the
            transaction.
          example: 0x
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 25341
          type: integer
      required:
      - contract
      - gasLimit
      - gasPrice
      - gasUsed
      - inputData
      - nonce
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSZ2:
      description: Zilliqa
      properties:
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 552020
          type: integer
        gasPrice:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSZ2_gasPrice'
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 24673
          type: integer
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 16
          type: integer
        transactionStatus:
          description: Represents the status of this transaction.
          example: 0x1
          type: string
      required:
      - gasLimit
      - gasPrice
      - gasUsed
      - nonce
      - transactionStatus
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSX:
      description: XRP
      properties:
        additionalData:
          description: Represents additional data that may be needed.
          example: rPmPErQe4g9725pcNxJpuvKkdqTESTQ6Tu
          type: string
        destinationTag:
          description: Defines the destination tag value.
          example: 3999472835
          format: int64
          type: integer
        offer:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_offer'
        receive:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI_receive'
        sequence:
          description: "Defines the transaction input's sequence as an integer, which\
            \ is is used when transactions are replaced with newer versions before\
            \ LockTime."
          example: 4294967295
          format: int64
          type: integer
        status:
          description: Defines the status of the transaction.
          example: tesSUCCESS
          type: string
        type:
          description: Defines the type of the transaction.
          example: Payment
          type: string
        value:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSX_value'
      required:
      - additionalData
      - offer
      - receive
      - sequence
      - status
      - type
      - value
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBST:
      description: Tron
      properties:
        amount:
          description: Defines the amount of the transaction.
          type: string
        bandwidthUsed:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBST_bandwidthUsed'
        contract:
          description: Represents the specific transaction contract.
          type: string
        energyUsed:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBST_energyUsed'
        hasInternalTransactions:
          description: Defines if the transaction includes internal transactions (true)
            or not (false).
          type: boolean
        hasTokenTransfers:
          description: Defines if the transaction includes token transfers (true)
            or not (false).
          type: string
        input:
          description: Represents the transaction's input value.
          example: "2"
          type: string
        recipients:
          description: Represents the recipient address.
          type: string
        senders:
          description: Represents the sender address.
          type: string
        transactionStatus:
          description: Represents the status of this transaction.
          example: 0x1
          type: string
      required:
      - amount
      - bandwidthUsed
      - contract
      - energyUsed
      - hasInternalTransactions
      - hasTokenTransfers
      - input
      - recipients
      - senders
      - transactionStatus
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSP:
      description: Polygon
      properties:
        amount:
          description: Representation of the amount value.
          example: "5"
          type: string
        contract:
          description: Represents the specific transaction contract.
          example: 0x20fe562d797a42dcb3399062ae9546cd06f63280
          type: string
        gas:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "2994782927"
          type: string
        gasPrice:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "2994782927"
          type: string
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        input:
          description: Represents additional information that is required for the
            transaction.
          example: 0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360
          type: string
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: 15
          type: integer
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          type: string
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          type: string
        transactionStatus:
          description: Represents the status of this transaction.
          example: 0x1
          type: string
        txid:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be transactionId in UTXO-based protocols like Bitcoin, and transaction\
            \ hash in Ethereum blockchain."
          type: string
      required:
      - amount
      - contract
      - gas
      - gasPrice
      - gasUsed
      - input
      - nonce
      - recipients
      - senders
      - transactionStatus
      - txid
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRI:
      example:
        recipients:
        - amount: "0.00001600"
          address: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
        - amount: "0.00001600"
          address: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
        fee:
          amount: "0.00000300"
          unit: BTC
        minedInBlockHeight: 2105197
        index: 44
        minedInBlockHash: 00000000cc8c79e1a80d14873ee7e319f8d2525354be26ace50796444a1e0764
        isConfirmed: true
        blockchainSpecific: null
        senders:
        - amount: "0.00002000"
          address: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
        - amount: "0.00002000"
          address: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
        transactionHash: 8888f6c8168ff69aaf6438ab185c690e8c76c63e5f9c472c1c86f08406ea74f2
        timestamp: 1637751304
      properties:
        index:
          description: Represents the index position of the transaction in the specific
            block.
          example: 44
          type: integer
        minedInBlockHash:
          description: Represents the hash of the block where this transaction was
            mined/confirmed for first time. The hash is defined as a cryptographic
            digital fingerprint made by hashing the block header twice through the
            SHA256 algorithm.
          example: 00000000cc8c79e1a80d14873ee7e319f8d2525354be26ace50796444a1e0764
          type: string
        minedInBlockHeight:
          description: Represents the hight of the block where this transaction was
            mined/confirmed for first time. The height is defined as the number of
            blocks in the blockchain preceding this specific block.
          example: 2105197
          type: integer
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRI_recipients_inner'
          type: array
        senders:
          description: Represents a list of sender addresses with the respective amounts.
            In account-based protocols like Ethereum there is only one address in
            this list.
          items:
            $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRI_senders_inner'
          type: array
        timestamp:
          description: "Defines the exact date/time in Unix Timestamp when this transaction\
            \ was mined, confirmed or first seen in Mempool, if it is unconfirmed."
          example: 1637751304
          type: integer
        transactionHash:
          description: "Represents the same as transactionId for account-based protocols\
            \ like Ethereum, while it could be different in UTXO-based protocols like\
            \ Bitcoin. E.g., in UTXO-based protocols hash is different from transactionId\
            \ for SegWit transactions."
          example: 8888f6c8168ff69aaf6438ab185c690e8c76c63e5f9c472c1c86f08406ea74f2
          type: string
        fee:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRI_fee'
        isConfirmed:
          description: Represents the state of the transaction whether it is confirmed
            or not confirmed.
          example: true
          type: boolean
        blockchainSpecific:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBS'
      required:
      - blockchainSpecific
      - fee
      - index
      - isConfirmed
      - minedInBlockHash
      - minedInBlockHeight
      - recipients
      - senders
      - timestamp
      - transactionHash
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBS:
      oneOf:
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSB'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSE'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSBC'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSL'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSD'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSD2'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSZ'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSEC'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSBSC'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSZ2'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSX'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBST'
      - $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSP'
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            recipients:
            - amount: "0.00001600"
              address: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
            - amount: "0.00001600"
              address: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
            fee:
              amount: "0.00000300"
              unit: BTC
            minedInBlockHeight: 2105197
            index: 44
            minedInBlockHash: 00000000cc8c79e1a80d14873ee7e319f8d2525354be26ace50796444a1e0764
            isConfirmed: true
            blockchainSpecific: null
            senders:
            - amount: "0.00002000"
              address: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
            - amount: "0.00002000"
              address: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
            transactionHash: 8888f6c8168ff69aaf6438ab185c690e8c76c63e5f9c472c1c86f08406ea74f2
            timestamp: 1637751304
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSB:
      description: Bitcoin
      properties:
        bits:
          description: "A sub-unit of BTC equal to 0.000001 BTC, or 100 Satoshi, and\
            \ is the same as microbitcoin (μBTC). Bits have two-decimal precision."
          example: "386689514"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 00000000000000000000000000000000000000001932c1bc515b0c0e0dee2040
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 02754414626473fa39a0cfbf8d1960fc17ba932ab586340f61f039114053e851
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 2113101077
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 925958
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536928256
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "2000000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 3999412
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSBC:
      description: Bitcoin Cash
      properties:
        bits:
          description: "A sub-unit of BCH equal to 0.000001 BCH, or 100 Satoshi, and\
            \ is the same as microbitcoincash (μBCH). Bits have two-decimal precision."
          example: "386689514"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000015dc8754d8bfaedfffbb3bd
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "5399792.015244232"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 543872ba53c13183f951d76dd5933f98900a1bf9b3eef716857dfcc3c0534dfb
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 1923421957
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 191
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 545259520
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSL:
      description: Litecoin
      properties:
        bits:
          description: Represents a specific sub-unit of Litecoin. Bits have two-decimal
            precision.
          example: "436301753"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000006c61f0fce4b57f08ff4
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "11679731.14248383"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 0ea8cea078d2338ce92e62d3275c92682d0a1879ddf861a7ce16889a24deccd2
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 3021194134
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 300998
          type: integer
        strippedsize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 220208
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870916
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000004"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 961622
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedsize
      - version
      - versionHex
      - weight
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSD:
      description: Dash
      properties:
        bits:
          description: Represents a specific sub-unit of Dash. Bits have two-decimal
            precision.
          example: "421808151"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000065cbab6e72cb49a0c2f7
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "118376853.4818659"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 1cee8c0df02427cbcfd2d2a88678848b4c08eb89d580df34a52464a6fed4df7f
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 3850564744
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 26171
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSD2:
      description: Dogecoin
      properties:
        bits:
          description: Represents a specific sub-unit of Doge. Bits have two-decimal
            precision.
          example: "436384320"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000624fe5552df3fb55362
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "6222240.869250271"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 2d043569a81467a8113e25345a7e43021d6afb6520f9e8d0ea2df0c03eec0a17
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 12125
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 12125
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 6422788
          type: integer
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 48500
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - weight
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSE:
      description: Ethereum
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0x7070796520e4b883e5bda9e7a59ee4bb99e9b1bc080c
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "12499653"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "12488144"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 17
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "4794080996481072"
          type: string
        uncles:
          items:
            description: String array representation of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSBSC:
      description: Binance Smart Chain
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd883010105846765746888676f312e31352e35856c696e75780000005865ba3cf692868cb6a780f2bdcc54d5a8d673aaf8bc134cacaabbe933b2ddc92bfea4984b5620d1c5800cd75dd333c86b1cdcf784ca42f204d77c2b82554ced2ec6445b01
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "29999542"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "896567"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in second
          example: 2
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 0x0000000000000000
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 2611
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block"
          example: "28671700"
          type: string
        uncles:
          items:
            description: Representats of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSEC:
      description: Ethereum Classic
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "1180819"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd983010203844765746887676f312e342e328777696e646f7773
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "7999992"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "6494"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 6
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 0xba281617ac015e5c
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 537
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "1086033282060494457577"
          type: string
        uncles:
          items:
            description: Representats of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSZ:
      description: Zilliqa
      properties:
        difficulty:
          description: Defines how difficult it is for a specific miner to mine the
            block.
          example: "41.375"
          type: string
        dsBlock:
          description: Represents the Directory Service block which contains metadata
            about the miners who participate in the consensus protocol.
          example: 12443
          type: integer
        dsDifficulty:
          description: Defines how difficult it is to mine the dsBlocks.
          example: "48.625"
          type: string
        dsLeader:
          description: Represents a part of the DS Committee which leads the consensus
            protocol for the epoch.
          example: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          type: string
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 10028
          type: integer
        microBlocks:
          items:
            description: Micro blocks are validated simultaneously with other smaller
              components called "shards" in order to form the final txBlock.
            example: "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            type: string
          type: array
      required:
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSX:
      description: XRP
      properties:
        totalCoins:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockRI_totalCoins'
        totalFees:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockRI_totalFees'
      required:
      - totalCoins
      - totalFees
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBSZ2:
      description: Zcash
      properties:
        bits:
          description: Represents a specific sub-unit of Zcash. Bits have two-decimal
            precision
          example: "524517883"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000000000000262b072797
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 961113ae943a3abf76da307cf881c4c6b6c13efb27fb67f02c9cdb46029848e8
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        version:
          description: Represents the transaction version number.
          example: 4
          type: integer
      required:
      - bits
      - chainwork
      - merkleRoot
      - nonce
      - size
      - version
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBST:
      description: Tron
      properties:
        bandwidthUsed:
          description: Represents the bandwidth used for the transaction.
          type: string
        burnedTrx:
          description: Represents the block burned TRX.
          type: string
        energyUsed:
          description: Representats the used energy for the transaction.
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          type: integer
      required:
      - bandwidthUsed
      - burnedTrx
      - energyUsed
      - size
      type: object
    GetBlockDetailsByBlockHashFromCallbackRI:
      example:
        totalDifficulty: totalDifficulty
        previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
        extraData: 0x7070796520e4b883e5bda9e7a59ee4bb99e9b1bc080c
        blockchainSpecific: null
        nonce: "16"
        difficulty: "21448277761059.71"
        gasLimit: "552020"
        gasUsed: "24673"
        uncles:
        - uncles
        - uncles
        sha3Uncles: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
        size: 1408113
        hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
        transactionsCount: 2755
        minedInSeconds: 17
        height: 673852
        timestamp: 1610365615
      properties:
        hash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
          type: string
        height:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 673852
          type: integer
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1610365615
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 2755
          type: integer
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0x7070796520e4b883e5bda9e7a59ee4bb99e9b1bc080c
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 17
          type: integer
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: "16"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          type: string
        uncles:
          items:
            description: String array representation of the block uncles
            type: string
          type: array
        blockchainSpecific:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBS'
      required:
      - blockchainSpecific
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - hash
      - height
      - minedInSeconds
      - nonce
      - previousBlockHash
      - sha3Uncles
      - size
      - timestamp
      - totalDifficulty
      - transactionsCount
      - uncles
      type: object
    GetBlockDetailsByBlockHashFromCallbackRIBS:
      oneOf:
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSB'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSBC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSL'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSD'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSD2'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSE'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSBSC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSEC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSZ'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSX'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBSZ2'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRIBST'
      type: object
    GetBlockDetailsByBlockHashFromCallbackR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            totalDifficulty: totalDifficulty
            previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
            extraData: 0x7070796520e4b883e5bda9e7a59ee4bb99e9b1bc080c
            blockchainSpecific: null
            nonce: "16"
            difficulty: "21448277761059.71"
            gasLimit: "552020"
            gasUsed: "24673"
            uncles:
            - uncles
            - uncles
            sha3Uncles: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
            size: 1408113
            hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
            transactionsCount: 2755
            minedInSeconds: 17
            height: 673852
            timestamp: 1610365615
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetBlockDetailsByBlockHashFromCallbackE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetBlockDetailsByBlockHashFromCallbackE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetBlockDetailsByBlockHashFromCallbackE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSB:
      description: Bitcoin
      properties:
        bits:
          description: "A sub-unit of BTC equal to 0.000001 BTC, or 100 Satoshi, and\
            \ is the same as microbitcoin (μBTC). Bits have two-decimal precision."
          example: "386689514"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 00000000000000000000000000000000000000001932c1bc515b0c0e0dee2040
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 02754414626473fa39a0cfbf8d1960fc17ba932ab586340f61f039114053e851
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 2113101077
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 925958
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536928256
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "2000000"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 3999412
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - versionHex
      - weight
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSBC:
      description: Bitcoin Cash
      properties:
        bits:
          description: "A sub-unit of BCH equal to 0.000001 BCH, or 100 Satoshi, and\
            \ is the same as microbitcoincash (μBCH). Bits have two-decimal precision."
          example: "386689514"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000015dc8754d8bfaedfffbb3bd
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "5399792.015244232"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 543872ba53c13183f951d76dd5933f98900a1bf9b3eef716857dfcc3c0534dfb
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 1923421957
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 191
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 545259520
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSL:
      description: Litecoin
      properties:
        bits:
          description: Represents a specific sub-unit of Litecoin. Bits have two-decimal
            precision.
          example: "436301753"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000006c61f0fce4b57f08ff4
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "11679731.14248383"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 0ea8cea078d2338ce92e62d3275c92682d0a1879ddf861a7ce16889a24deccd2
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 3021194134
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 300998
          type: integer
        strippedsize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 220208
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870916
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000004"
          type: string
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 961622
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedsize
      - version
      - versionHex
      - weight
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSD:
      description: Dash
      properties:
        bits:
          description: Represents a specific sub-unit of Dash. Bits have two-decimal
            precision.
          example: "421808151"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 0000000000000000000000000000000000000000000065cbab6e72cb49a0c2f7
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "118376853.4818659"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 1cee8c0df02427cbcfd2d2a88678848b4c08eb89d580df34a52464a6fed4df7f
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 3850564744
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 26171
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 536870912
          type: integer
        versionHex:
          description: Is the hexadecimal string representation of the block's version.
          example: "20000000"
          type: string
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - version
      - versionHex
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSD2:
      description: Dogecoin
      properties:
        bits:
          description: Represents a specific sub-unit of Doge. Bits have two-decimal
            precision.
          example: "436384320"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000624fe5552df3fb55362
          type: string
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "6222240.869250271"
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 2d043569a81467a8113e25345a7e43021d6afb6520f9e8d0ea2df0c03eec0a17
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 0
          format: int64
          type: integer
        size:
          description: Represents the total size of the block in Bytes.
          example: 12125
          type: integer
        strippedSize:
          description: Defines the numeric representation of the block size excluding
            the witness data.
          example: 12125
          type: integer
        version:
          description: Represents the version of the specific block on the blockchain.
          example: 6422788
          type: integer
        weight:
          description: Represents a measurement to compare the size of different transactions
            to each other in proportion to the block size limit.
          example: 48500
          type: integer
      required:
      - bits
      - chainwork
      - difficulty
      - merkleRoot
      - nonce
      - size
      - strippedSize
      - version
      - weight
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSE:
      description: Ethereum
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "209515044.4071968"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0x7070796520e4b883e5bda9e7a59ee4bb99e9b1bc080c
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "12499653"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "12488144"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 17
          type: integer
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: "16"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 7105
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "4794080996481072"
          type: string
        uncles:
          items:
            description: String array representation of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSBSC:
      description: Binance Smart Chain
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "2"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd883010105846765746888676f312e31352e35856c696e75780000005865ba3cf692868cb6a780f2bdcc54d5a8d673aaf8bc134cacaabbe933b2ddc92bfea4984b5620d1c5800cd75dd333c86b1cdcf784ca42f204d77c2b82554ced2ec6445b01
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "29999542"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "896567"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in second
          example: 3
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 0x0000000000000000
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 2611
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block"
          example: "28671700"
          type: string
        uncles:
          items:
            description: Representats of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSEC:
      description: Ethereum Classic
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "1180819"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0xd983010203844765746887676f312e342e328777696e646f7773
          type: string
        gasLimit:
          description: Defines the total gas limit of all transactions in the block.
          example: "7999992"
          type: string
        gasUsed:
          description: Represents the total amount of gas used by all transactions
            in this block.
          example: "6494"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 6
          type: integer
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: 0x5a8d218547d0713b
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 537
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          example: "1086033282060494457577"
          type: string
        uncles:
          items:
            description: Representats of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSZ:
      description: Zilliqa
      properties:
        difficulty:
          description: Defines how difficult it is for a specific miner to mine the
            block.
          example: "41.375"
          type: string
        dsBlock:
          description: Represents the Directory Service block which contains metadata
            about the miners who participate in the consensus protocol.
          example: 12443
          type: integer
        dsDifficulty:
          description: Defines how difficult it is to mine the dsBlocks.
          example: "48.625"
          type: string
        dsLeader:
          description: Represents a part of the DS Committee which leads the consensus
            protocol for the epoch.
          example: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          type: string
        gasLimit:
          description: Represents the maximum amount of gas allowed in the block in
            order to determine how many transactions it can fit.
          example: 550000
          type: integer
        gasUsed:
          description: Defines how much of the gas for the block has been used.
          example: 10028
          type: integer
        microBlocks:
          items:
            description: Micro blocks are validated simultaneously with other smaller
              components called "shards" in order to form the final txBlock.
            example: "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
              \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
              \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
              \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
            type: string
          type: array
      required:
      - difficulty
      - dsBlock
      - dsDifficulty
      - dsLeader
      - gasLimit
      - gasUsed
      - microBlocks
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSX:
      description: XRP
      properties:
        totalCoins:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockRI_totalCoins'
        totalFees:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockRI_totalFees'
      required:
      - totalCoins
      - totalFees
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSZ2:
      description: Zcash
      properties:
        bits:
          description: Represents a specific sub-unit of Zcash. Bits have two-decimal
            precision
          example: "524517883"
          type: string
        chainwork:
          description: "Represents a hexadecimal number of all the hashes necessary\
            \ to produce the current chain. E.g., when converting 0000000000000000000000000000000000000000000086859f7a841475b236fd\
            \ to a decimal you get 635262017308958427068157 hashes, or 635262 exahashes."
          example: 000000000000000000000000000000000000000000000000000000262b072797
          type: string
        merkleRoot:
          description: Defines the single and final (root) node of a Merkle tree.
            It is the combined hash of all transactions' hashes that are part of a
            blockchain block.
          example: 961113ae943a3abf76da307cf881c4c6b6c13efb27fb67f02c9cdb46029848e8
          type: string
        nonce:
          description: Represents a random value that can be adjusted to satisfy the
            proof of work
          example: "2113101077"
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        version:
          description: Represents the transaction version number.
          example: 536870916
          type: integer
      required:
      - bits
      - chainwork
      - merkleRoot
      - nonce
      - size
      - version
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBST:
      description: Tron
      properties:
        bandwidthUsed:
          description: Represents the bandwidth used for the transaction.
          type: string
        burnedTrx:
          description: Represents the block burned TRX.
          type: string
        energyUsed:
          description: Representats the used energy for the transaction.
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          type: integer
      required:
      - bandwidthUsed
      - burnedTrx
      - energyUsed
      - size
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBSP:
      description: Polygon
      properties:
        difficulty:
          description: Represents a mathematical value of how hard it is to find a
            valid hash for this block.
          example: "21448277761059.71"
          type: string
        extraData:
          description: Represents any data that can be included by the miner in the
            block.
          example: 0x7070796520e4b883e5bda9e7a59ee4bb99e9b1bc080c
          type: string
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasUsed:
          description: Represents the exact unit of gas that was used for the transaction.
          example: "24673"
          type: string
        minedInSeconds:
          description: Specifies the amount of time required for the block to be mined
            in seconds.
          example: 17
          type: integer
        nonce:
          description: "Represents the sequential running number for an address, starting\
            \ from 0 for the first transaction. E.g., if the nonce of a transaction\
            \ is 10, it would be the 11th transaction sent from the sender's address."
          example: "16"
          type: string
        sha3Uncles:
          description: Defines the combined hash of all uncles for a given parent.
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          type: string
        size:
          description: Represents the total size of the block in Bytes.
          example: 1408113
          type: integer
        totalDifficulty:
          description: "Defines the total difficulty of the chain until this block,\
            \ i.e. how difficult it is for a specific miner to mine a new block."
          type: string
        uncles:
          items:
            description: String array representation of the block uncles
            type: string
          type: array
      required:
      - difficulty
      - extraData
      - gasLimit
      - gasUsed
      - minedInSeconds
      - nonce
      - sha3Uncles
      - size
      - totalDifficulty
      - uncles
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRI:
      example:
        previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
        blockchainSpecific: null
        hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
        transactionsCount: 2755
        height: 673852
        timestamp: 1610365615
      properties:
        hash:
          description: "Represents the hash of the block, which is its unique identifier.\
            \ It represents a cryptographic digital fingerprint made by hashing the\
            \ block header twice through the SHA256 algorithm."
          example: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
          type: string
        height:
          description: Represents the number of blocks in the blockchain preceding
            this specific block. Block numbers have no gaps. A blockchain usually
            starts with block 0 called the "Genesis block".
          example: 673852
          type: integer
        previousBlockHash:
          description: "Represents the hash of the previous block, also known as the\
            \ parent block."
          example: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in Unix
            Timestamp.
          example: 1610365615
          type: integer
        transactionsCount:
          description: Represents the total number of all transactions as part of
            this block.
          example: 2755
          type: integer
        blockchainSpecific:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBS'
      required:
      - blockchainSpecific
      - hash
      - height
      - previousBlockHash
      - timestamp
      - transactionsCount
      type: object
    GetBlockDetailsByBlockHeightFromCallbackRIBS:
      oneOf:
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSB'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSBC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSL'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSD'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSD2'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSE'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSBSC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSEC'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSZ'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSX'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSZ2'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBST'
      - $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRIBSP'
      type: object
    GetBlockDetailsByBlockHeightFromCallbackR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
            blockchainSpecific: null
            hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
            transactionsCount: 2755
            height: 673852
            timestamp: 1610365615
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetBlockDetailsByBlockHeightFromCallbackE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetBlockDetailsByBlockHeightFromCallbackE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetBlockDetailsByBlockHeightFromCallbackE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    NewConfirmedInternalTransactionsRI:
      example:
        address: 0xbcc817f057950b0df41206c5d7125e6225cae18e
        createdTimestamp: 1236238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        receiveCallbackOn: 3
        eventType: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED
        isActive: true
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        address:
          description: Defines the specific address of the internal transaction.
          example: 0xbcc817f057950b0df41206c5d7125e6225cae18e
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs 2.0. For\
            \ more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1236238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        receiveCallbackOn:
          description: "Represents the exact confirmation, on which the user wants\
            \ to receive callback."
          example: 3
          type: integer
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - address
      - callbackSecretKey
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - receiveCallbackOn
      - referenceId
      type: object
    NewConfirmedInternalTransactionsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            address: 0xbcc817f057950b0df41206c5d7125e6225cae18e
            createdTimestamp: 1236238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            receiveCallbackOn: 3
            eventType: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED
            isActive: true
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedInternalTransactionsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedInternalTransactionsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedInternalTransactionsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedInternalTransactionsE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationRI:
      example:
        confirmationsCount: 3
        address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
        isActive: true
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        address:
          description: Defines the specific address of the internal transaction.
          example: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - address
      - callbackSecretKey
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 3
            address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
            isActive: true
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountRI:
      example:
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: CONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
        isActive: true
        amountHigherThan: 2
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        amountHigherThan:
          description: Represents a specific amount of coins after which the system
            have to send a callback to customers' callbackUrl.
          example: 2
          format: int64
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: CONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - amountHigherThan
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: CONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
            isActive: true
            amountHigherThan: 2
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountRI:
      example:
        createdTimestamp: 1611238648
        contractAddress: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: CONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
        isActive: true
        amountHigherThan: 2
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        amountHigherThan:
          description: Represents a specific amount of coins after which the system
            have to send a callback to customers' callbackUrl.
          example: 2
          format: int64
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        contractAddress:
          description: "Represents the contract address of the token, which controls\
            \ its logic. It is not the address that holds the tokens."
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: CONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - amountHigherThan
      - callbackUrl
      - contractAddress
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            createdTimestamp: 1611238648
            contractAddress: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: CONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
            isActive: true
            amountHigherThan: 2
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountRI:
      example:
        createdTimestamp: 1611238648
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        eventType: CONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
        isActive: true
        amountHigherThan: 2
        referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        amountHigherThan:
          description: Represents a specific amount of coins after which the system
            have to send a callback to customers' callbackUrl.
          example: 2
          format: int64
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        createdTimestamp:
          description: Defines the specific time/date when the subscription was created
            in Unix Timestamp.
          example: 1611238648
          type: integer
        eventType:
          description: Defines the type of the specific event available for the customer
            to subscribe to for callback notification.
          example: CONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          type: string
        isActive:
          description: Defines whether the subscription is active or not. Set as boolean.
          example: true
          type: boolean
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          type: string
      required:
      - amountHigherThan
      - callbackUrl
      - createdTimestamp
      - eventType
      - isActive
      - referenceId
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            createdTimestamp: 1611238648
            callbackSecretKey: yourSecretKey
            callbackUrl: https://example.com
            eventType: CONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
            isActive: true
            amountHigherThan: 2
            referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/BlockchainEventsCallbacksLimitReached'
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    CreateAutomaticCoinsForwardingRI:
      example:
        confirmationsCount: 3
        feePriority: standard
        createdTimestamp: 1611238648
        minimumTransferAmount: "0.0002"
        callbackUrl: https://example.com
        fromAddress: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
        toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
        referenceId: 6017c964973cdcf4d4f69e29
      properties:
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the automatic forwarding
            was created in Unix Timestamp.
          example: 1611238648
          type: integer
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" OR \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        fromAddress:
          description: Represents the hash of the address that forwards the currency.
          example: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the currency in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.0002"
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 6017c964973cdcf4d4f69e29
          type: string
        toAddress:
          description: Represents the hash of the address the currency is forwarded
            to.
          example: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
          type: string
      required:
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - feePriority
      - fromAddress
      - minimumTransferAmount
      - referenceId
      - toAddress
      type: object
    CreateAutomaticCoinsForwardingR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 3
            feePriority: standard
            createdTimestamp: 1611238648
            minimumTransferAmount: "0.0002"
            callbackUrl: https://example.com
            fromAddress: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
            toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
            referenceId: 6017c964973cdcf4d4f69e29
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateAutomaticCoinsForwardingR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    CreateAutomaticCoinsForwardingE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    CreateAutomaticCoinsForwardingE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    CreateAutomaticCoinsForwardingE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/CoinsForwardingAutomationsLimitReached'
      type: object
    CreateAutomaticCoinsForwardingE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    CoinsForwardingAutomationsLimitReached:
      description: coins_forwarding_automations_limit_reached
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: coins_forwarding_automations_limit_reached
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "Your current package plan coins forwarding automations limit of\
            \ {automations_limit} reached. Please contact us if you need more or upgrade\
            \ your plan."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    ListCoinsForwardingAutomationsRI:
      properties:
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCountTrigger:
          description: Represents the total count of the transaction confirmations
            before triggering the event.
          example: 3
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the automatic forwarding
            was created in Unix Timestamp.
          example: 1611238648
          type: integer
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" OR \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        fromAddress:
          description: Represents the hash of the address that forwards the currency.
          example: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the currency in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.0002"
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific forwarding
            automation.
          example: 6017dd02a309213863be9e55
          type: string
        toAddress:
          description: Represents the hash of the address the currency is forwarded
            to.
          example: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
          type: string
      required:
      - callbackUrl
      - confirmationsCountTrigger
      - createdTimestamp
      - feePriority
      - fromAddress
      - minimumTransferAmount
      - referenceId
      - toAddress
      type: object
    ListCoinsForwardingAutomationsR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListCoinsForwardingAutomationsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListCoinsForwardingAutomationsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListCoinsForwardingAutomationsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListCoinsForwardingAutomationsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    DeleteAutomaticCoinsForwardingRI:
      example:
        confirmationsCount: 3
        feePriority: standard
        createdTimestamp: 1611238648
        minimumTransferAmount: "0.00002"
        callbackUrl: https://example.com
        fromAddress: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
        toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
        referenceId: 601c1f23ec4b80f51245e617
      properties:
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the automatic forwarding
            was created in Unix Timestamp.
          example: 1611238648
          type: integer
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" or \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        fromAddress:
          description: Represents the hash of the address that forwards the currency.
          example: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the currency in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.00002"
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 601c1f23ec4b80f51245e617
          type: string
        toAddress:
          description: Represents the hash of the address the currency is forwarded
            to.
          example: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
          type: string
      required:
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - feePriority
      - fromAddress
      - minimumTransferAmount
      - referenceId
      - toAddress
      type: object
    DeleteAutomaticCoinsForwardingR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 3
            feePriority: standard
            createdTimestamp: 1611238648
            minimumTransferAmount: "0.00002"
            callbackUrl: https://example.com
            fromAddress: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
            toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
            referenceId: 601c1f23ec4b80f51245e617
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DeleteAutomaticCoinsForwardingR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    DeleteAutomaticCoinsForwardingE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    DeleteAutomaticCoinsForwardingE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    DeleteAutomaticCoinsForwardingE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    CreateAutomaticTokensForwardingRITSBOT:
      description: Bitcoin Omni Token
      properties:
        propertyId:
          description: Defines the `propertyId` of the Omni Layer token.
          example: 31
          type: integer
      required:
      - propertyId
      type: object
    CreateAutomaticTokensForwardingRITSET:
      description: Ethereum Token
      properties:
        contractAddress:
          description: Represents the specific `contractAddress` of the Token that
            will be forwarded.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - contractAddress
      type: object
    CreateAutomaticTokensForwardingRI:
      example:
        confirmationsCount: 2
        feePriority: standard
        tokenData: null
        createdTimestamp: 1611238648
        feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
        minimumTransferAmount: "0.5"
        callbackUrl: https://example.com
        fromAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
        toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
        referenceId: 6017dd02a309213863be9e55
      properties:
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 2
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the automatic forwarding
            was created in Unix Timestamp.
          example: 1611238648
          type: integer
        feeAddress:
          description: "Represents the specific fee address, which is always automatically\
            \ generated. Users must fund it."
          example: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" or \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        fromAddress:
          description: Represents the hash of the address that forwards the tokens.
          example: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the tokens in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.5"
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 6017dd02a309213863be9e55
          type: string
        toAddress:
          description: Represents the hash of the address the tokens are forwarded
            to.
          example: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
          type: string
        tokenData:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingRITS'
      required:
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - feeAddress
      - feePriority
      - fromAddress
      - minimumTransferAmount
      - referenceId
      - toAddress
      - tokenData
      type: object
    CreateAutomaticTokensForwardingRITS:
      oneOf:
      - $ref: '#/components/schemas/CreateAutomaticTokensForwardingRITSBOT'
      - $ref: '#/components/schemas/CreateAutomaticTokensForwardingRITSET'
      type: object
    CreateAutomaticTokensForwardingR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 2
            feePriority: standard
            tokenData: null
            createdTimestamp: 1611238648
            feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
            minimumTransferAmount: "0.5"
            callbackUrl: https://example.com
            fromAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
            toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
            referenceId: 6017dd02a309213863be9e55
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    CreateAutomaticTokensForwardingE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    CreateAutomaticTokensForwardingE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    CreateAutomaticTokensForwardingE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/TokensForwardingAutomationsLimitReached'
      type: object
    TokensForwardingAutomationsLimitReached:
      description: tokens_forwarding_automations_limit_reached
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: tokens_forwarding_automations_limit_reached
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: "Your current package plan tokens forwarding automations limit\
            \ of {automations_limit} reached. Please contact us if you need more or\
            \ upgrade your plan."
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    AddTokensToExistingFromAddressRITSBOT:
      description: Bitcoin Omni Token
      properties:
        propertyId:
          description: Defines the `propertyId` of the Omni Layer token.
          example: 2
          type: integer
      required:
      - propertyId
      type: object
    AddTokensToExistingFromAddressRITSET:
      description: Ethereum Token
      properties:
        contractAddress:
          description: Token contract address to be transferred
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - contractAddress
      type: object
    AddTokensToExistingFromAddressRI:
      example:
        confirmationsCount: 3
        feePriority: standard
        tokenData: null
        createdTimestamp: 1611238648
        feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
        minimumTransferAmount: "0.0001"
        callbackUrl: https://example.com
        fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
        toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
        referenceId: 6017dd02a309213863be9e55
      properties:
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the automatic forwarding
            was created in Unix Timestamp.
          example: 1611238648
          type: integer
        feeAddress:
          description: "Represents the specific fee address, which is always automatically\
            \ generated. Users must fund it."
          example: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" or \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        fromAddress:
          description: Represents the hash of the address that forwards the tokens.
          example: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the tokens in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.0001"
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 6017dd02a309213863be9e55
          type: string
        toAddress:
          description: Represents the hash of the address the tokens are forwarded
            to.
          example: mnumE76iEKN47bUsdni85oped5D1fRwKWi
          type: string
        tokenData:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressRITS'
      required:
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - feeAddress
      - feePriority
      - fromAddress
      - minimumTransferAmount
      - referenceId
      - toAddress
      - tokenData
      type: object
    AddTokensToExistingFromAddressRITS:
      oneOf:
      - $ref: '#/components/schemas/AddTokensToExistingFromAddressRITSBOT'
      - $ref: '#/components/schemas/AddTokensToExistingFromAddressRITSET'
      type: object
    AddTokensToExistingFromAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 3
            feePriority: standard
            tokenData: null
            createdTimestamp: 1611238648
            feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
            minimumTransferAmount: "0.0001"
            callbackUrl: https://example.com
            fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
            toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
            referenceId: 6017dd02a309213863be9e55
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    AddTokensToExistingFromAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    AddTokensToExistingFromAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    AddTokensToExistingFromAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      - $ref: '#/components/schemas/TokensForwardingAutomationsLimitReached'
      type: object
    ListTokensForwardingAutomationsRITSBOT:
      description: Bitcoin Omni Token
      properties:
        propertyId:
          description: Defines the Property ID of the Omni Layer token.
          example: 31
          type: integer
      required:
      - propertyId
      type: object
    ListTokensForwardingAutomationsRITSET:
      description: Ethereum Token
      properties:
        contractAddress:
          description: Defines the token contract address.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - contractAddress
      type: object
    ListTokensForwardingAutomationsRI:
      properties:
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 2
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the automatic forwarding
            was created in Unix Timestamp.
          example: 1611238648
          type: integer
        feeAddress:
          description: "Represents the specific fee address, which is always automatically\
            \ generated. Users must fund it."
          example: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" or \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        fromAddress:
          description: Represents the hash of the address that forwards the tokens.
          example: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the tokens in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.5"
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 6038ad04c22fba4680361105
          type: string
        toAddress:
          description: Represents the hash of the address the tokens are forwarded
            to.
          example: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
          type: string
        tokenData:
          $ref: '#/components/schemas/ListTokensForwardingAutomationsRITS'
      required:
      - callbackUrl
      - createdTimestamp
      - feeAddress
      - feePriority
      - fromAddress
      - minimumTransferAmount
      - referenceId
      - toAddress
      - tokenData
      type: object
    ListTokensForwardingAutomationsRITS:
      oneOf:
      - $ref: '#/components/schemas/ListTokensForwardingAutomationsRITSBOT'
      - $ref: '#/components/schemas/ListTokensForwardingAutomationsRITSET'
      type: object
    ListTokensForwardingAutomationsR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListTokensForwardingAutomationsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListTokensForwardingAutomationsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListTokensForwardingAutomationsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListTokensForwardingAutomationsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetFeeAddressDetailsRI:
      example:
        address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
        balance:
          amount: "0.01"
          unit: ETH
        minimumTransferAmount: "0.0002"
      properties:
        address:
          description: "Represents the specific fee address, which is always automatically\
            \ generated. Users must fund it."
          example: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
          type: string
        balance:
          $ref: '#/components/schemas/GetFeeAddressDetailsRI_balance'
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the currency in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.0002"
          type: string
      required:
      - address
      - balance
      - minimumTransferAmount
      type: object
    GetFeeAddressDetailsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
            balance:
              amount: "0.01"
              unit: ETH
            minimumTransferAmount: "0.0002"
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetFeeAddressDetailsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetFeeAddressDetailsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetFeeAddressDetailsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetFeeAddressDetailsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    DeleteAutomaticTokensForwardingRITSBOT:
      description: Bitcoin Omni Token
      properties:
        propertyId:
          description: Defines the `propertyId` of the Omni Layer token.
          example: 31
          type: integer
      required:
      - propertyId
      type: object
    DeleteAutomaticTokensForwardingRITSET:
      description: Ethereum Token
      properties:
        contractAddress:
          description: Represents the specific `contractAddress` of the Token that
            will be forwarded.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - contractAddress
      type: object
    DeleteAutomaticTokensForwardingRI:
      example:
        confirmationsCount: 2
        feePriority: standard
        tokenData: null
        createdTimestamp: 1611238648
        feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
        minimumTransferAmount: "0.5"
        callbackUrl: https://example.com
        fromAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
        toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
        referenceId: 6017dd02a309213863be9e55
      properties:
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 2
          type: integer
        createdTimestamp:
          description: Defines the specific time/date when the automatic forwarding
            was created in Unix Timestamp.
          example: 1611238648
          type: integer
        feeAddress:
          description: "Represents the specific fee address, which is always automatically\
            \ generated. Users must fund it."
          example: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" or \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        fromAddress:
          description: Represents the hash of the address that forwards the tokens.
          example: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the tokens in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.5"
          type: string
        referenceId:
          description: Represents a unique ID used to reference the specific callback
            subscription.
          example: 6017dd02a309213863be9e55
          type: string
        toAddress:
          description: Represents the hash of the address the tokens are forwarded
            to.
          example: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
          type: string
        tokenData:
          $ref: '#/components/schemas/DeleteAutomaticTokensForwardingRITS'
      required:
      - callbackUrl
      - confirmationsCount
      - createdTimestamp
      - feeAddress
      - feePriority
      - fromAddress
      - minimumTransferAmount
      - referenceId
      - toAddress
      - tokenData
      type: object
    DeleteAutomaticTokensForwardingRITS:
      oneOf:
      - $ref: '#/components/schemas/DeleteAutomaticTokensForwardingRITSBOT'
      - $ref: '#/components/schemas/DeleteAutomaticTokensForwardingRITSET'
      type: object
    DeleteAutomaticTokensForwardingR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            confirmationsCount: 2
            feePriority: standard
            tokenData: null
            createdTimestamp: 1611238648
            feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
            minimumTransferAmount: "0.5"
            callbackUrl: https://example.com
            fromAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
            toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
            referenceId: 6017dd02a309213863be9e55
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DeleteAutomaticTokensForwardingR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    DeleteAutomaticTokensForwardingE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    DeleteAutomaticTokensForwardingE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    DeleteAutomaticTokensForwardingE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ValidateAddressRI:
      example:
        address: 15XyNC88pujwuuur8DCsXBCfEhJJMzHayU
        isValid: true
      properties:
        address:
          description: Represents the specific address that will be checked if it's
            valid or not.
          example: 15XyNC88pujwuuur8DCsXBCfEhJJMzHayU
          type: string
        isValid:
          description: Defines whether the address is valid or not. Set as boolean.
          example: true
          type: boolean
      required:
      - address
      - isValid
      type: object
    ValidateAddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            address: 15XyNC88pujwuuur8DCsXBCfEhJJMzHayU
            isValid: true
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ValidateAddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ValidateAddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ValidateAddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ValidateAddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetEIP1559FeeRecommendationsRI:
      example:
        baseFeePerGas:
          unit: WEI
          value: "45265143502"
        maxPriorityFeePerGas:
          standard: "41987372497"
          unit: WEI
          fast: "47085140300"
          slow: "37331114417"
        maxFeePerGas:
          standard: "69996407508"
          unit: WEI
          fast: "75235090892"
          slow: "67416761254"
      properties:
        baseFeePerGas:
          $ref: '#/components/schemas/GetEIP1559FeeRecommendationsRI_baseFeePerGas'
        maxFeePerGas:
          $ref: '#/components/schemas/GetEIP1559FeeRecommendationsRI_maxFeePerGas'
        maxPriorityFeePerGas:
          $ref: '#/components/schemas/GetEIP1559FeeRecommendationsRI_maxPriorityFeePerGas'
      required:
      - baseFeePerGas
      - maxFeePerGas
      - maxPriorityFeePerGas
      type: object
    GetEIP1559FeeRecommendationsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            baseFeePerGas:
              unit: WEI
              value: "45265143502"
            maxPriorityFeePerGas:
              standard: "41987372497"
              unit: WEI
              fast: "47085140300"
              slow: "37331114417"
            maxFeePerGas:
              standard: "69996407508"
              unit: WEI
              fast: "75235090892"
              slow: "67416761254"
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetEIP1559FeeRecommendationsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetEIP1559FeeRecommendationsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetEIP1559FeeRecommendationsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetEIP1559FeeRecommendationsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    BroadcastLocallySignedTransactionRI:
      example:
        transactionId: 347d96855d41b77f1e23048fff11c18e9fe699ee69b0b402338f34189734e0a2
      properties:
        transactionId:
          description: "Represents the unique identifier of a transaction, i.e. it\
            \ could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction\
            \ `hash` in Ethereum blockchain."
          example: 347d96855d41b77f1e23048fff11c18e9fe699ee69b0b402338f34189734e0a2
          type: string
      required:
      - transactionId
      type: object
    BroadcastLocallySignedTransactionR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            transactionId: 347d96855d41b77f1e23048fff11c18e9fe699ee69b0b402338f34189734e0a2
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/BroadcastLocallySignedTransactionR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    BroadcastLocallySignedTransactionE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    BroadcastLocallySignedTransactionE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    BroadcastLocallySignedTransactionE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    BroadcastLocallySignedTransactionE409:
      oneOf:
      - $ref: '#/components/schemas/InvalidData'
      - $ref: '#/components/schemas/AlreadyExists'
      type: object
    EstimateGasLimitRI:
      example:
        gasLimit: "550000"
      properties:
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "550000"
          type: string
      required:
      - gasLimit
      type: object
    EstimateGasLimitR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            gasLimit: "550000"
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/EstimateGasLimitR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    EstimateGasLimitE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    EstimateGasLimitE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    EstimateGasLimitE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    EstimateTokenGasLimitRI:
      example:
        gasLimit: "550000"
      properties:
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "550000"
          type: string
      required:
      - gasLimit
      type: object
    EstimateTokenGasLimitR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            gasLimit: "550000"
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/EstimateTokenGasLimitR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    EstimateTokenGasLimitE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    EstimateTokenGasLimitE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    EstimateTokenGasLimitE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    DecodeRawTransactionHexRI:
      example:
        size: 248
        blockchainSpeficicData: null
        transactionId: 00a8a090a7c78f64e4626e6720b305edd95fcd7865b5b45864a88070a8079cea
      properties:
        blockchainSpeficicData:
          $ref: '#/components/schemas/DecodeRawTransactionHexRIS'
        size:
          description: Represents the total size of this transaction.
          example: 248
          type: integer
        transactionId:
          description: Represents the decoded transaction hex.
          example: 00a8a090a7c78f64e4626e6720b305edd95fcd7865b5b45864a88070a8079cea
          type: string
      required:
      - blockchainSpeficicData
      - size
      - transactionId
      type: object
    DecodeRawTransactionHexR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            size: 248
            blockchainSpeficicData: null
            transactionId: 00a8a090a7c78f64e4626e6720b305edd95fcd7865b5b45864a88070a8079cea
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DecodeRawTransactionHexR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    DecodeRawTransactionHexE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    DecodeRawTransactionHexE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      - $ref: '#/components/schemas/InvalidTransactionHex'
      type: object
    DecodeRawTransactionHexE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    InvalidTransactionHex:
      description: invalid_transaction_hex
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: invalid_transaction_hex
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: The transaction Hex is invalid!
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    DecodeX-AddressRI:
      example:
        addressTag: 3999472835
        classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
      properties:
        addressTag:
          description: Defines a specific Tag that is an additional XRP address feature.
            It helps identifying a transaction recipient beyond a wallet address.
          example: 3999472835
          type: integer
        classicAddress:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          type: string
      required:
      - addressTag
      - classicAddress
      type: object
    DecodeX-AddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            addressTag: 3999472835
            classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/DecodeX_AddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    DecodeX-AddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    DecodeX-AddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      type: object
    DecodeX-AddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    EncodeX-AddressRI:
      example:
        xAddress: TVTMSyg6nRscAm2JtRd8hnpF9nD21CgZx6ibb9iy3EWHotV
      properties:
        xAddress:
          description: Represents the encoded classic address with its destination
            tag.
          example: TVTMSyg6nRscAm2JtRd8hnpF9nD21CgZx6ibb9iy3EWHotV
          type: string
      required:
      - xAddress
      type: object
    EncodeX-AddressR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            xAddress: TVTMSyg6nRscAm2JtRd8hnpF9nD21CgZx6ibb9iy3EWHotV
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/EncodeX_AddressR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    EncodeX-AddressE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    EncodeX-AddressE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      - $ref: '#/components/schemas/InvalidBlockchain'
      - $ref: '#/components/schemas/InvalidNetwork'
      type: object
    EncodeX-AddressE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    ListSupportedAssetsRI:
      properties:
        assetId:
          description: Defines the unique ID of the specific asset.
          example: 5b1ea92e584bf50020130615
          type: string
        assetName:
          description: Specifies the name of the asset in question.
          example: Bitcoin
          type: string
        assetSymbol:
          description: Specifies the asset's unique symbol in the Crypto APIs listings.
          example: BTC
          type: string
        assetType:
          description: Defines the type of the supported asset. This could be either
            "crypto" or "fiat".
          enum:
          - fiat
          - crypto
          example: crypto
          type: string
        originalSymbol:
          description: Specifies the asset's original symbol as introduced by its
            founders.
          example: BTC
          type: string
      required:
      - assetId
      - assetName
      - assetSymbol
      - assetType
      - originalSymbol
      type: object
    ListSupportedAssetsR:
      example:
        apiVersion: 2021-03-20
        data:
          total: 100
          offset: 0
          limit: 50
          items: []
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/ListSupportedAssetsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    ListSupportedAssetsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    ListSupportedAssetsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    ListSupportedAssetsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetExchangeRateByAssetSymbolsRI:
      example:
        rate: "54768.26745499848"
        fromAssetSymbol: BTC
        fromAssetId: 5b1ea92e584bf50020130612
        toAssetSymbol: USD
        calculationTimestamp: 1618577849
        toAssetId: 5b1ea92e584bf50020130615
      properties:
        calculationTimestamp:
          description: Defines the time of the market data used to calculate the exchange
            rate in UNIX Timestamp. Oldest possible timestamp is 30 days.
          example: 1618577849
          type: integer
        fromAssetId:
          description: Defines the base asset Reference ID to get a rate for.
          example: 5b1ea92e584bf50020130612
          type: string
        fromAssetSymbol:
          description: Defines the base asset symbol to get a rate for.
          example: BTC
          type: string
        rate:
          description: Defines the exchange rate between assets calculated by weighted
            average of the last trades in every exchange for the last 24 hours by
            giving more weight to exchanges with higher volume.
          example: "54768.26745499848"
          type: string
        toAssetId:
          description: Defines the relation asset Reference ID in which the base asset
            rate will be displayed.
          example: 5b1ea92e584bf50020130615
          type: string
        toAssetSymbol:
          description: Defines the relation asset symbol in which the base asset rate
            will be displayed.
          example: USD
          type: string
      required:
      - calculationTimestamp
      - fromAssetId
      - fromAssetSymbol
      - rate
      - toAssetId
      - toAssetSymbol
      type: object
    GetExchangeRateByAssetSymbolsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            rate: "54768.26745499848"
            fromAssetSymbol: BTC
            fromAssetId: 5b1ea92e584bf50020130612
            toAssetSymbol: USD
            calculationTimestamp: 1618577849
            toAssetId: 5b1ea92e584bf50020130615
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetExchangeRateByAssetSymbolsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetExchangeRateByAssetSymbolsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetExchangeRateByAssetSymbolsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetExchangeRateByAssetSymbolsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    CouldNotCalculateRateForPair:
      description: could_not_calculate_rate_for_pair
      properties:
        code:
          description: "Specifies an error code, e.g. error 404."
          example: could_not_calculate_rate_for_pair
          type: string
        message:
          description: "Specifies the message of the error, i.e. why the error was\
            \ returned, e.g. error 404 stands for “not found”."
          example: Rate could not be calculated due to not enough pair trades data.
          type: string
        details:
          items:
            $ref: '#/components/schemas/BannedIpAddress_details_inner'
          type: array
      required:
      - code
      - message
      type: object
    GetExchangeRateByAssetSymbolsE422:
      oneOf:
      - $ref: '#/components/schemas/InvalidRequestBodyStructure'
      - $ref: '#/components/schemas/CouldNotCalculateRateForPair'
      type: object
    GetExchangeRateByAssetsIDsRI:
      example:
        rate: "54691.40481689715"
        fromAssetSymbol: BTC
        fromAssetId: 5b1ea92e584bf50020130612
        toAssetSymbol: USD
        calculationTimestamp: 1618577849
        toAssetId: 5b1ea92e584bf50020130615
      properties:
        calculationTimestamp:
          description: Defines the time of the market data used to calculate the exchange
            rate in UNIX Timestamp. Oldest possible timestamp is 30 days.
          example: 1618577849
          type: integer
        fromAssetId:
          description: Defines the base asset Reference ID to get a rate for.
          example: 5b1ea92e584bf50020130612
          type: string
        fromAssetSymbol:
          description: Defines the base asset symbol to get a rate for.
          example: BTC
          type: string
        rate:
          description: Defines the exchange rate between assets calculated by weighted
            average of the last trades in every exchange for the last 24 hours by
            giving more weight to exchanges with higher volume.
          example: "54691.40481689715"
          type: string
        toAssetId:
          description: Defines the relation asset Reference ID in which the base asset
            rate will be displayed.
          example: 5b1ea92e584bf50020130615
          type: string
        toAssetSymbol:
          description: Defines the relation asset symbol in which the base asset rate
            will be displayed.
          example: USD
          type: string
      required:
      - calculationTimestamp
      - fromAssetId
      - fromAssetSymbol
      - rate
      - toAssetId
      - toAssetSymbol
      type: object
    GetExchangeRateByAssetsIDsR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            rate: "54691.40481689715"
            fromAssetSymbol: BTC
            fromAssetId: 5b1ea92e584bf50020130612
            toAssetSymbol: USD
            calculationTimestamp: 1618577849
            toAssetId: 5b1ea92e584bf50020130615
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetExchangeRateByAssetsIDsR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetExchangeRateByAssetsIDsE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetExchangeRateByAssetsIDsE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetExchangeRateByAssetsIDsE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetExchangeRateByAssetsIDsE422:
      oneOf:
      - $ref: '#/components/schemas/InvalidRequestBodyStructure'
      - $ref: '#/components/schemas/CouldNotCalculateRateForPair'
      type: object
    GetAssetDetailsByAssetIDRI:
      example:
        assetSymbol: BTC
        assetId: 5b1ea92e584bf50020130615
        assetLogo:
          imageData: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiI+PGcgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj48Y2lyY2xlIGN4PSIxNiIgY3k9IjE2IiByPSIxNiIgZmlsbD0iI0Y3OTMxQSIvPjxwYXRoIGZpbGw9IiNGRkYiIGZpbGwtcnVsZT0ibm9uemVybyIgZD0iTTIzLjE4OSAxNC4wMmMuMzE0LTIuMDk2LTEuMjgzLTMuMjIzLTMuNDY1LTMuOTc1bC43MDgtMi44NC0xLjcyOC0uNDMtLjY5IDIuNzY1Yy0uNDU0LS4xMTQtLjkyLS4yMi0xLjM4NS0uMzI2bC42OTUtMi43ODNMMTUuNTk2IDZsLS43MDggMi44MzljLS4zNzYtLjA4Ni0uNzQ2LS4xNy0xLjEwNC0uMjZsLjAwMi0uMDA5LTIuMzg0LS41OTUtLjQ2IDEuODQ2czEuMjgzLjI5NCAxLjI1Ni4zMTJjLjcuMTc1LjgyNi42MzguODA1IDEuMDA2bC0uODA2IDMuMjM1Yy4wNDguMDEyLjExLjAzLjE4LjA1N2wtLjE4My0uMDQ1LTEuMTMgNC41MzJjLS4wODYuMjEyLS4zMDMuNTMxLS43OTMuNDEuMDE4LjAyNS0xLjI1Ni0uMzEzLTEuMjU2LS4zMTNsLS44NTggMS45NzggMi4yNS41NjFjLjQxOC4xMDUuODI4LjIxNSAxLjIzMS4zMThsLS43MTUgMi44NzIgMS43MjcuNDMuNzA4LTIuODRjLjQ3Mi4xMjcuOTMuMjQ1IDEuMzc4LjM1N2wtLjcwNiAyLjgyOCAxLjcyOC40My43MTUtMi44NjZjMi45NDguNTU4IDUuMTY0LjMzMyA2LjA5Ny0yLjMzMy43NTItMi4xNDYtLjAzNy0zLjM4NS0xLjU4OC00LjE5MiAxLjEzLS4yNiAxLjk4LTEuMDAzIDIuMjA3LTIuNTM4em0tMy45NSA1LjUzOGMtLjUzMyAyLjE0Ny00LjE0OC45ODYtNS4zMi42OTVsLjk1LTMuODA1YzEuMTcyLjI5MyA0LjkyOS44NzIgNC4zNyAzLjExem0uNTM1LTUuNTY5Yy0uNDg3IDEuOTUzLTMuNDk1Ljk2LTQuNDcuNzE3bC44Ni0zLjQ1Yy45NzUuMjQzIDQuMTE4LjY5NiAzLjYxIDIuNzMzeiIvPjwvZz48L3N2Zz4=
          mimeType: image/svg+xml
          encoding: base64
        assetName: Bitcoin
        latestRate:
          amount: "61704.20995670996"
          unit: USD
          calculationTimestamp: 1636107864
        assetOriginalSymbol: BTC
        slug: bitcoin
        assetType: crypto
        specificData: null
      properties:
        assetId:
          description: Defines the unique ID of the specific asset.
          example: 5b1ea92e584bf50020130615
          type: string
        assetLogo:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDRI_assetLogo'
        assetName:
          description: Specifies the name of the asset in question.
          example: Bitcoin
          type: string
        assetOriginalSymbol:
          description: Specifies the asset's original symbol as introduced by its
            founders.
          example: BTC
          type: string
        assetSymbol:
          description: Specifies the asset's unique symbol in the Crypto APIs listings.
          example: BTC
          type: string
        assetType:
          description: Defines the type of the supported asset. This could be either
            "crypto" or "fiat".
          enum:
          - fiat
          - crypto
          example: crypto
          type: string
        latestRate:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDRI_latestRate'
        slug:
          description: Represents the asset`s unique slug string in Crypto APIs listings.
          example: bitcoin
          type: string
        specificData:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDRIS'
      required:
      - assetId
      - assetLogo
      - assetName
      - assetOriginalSymbol
      - assetSymbol
      - assetType
      - latestRate
      - specificData
      type: object
    GetAssetDetailsByAssetIDR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            assetSymbol: BTC
            assetId: 5b1ea92e584bf50020130615
            assetLogo:
              imageData: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiI+PGcgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj48Y2lyY2xlIGN4PSIxNiIgY3k9IjE2IiByPSIxNiIgZmlsbD0iI0Y3OTMxQSIvPjxwYXRoIGZpbGw9IiNGRkYiIGZpbGwtcnVsZT0ibm9uemVybyIgZD0iTTIzLjE4OSAxNC4wMmMuMzE0LTIuMDk2LTEuMjgzLTMuMjIzLTMuNDY1LTMuOTc1bC43MDgtMi44NC0xLjcyOC0uNDMtLjY5IDIuNzY1Yy0uNDU0LS4xMTQtLjkyLS4yMi0xLjM4NS0uMzI2bC42OTUtMi43ODNMMTUuNTk2IDZsLS43MDggMi44MzljLS4zNzYtLjA4Ni0uNzQ2LS4xNy0xLjEwNC0uMjZsLjAwMi0uMDA5LTIuMzg0LS41OTUtLjQ2IDEuODQ2czEuMjgzLjI5NCAxLjI1Ni4zMTJjLjcuMTc1LjgyNi42MzguODA1IDEuMDA2bC0uODA2IDMuMjM1Yy4wNDguMDEyLjExLjAzLjE4LjA1N2wtLjE4My0uMDQ1LTEuMTMgNC41MzJjLS4wODYuMjEyLS4zMDMuNTMxLS43OTMuNDEuMDE4LjAyNS0xLjI1Ni0uMzEzLTEuMjU2LS4zMTNsLS44NTggMS45NzggMi4yNS41NjFjLjQxOC4xMDUuODI4LjIxNSAxLjIzMS4zMThsLS43MTUgMi44NzIgMS43MjcuNDMuNzA4LTIuODRjLjQ3Mi4xMjcuOTMuMjQ1IDEuMzc4LjM1N2wtLjcwNiAyLjgyOCAxLjcyOC40My43MTUtMi44NjZjMi45NDguNTU4IDUuMTY0LjMzMyA2LjA5Ny0yLjMzMy43NTItMi4xNDYtLjAzNy0zLjM4NS0xLjU4OC00LjE5MiAxLjEzLS4yNiAxLjk4LTEuMDAzIDIuMjA3LTIuNTM4em0tMy45NSA1LjUzOGMtLjUzMyAyLjE0Ny00LjE0OC45ODYtNS4zMi42OTVsLjk1LTMuODA1YzEuMTcyLjI5MyA0LjkyOS44NzIgNC4zNyAzLjExem0uNTM1LTUuNTY5Yy0uNDg3IDEuOTUzLTMuNDk1Ljk2LTQuNDcuNzE3bC44Ni0zLjQ1Yy45NzUuMjQzIDQuMTE4LjY5NiAzLjYxIDIuNzMzeiIvPjwvZz48L3N2Zz4=
              mimeType: image/svg+xml
              encoding: base64
            assetName: Bitcoin
            latestRate:
              amount: "61704.20995670996"
              unit: USD
              calculationTimestamp: 1636107864
            assetOriginalSymbol: BTC
            slug: bitcoin
            assetType: crypto
            specificData: null
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetAssetDetailsByAssetIDE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetAssetDetailsByAssetIDE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetAssetDetailsByAssetIDE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    GetAssetDetailsByAssetSymbolRI:
      example:
        assetSymbol: BTC
        assetId: 5b1ea92e584bf50020130615
        assetLogo:
          imageData: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiI+PGcgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj48Y2lyY2xlIGN4PSIxNiIgY3k9IjE2IiByPSIxNiIgZmlsbD0iI0Y3OTMxQSIvPjxwYXRoIGZpbGw9IiNGRkYiIGZpbGwtcnVsZT0ibm9uemVybyIgZD0iTTIzLjE4OSAxNC4wMmMuMzE0LTIuMDk2LTEuMjgzLTMuMjIzLTMuNDY1LTMuOTc1bC43MDgtMi44NC0xLjcyOC0uNDMtLjY5IDIuNzY1Yy0uNDU0LS4xMTQtLjkyLS4yMi0xLjM4NS0uMzI2bC42OTUtMi43ODNMMTUuNTk2IDZsLS43MDggMi44MzljLS4zNzYtLjA4Ni0uNzQ2LS4xNy0xLjEwNC0uMjZsLjAwMi0uMDA5LTIuMzg0LS41OTUtLjQ2IDEuODQ2czEuMjgzLjI5NCAxLjI1Ni4zMTJjLjcuMTc1LjgyNi42MzguODA1IDEuMDA2bC0uODA2IDMuMjM1Yy4wNDguMDEyLjExLjAzLjE4LjA1N2wtLjE4My0uMDQ1LTEuMTMgNC41MzJjLS4wODYuMjEyLS4zMDMuNTMxLS43OTMuNDEuMDE4LjAyNS0xLjI1Ni0uMzEzLTEuMjU2LS4zMTNsLS44NTggMS45NzggMi4yNS41NjFjLjQxOC4xMDUuODI4LjIxNSAxLjIzMS4zMThsLS43MTUgMi44NzIgMS43MjcuNDMuNzA4LTIuODRjLjQ3Mi4xMjcuOTMuMjQ1IDEuMzc4LjM1N2wtLjcwNiAyLjgyOCAxLjcyOC40My43MTUtMi44NjZjMi45NDguNTU4IDUuMTY0LjMzMyA2LjA5Ny0yLjMzMy43NTItMi4xNDYtLjAzNy0zLjM4NS0xLjU4OC00LjE5MiAxLjEzLS4yNiAxLjk4LTEuMDAzIDIuMjA3LTIuNTM4em0tMy45NSA1LjUzOGMtLjUzMyAyLjE0Ny00LjE0OC45ODYtNS4zMi42OTVsLjk1LTMuODA1YzEuMTcyLjI5MyA0LjkyOS44NzIgNC4zNyAzLjExem0uNTM1LTUuNTY5Yy0uNDg3IDEuOTUzLTMuNDk1Ljk2LTQuNDcuNzE3bC44Ni0zLjQ1Yy45NzUuMjQzIDQuMTE4LjY5NiAzLjYxIDIuNzMzeiIvPjwvZz48L3N2Zz4=
          mimeType: image/svg+xml
          encoding: base64
        assetName: Bitcoin
        latestRate:
          amount: "61704.20995670996"
          unit: USD
          calculationTimestamp: 1636107864
        assetOriginalSymbol: BTC
        slug: bitcoin
        assetType: crypto
        specificData: null
      properties:
        assetId:
          description: Defines the unique ID of the specific asset.
          example: 5b1ea92e584bf50020130615
          type: string
        assetLogo:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDRI_assetLogo'
        assetName:
          description: Specifies the name of the asset in question.
          example: Bitcoin
          type: string
        assetOriginalSymbol:
          description: Specifies the asset's original symbol as introduced by its
            founders.
          example: BTC
          type: string
        assetSymbol:
          description: Specifies the asset's unique symbol in the Crypto APIs listings.
          example: BTC
          type: string
        assetType:
          description: Defines the type of the supported asset. This could be either
            "crypto" or "fiat".
          enum:
          - fiat
          - crypto
          example: crypto
          type: string
        latestRate:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDRI_latestRate'
        slug:
          description: Represents the asset`s unique slug string in Crypto APIs listings.
          example: bitcoin
          type: string
        specificData:
          $ref: '#/components/schemas/GetAssetDetailsByAssetSymbolRIS'
      required:
      - assetId
      - assetLogo
      - assetName
      - assetOriginalSymbol
      - assetSymbol
      - assetType
      - latestRate
      - specificData
      type: object
    GetAssetDetailsByAssetSymbolR:
      example:
        apiVersion: 2021-03-20
        data:
          item:
            assetSymbol: BTC
            assetId: 5b1ea92e584bf50020130615
            assetLogo:
              imageData: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiI+PGcgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj48Y2lyY2xlIGN4PSIxNiIgY3k9IjE2IiByPSIxNiIgZmlsbD0iI0Y3OTMxQSIvPjxwYXRoIGZpbGw9IiNGRkYiIGZpbGwtcnVsZT0ibm9uemVybyIgZD0iTTIzLjE4OSAxNC4wMmMuMzE0LTIuMDk2LTEuMjgzLTMuMjIzLTMuNDY1LTMuOTc1bC43MDgtMi44NC0xLjcyOC0uNDMtLjY5IDIuNzY1Yy0uNDU0LS4xMTQtLjkyLS4yMi0xLjM4NS0uMzI2bC42OTUtMi43ODNMMTUuNTk2IDZsLS43MDggMi44MzljLS4zNzYtLjA4Ni0uNzQ2LS4xNy0xLjEwNC0uMjZsLjAwMi0uMDA5LTIuMzg0LS41OTUtLjQ2IDEuODQ2czEuMjgzLjI5NCAxLjI1Ni4zMTJjLjcuMTc1LjgyNi42MzguODA1IDEuMDA2bC0uODA2IDMuMjM1Yy4wNDguMDEyLjExLjAzLjE4LjA1N2wtLjE4My0uMDQ1LTEuMTMgNC41MzJjLS4wODYuMjEyLS4zMDMuNTMxLS43OTMuNDEuMDE4LjAyNS0xLjI1Ni0uMzEzLTEuMjU2LS4zMTNsLS44NTggMS45NzggMi4yNS41NjFjLjQxOC4xMDUuODI4LjIxNSAxLjIzMS4zMThsLS43MTUgMi44NzIgMS43MjcuNDMuNzA4LTIuODRjLjQ3Mi4xMjcuOTMuMjQ1IDEuMzc4LjM1N2wtLjcwNiAyLjgyOCAxLjcyOC40My43MTUtMi44NjZjMi45NDguNTU4IDUuMTY0LjMzMyA2LjA5Ny0yLjMzMy43NTItMi4xNDYtLjAzNy0zLjM4NS0xLjU4OC00LjE5MiAxLjEzLS4yNiAxLjk4LTEuMDAzIDIuMjA3LTIuNTM4em0tMy45NSA1LjUzOGMtLjUzMyAyLjE0Ny00LjE0OC45ODYtNS4zMi42OTVsLjk1LTMuODA1YzEuMTcyLjI5MyA0LjkyOS44NzIgNC4zNyAzLjExem0uNTM1LTUuNTY5Yy0uNDg3IDEuOTUzLTMuNDk1Ljk2LTQuNDcuNzE3bC44Ni0zLjQ1Yy45NzUuMjQzIDQuMTE4LjY5NiAzLjYxIDIuNzMzeiIvPjwvZz48L3N2Zz4=
              mimeType: image/svg+xml
              encoding: base64
            assetName: Bitcoin
            latestRate:
              amount: "61704.20995670996"
              unit: USD
              calculationTimestamp: 1636107864
            assetOriginalSymbol: BTC
            slug: bitcoin
            assetType: crypto
            specificData: null
        requestId: 601c1710034ed6d407996b30
        context: yourExampleString
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        data:
          $ref: '#/components/schemas/GetAssetDetailsByAssetSymbolR_data'
      required:
      - apiVersion
      - data
      - requestId
      type: object
    GetAssetDetailsByAssetSymbolE401:
      oneOf:
      - $ref: '#/components/schemas/MissingApiKey'
      - $ref: '#/components/schemas/InvalidApiKey'
      type: object
    GetAssetDetailsByAssetSymbolE400:
      oneOf:
      - $ref: '#/components/schemas/UriNotFound'
      - $ref: '#/components/schemas/LimitGreaterThanAllowed'
      - $ref: '#/components/schemas/InvalidPagination'
      type: object
    GetAssetDetailsByAssetSymbolE403:
      oneOf:
      - $ref: '#/components/schemas/BannedIpAddress'
      - $ref: '#/components/schemas/EndpointNotAllowedForPlan'
      - $ref: '#/components/schemas/EndpointNotAllowedForApiKey'
      - $ref: '#/components/schemas/FeatureMainnetsNotAllowedForPlan'
      type: object
    TransactionRequestApproval:
      example:
        apiVersion: 2021-03-20
        data:
          product: WALLET_AS_A_SERVICE
          item:
            requiredApprovals: 2
            currentRejections: 0
            blockchain: ethereum
            requiredRejections: 2
            network: ropsten
            currentApprovals: 1
          event: TRANSACTION_REQUEST_APPROVAL
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/TransactionRequestApproval_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    TransactionRequestRejection:
      example:
        apiVersion: 2021-03-20
        data:
          product: WALLET_AS_A_SERVICE
          item:
            requiredApprovals: 2
            currentRejections: 2
            blockchain: ethereum
            requiredRejections: 2
            network: ropsten
            currentApprovals: 0
          event: TRANSACTION_REQUEST_REJECTION
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/TransactionRequestRejection_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    TransactionRequestBroadcasted:
      example:
        apiVersion: 2021-03-20
        data:
          product: WALLET_AS_A_SERVICE
          item:
            requiredApprovals: 5
            currentRejections: 1
            blockchain: Bitcoin/Ethereum (whichever applicable)
            requiredRejections: 2
            transactionId: 4e78f606bc42534744e223f54b85d5bbd54a3949f54eb8fac31d73028c286e31
            network: Testnet/Mainnet (whichever applicable)
            currentApprovals: 2
          event: TRANSACTION_REQUEST_BROADCASTED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/TransactionRequestBroadcasted_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    TransactionRequestMined:
      example:
        apiVersion: 2021-03-20
        data:
          product: WALLET_AS_A_SERVICE
          item:
            requiredApprovals: 5
            currentRejections: 1
            blockchain: Bitcoin/Ethereum (whichever applicable)
            requiredRejections: 2
            transactionId: 4e78f606bc42534744e223f54b85d5bbd54a3949f54eb8fac31d73028c286e31
            network: Testnet/Mainnet (whichever applicable)
            currentApprovals: 2
          event: TRANSACTION_REQUEST_MINED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/TransactionRequestMined_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    TransactionRequestFail:
      example:
        apiVersion: 2021-03-20
        data:
          product: WALLET_AS_A_SERVICE
          item:
            requiredApprovals: 2
            currentRejections: 0
            blockchain: ethereum
            requiredRejections: 2
            errorMessage: Transaction_Request_Failed
            network: ropsten
            currentApprovals: 0
          event: TRANSACTION_REQUEST_FAIL
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/TransactionRequestFail_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    AddressCoinsTransactionUnconfirmed:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            amount: "0.6508984"
            unit: BTC
            address: 3CzKAnCXt7ePb5NCp5qrAEimrxjY81oLoT
            blockchain: bitcoin
            firstSeenInMempoolTimestamp: 1610365615
            transactionId: 4b2159770f75a7200ea168eb56ebbf3303b025d838f743fb6e785bc32d5ac65b
            network: testnet
            direction: incoming
          event: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/AddressCoinsTransactionUnconfirmed_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    AddressTokensTransactionUnconfirmedErc-20:
      description: ERC-20
      properties:
        name:
          description: Specifies the name of the token.
          example: Tether USD
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: USDT
          type: string
        decimals:
          description: Defines how many decimals can be used to break the token.
          example: "6"
          type: string
        amount:
          description: Defines the amount of tokens sent with the transaction that
            is pending confirmation.
          example: "10.5"
          type: string
        contractAddress:
          description: Defines the address of the contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - amount
      - contractAddress
      - name
      - symbol
      type: object
    AddressTokensTransactionUnconfirmedErc-721:
      description: ERC-721
      properties:
        name:
          description: Specifies the name of the token.
          example: Wonky Stonks
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: WSTK
          type: string
        tokenId:
          description: Specifies the unique ID of the token.
          example: "5027"
          type: string
        contractAddress:
          description: Specifies the address of the contract.
          example: 0x518ba36f1ca6dfe3bb1b098b8dd0444030e79d9f
          type: string
      required:
      - contractAddress
      - name
      - symbol
      - tokenId
      type: object
    AddressTokensTransactionUnconfirmedOmni:
      description: OMNI
      properties:
        name:
          description: Specifies the name of the token.
          example: TetherUSDT
          type: string
        propertyId:
          description: Defines the ID of the property for Omni Layer.
          example: "31"
          type: string
        transactionType:
          description: Defines the type of the transaction made.
          example: "Simple Send, DEx Purchase etc."
          type: string
        createdByTransactionId:
          description: The transaction ID used to create the token.
          example: be5be71feac9e7019fbcdea5a87098a7862a0ee8c60bd5809b4d3b0cda940ddc
          type: string
        amount:
          description: Defines the amount of tokens sent with the transaction that
            is pending confirmation.
          example: "110.531723"
          type: string
      required:
      - amount
      - createdByTransactionId
      - name
      - propertyId
      - transactionType
      type: object
    AddressTokensTransactionUnconfirmedToken:
      oneOf:
      - $ref: '#/components/schemas/AddressTokensTransactionUnconfirmedErc-20'
      - $ref: '#/components/schemas/AddressTokensTransactionUnconfirmedErc-721'
      - $ref: '#/components/schemas/AddressTokensTransactionUnconfirmedOmni'
      type: object
    AddressTokensTransactionUnconfirmed:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            address: 0x65b895f400dae5541d70cbbec07527210158f6e2
            blockchain: ethereum
            firstSeenInMempoolTimestamp: 1210363220
            tokenType: ERC-20
            transactionId: 0x76670f3bb45c09e69173fe74834face446edf251c5f02ec30384a0957fce482b
            network: ropsten
            token: null
            direction: incoming
          event: ADDRESS_TOKENS_TRANSACTION_UNCONFIRMED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/AddressTokensTransactionUnconfirmed_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    AddressCoinsTransactionConfirmed:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            minedInBlock:
              hash: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
              height: 667861
              timestamp: 1610365213
            amount: "0.0315"
            unit: BTC
            address: bc1qmjhy4exylset37e6sfjdtfksm8kpcrxknj7cag
            blockchain: bitcoin
            transactionId: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
            network: testnet
            direction: incoming
          event: ADDRESS_COINS_TRANSACTION_CONFIRMED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/AddressCoinsTransactionConfirmed_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    AddressTokensTransactionConfirmedErc-20:
      description: ERC-20
      properties:
        name:
          description: Specifies the name of the token.
          example: Tether USD
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: USDT
          type: string
        decimals:
          description: Defines how many decimals can be used to break the token.
          example: "6"
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "0.00039"
          type: string
        contractAddress:
          description: Defines the address of the contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - amount
      - contractAddress
      - name
      - symbol
      type: object
    AddressTokensTransactionConfirmedErc-721:
      description: ERC-721
      properties:
        name:
          description: Specifies the name of the token.
          example: Wonky Stonks
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: WSTK
          type: string
        tokenId:
          description: Specifies the ID of the token.
          example: "5027"
          type: string
        contractAddress:
          description: Specifies the address of the contract.
          example: 0x518ba36f1ca6dfe3bb1b098b8dd0444030e79d9f
          type: string
      required:
      - contractAddress
      - name
      - symbol
      - tokenId
      type: object
    AddressTokensTransactionConfirmedOmni:
      description: OMNI
      properties:
        name:
          description: Specifies the name of the token.
          example: Tether-USDT
          type: string
        propertyId:
          description: Defines the ID of the property for Omni Layer.
          example: "31"
          type: string
        transactionType:
          description: Defines the type of the transaction.
          example: "Simple Send, DEx Purchase etc."
          type: string
        createdByTransactionId:
          description: The transaction ID used to create the token.
          example: be5be71feac9e7019fbcdea5a87098a7862a0ee8c60bd5809b4d3b0cda940ddc
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "110.531723"
          type: string
      required:
      - amount
      - createdByTransactionId
      - name
      - propertyId
      - transactionType
      type: object
    AddressTokensTransactionConfirmedBep-20:
      description: BEP-20
      properties:
        name:
          description: Specifies the name of the token.
          example: BEP-20
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: BEST
          type: string
        decimals:
          description: Defines how many decimals can be used to break the token.
          example: "8"
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "0.00039"
          type: string
        contractAddress:
          description: Defines the address of the contract.
          example: 0xc4a9f4217748390f597e79050de41a39293345d2
          type: string
      required:
      - amount
      - contractAddress
      - name
      - symbol
      type: object
    AddressTokensTransactionConfirmedToken:
      oneOf:
      - $ref: '#/components/schemas/AddressTokensTransactionConfirmedErc-20'
      - $ref: '#/components/schemas/AddressTokensTransactionConfirmedErc-721'
      - $ref: '#/components/schemas/AddressTokensTransactionConfirmedOmni'
      - $ref: '#/components/schemas/AddressTokensTransactionConfirmedBep-20'
      type: object
    AddressTokensTransactionConfirmed:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            minedInBlock:
              hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
              height: 657915
              timestamp: 1586365500
            address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
            blockchain: ethereum
            tokenType: ERC-20
            transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
            network: ropsten
            token: null
            direction: incoming
          event: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmed_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    AddressTokensTransactionConfirmedEachConfirmationErc-20:
      description: ERC-20
      properties:
        name:
          description: Specifies the name of the token.
          example: Tether USD
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: USDT
          type: string
        decimals:
          description: Defines how many decimals can be used to break the token.
          example: "6"
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "11.9"
          type: string
        contractAddress:
          description: Defines the address of the contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - amount
      - contractAddress
      - name
      - symbol
      type: object
    AddressTokensTransactionConfirmedEachConfirmationErc-721:
      description: ERC-721
      properties:
        name:
          description: Specifies the name of the token.
          example: Wonky Stonks
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: WSTK
          type: string
        tokenId:
          description: Specifies the ID of the token.
          example: "5027"
          type: string
        contractAddress:
          description: Specifies the address of the contract.
          example: 0x518ba36f1ca6dfe3bb1b098b8dd0444030e79d9f
          type: string
      required:
      - contractAddress
      - name
      - symbol
      - tokenId
      type: object
    AddressTokensTransactionConfirmedEachConfirmationOmni:
      description: OMNI
      properties:
        name:
          description: Specifies the name of the token.
          example: TetherUSDT
          type: string
        propertyId:
          description: Defines the ID of the property for Omni Layer.
          example: "31"
          type: string
        transactionType:
          description: Defines the type of the transaction.
          example: "Simple Send, DEx Purchase etc."
          type: string
        createdByTransactionId:
          description: The transaction ID used to create the token.
          example: be5be71feac9e7019fbcdea5a87098a7862a0ee8c60bd5809b4d3b0cda940ddc
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "190.531725"
          type: string
      required:
      - amount
      - createdByTransactionId
      - name
      - propertyId
      - transactionType
      type: object
    AddressTokensTransactionConfirmedEachConfirmationBep-20:
      description: BEP-20
      properties:
        name:
          description: Specifies the name of the token.
          example: BEP-20
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: BEST
          type: string
        decimals:
          description: Defines how many decimals can be used to break the token.
          example: "8"
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "0.00039"
          type: string
        contractAddress:
          description: Defines the address of the contract.
          example: 0xc4a9f4217748390f597e79050de41a39293345d2
          type: string
      required:
      - amount
      - contractAddress
      - name
      - symbol
      type: object
    AddressTokensTransactionConfirmedEachConfirmationToken:
      oneOf:
      - $ref: '#/components/schemas/AddressTokensTransactionConfirmedEachConfirmationErc-20'
      - $ref: '#/components/schemas/AddressTokensTransactionConfirmedEachConfirmationErc-721'
      - $ref: '#/components/schemas/AddressTokensTransactionConfirmedEachConfirmationOmni'
      - $ref: '#/components/schemas/AddressTokensTransactionConfirmedEachConfirmationBep-20'
      type: object
    AddressTokensTransactionConfirmedEachConfirmation:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            currentConfirmations: 2
            minedInBlock:
              hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
              height: 657915
              timestamp: 1586365500
            address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
            blockchain: ethereum
            tokenType: ERC-20
            transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
            network: ropsten
            targetConfirmations: 3
            token: null
            direction: incoming
          event: ADDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmedEachConfirmation_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    AddressCoinsTransactionConfirmedEachConfirmation:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            currentConfirmations: 8
            minedInBlock:
              hash: dfe45f6724b550c281107ffaa5880cb280878fb4dbaa742aa21449f3d2340c13
              height: 667754
              timestamp: 1610365314
            amount: "0.0611"
            unit: BTC
            address: 15282N4BYEwYh3j1dTgJu64Ey5qWn9Po9F
            blockchain: bitcoin
            transactionId: cbd3dea703bd2bc78bca69ee61ca14e6ffcdd809d07ebbc3b8fea3c30ea38f33
            network: testnet
            targetConfirmations: 12
            direction: incoming
          event: ADDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/AddressCoinsTransactionConfirmedEachConfirmation_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    TransactionMined:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            minedInBlock:
              hash: e9da0c8ce1861050c20f40fb660df4d13399f50b882e85bcd98126eb1173cc50
              height: 667900
              timestamp: 1610355613
            blockchain: bitcoin
            transactionId: e6439461e5bf8920e75740896d4b47730b844837295e8c3f2dbf441542aebcb6
            network: testnet
          event: TRANSACTION_MINED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/TransactionMined_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    BlockMined:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            blockchain: bitcoin
            hash: 00000000000000000006ddb5e854505f8b792122b0ac9469c07eb26db414f6fb
            network: testnet
            height: 570008
            timestamp: 1610365615
          event: BLOCK_MINED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/BlockMined_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    BlockHeightReached:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            blockchain: bitcoin
            hash: 00000000000000000006ddb5e854505f8b792122b0ac9469c07eb26db414f6fb
            network: testnet
            height: 667900
            timestamp: 1610365615
          event: BLOCK_HEIGHT_REACHED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/BlockHeightReached_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    AddressInternalTransactionConfirmed:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_DATA
          item:
            minedInBlock:
              hash: 0xa787415dc7c7025a43b87542a57872d1127f30f95daa87097cf5f26ef79d6950
              height: 12567093
              timestamp: 1622797821
            amount: "0.94891479938916527"
            unit: ETH
            address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
            blockchain: ethereum
            operationId: call_5_0
            network: mainnet
            parentTransactionId: 0xc3be8371b32fa2238c44271643446b14c87ff11b77d58f9a1bceb1d1253e79b2
            direction: outgoing
          event: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/AddressInternalTransactionConfirmed_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    AddressInternalTransactionConfirmedEachConfirmation:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_DATA
          item:
            currentConfirmations: 2
            minedInBlock:
              hash: 0x936a34ef544e6fc9fc5f68fb086b9e8ea0e5eca52cb45cb67b27d174bccc35a5
              height: 12566992
              timestamp: 1622796751
            amount: "0.05710541741945074"
            unit: ETH
            address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
            blockchain: ethereum
            operationId: call_1_0_1_0_3_0
            network: mainnet
            parentTransactionId: 0x5fc77216fdfb8c966387030be7bda4bacce0232f7115722ef5b228a223974784
            targetConfirmations: 3
            direction: outgoing
          event: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/AddressInternalTransactionConfirmedEachConfirmation_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    ConfirmedCoinsTransactionForCertainAmountOrHigher:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            minedInBlock:
              hash: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
              height: 667861
              timestamp: 1610365213
            amount: "0.0315"
            unit: BTC
            blockchain: bitcoin
            transactionId: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
            network: testnet
          event: CONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/ConfirmedCoinsTransactionForCertainAmountOrHigher_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    ConfirmedTokensTransactionForCertainAmountOrHigherErc-20:
      description: ERC-20
      properties:
        name:
          description: Specifies the name of the token.
          example: Tether USD
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: USDT
          type: string
        decimals:
          description: Defines how many decimals can be used to break the token.
          example: "6"
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "0.00039"
          type: string
        contractAddress:
          description: Defines the address of the contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - amount
      - contractAddress
      - name
      - symbol
      type: object
    ConfirmedTokensTransactionForCertainAmountOrHigherErc-721:
      description: ERC-721
      properties:
        name:
          description: Specifies the name of the token.
          example: Wonky Stonks
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: WSTK
          type: string
        tokenId:
          description: Specifies the ID of the token.
          example: "5027"
          type: string
        contractAddress:
          description: Specifies the address of the contract.
          example: 0x518ba36f1ca6dfe3bb1b098b8dd0444030e79d9f
          type: string
      required:
      - contractAddress
      - name
      - symbol
      - tokenId
      type: object
    ConfirmedTokensTransactionForCertainAmountOrHigherBep-20:
      description: BEP-20
      properties:
        name:
          description: Specifies the name of the token.
          example: Tether-USDT
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: WSTK
          type: string
        decimals:
          description: Defines how many decimals can be used to break the token.
          example: "5"
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "110.531723"
          type: string
        contractAddress:
          description: Defines the address of the contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - amount
      - contractAddress
      - name
      - symbol
      type: object
    ConfirmedTokensTransactionForCertainAmountOrHigherToken:
      oneOf:
      - $ref: '#/components/schemas/ConfirmedTokensTransactionForCertainAmountOrHigherErc-20'
      - $ref: '#/components/schemas/ConfirmedTokensTransactionForCertainAmountOrHigherErc-721'
      - $ref: '#/components/schemas/ConfirmedTokensTransactionForCertainAmountOrHigherBep-20'
      type: object
    ConfirmedTokensTransactionForCertainAmountOrHigher:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            minedInBlock:
              hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
              height: 657915
              timestamp: 1586365500
            blockchain: ethereum
            tokenType: ERC-20
            transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
            network: ropsten
            token: null
          event: CONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/ConfirmedTokensTransactionForCertainAmountOrHigher_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    ConfirmedInternalTransactionForCertainAmountOrHigher:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_EVENTS
          item:
            minedInBlock:
              hash: 0xa787415dc7c7025a43b87542a57872d1127f30f95daa87097cf5f26ef79d6950
              height: 12567093
              timestamp: 1622797821
            amount: "0.94891479938916527"
            unit: ETH
            address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
            blockchain: ethereum
            operationId: call_5_0
            network: ropsten
            parentTransactionId: 0xc3be8371b32fa2238c44271643446b14c87ff11b77d58f9a1bceb1d1253e79b2
          event: CONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/ConfirmedInternalTransactionForCertainAmountOrHigher_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    CoinsForwardingSuccess:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_AUTOMATIONS
          item:
            spentFeesUnit: BTC
            forwardedUnit: BTC
            spentFeesAmount: "0.00022827"
            blockchain: bitcoin
            forwardingTransactionId: 2241b5264fac8acb92e9fc597035b99cdd22f6578d63c6f52b099729f7c4f979
            fromAddress: mmd963W1fECjLyaDCHcioSCZYHkRwjkGST
            forwardedAmount: "00059441"
            toAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
            network: testnet
            triggerTransactionId: 86a7546bde4ac28b34504909d138592a6d6fc1277ea1f8f2f9c75dc04bdf3b7b
          event: COINS_FORWARDING_SUCCESS
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/CoinsForwardingSuccess_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    CoinsForwardingFail:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_AUTOMATIONS
          item:
            blockchain: bitcoin
            errorMessage: Address not found
            errorCode: blockchain_data_address_not_found
            fromAddress: 38RTQQ8915tEmKFMjpPJPfrh9yV5HbJCRb
            toAddress: 1PkLrGoEGiGdmqNXX8daYNFvVVTjmWjc7m
            network: testnet
            triggerTransactionId: 7e56c9cfaec36c77049ce5298bc153bb03b0b6b5dae760a62915617015f8e2a6
          event: COINS_FORWARDING_FAIL
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/CoinsForwardingFail_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    TokensForwardingSuccessErc-20:
      description: ERC-20
      properties:
        name:
          description: Specifies the name of the token.
          example: Tether USD
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: USDT
          type: string
        decimals:
          description: Defines how many decimals can be used to break the token.
          example: "6"
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "0.00039"
          type: string
        contractAddress:
          description: Defines the address of the contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - amount
      - contractAddress
      - name
      - symbol
      type: object
    TokensForwardingSuccessErc-721:
      description: ERC-721
      properties:
        name:
          description: Specifies the name of the token.
          example: Wonky Stonks
          type: string
        symbol:
          description: "Specifies an identifier of the token, where up to five alphanumeric\
            \ characters can be used for it."
          example: WSTK
          type: string
        tokenId:
          description: Specifies the ID of the token.
          example: "5027"
          type: string
        contractAddress:
          description: Specifies the address of the contract.
          example: 0x518ba36f1ca6dfe3bb1b098b8dd0444030e79d9f
          type: string
      required:
      - contractAddress
      - name
      - symbol
      - tokenId
      type: object
    TokensForwardingSuccessOmni:
      description: OMNI
      properties:
        name:
          description: Specifies the name of the token.
          example: TetherUSDT
          type: string
        propertyId:
          description: Defines the ID of the property for Omni Layer.
          example: "31"
          type: string
        transactionType:
          description: Defines the type of the transaction.
          example: "Simple Send, DEx Purchase etc."
          type: string
        createdByTransactionId:
          description: The transaction ID used to create the token.
          example: be5be71feac9e7019fbcdea5a87098a7862a0ee8c60bd5809b4d3b0cda940ddc
          type: string
        amount:
          description: Defines the amount of tokens sent with the confirmed transaction.
          example: "110.531723"
          type: string
      required:
      - amount
      - createdByTransactionId
      - name
      - propertyId
      - transactionType
      type: object
    TokensForwardingSuccessToken:
      oneOf:
      - $ref: '#/components/schemas/TokensForwardingSuccessErc-20'
      - $ref: '#/components/schemas/TokensForwardingSuccessErc-721'
      - $ref: '#/components/schemas/TokensForwardingSuccessOmni'
      type: object
    TokensForwardingSuccess:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_AUTOMATIONS
          item:
            spentFeesUnit: BTC
            spentFeesAmount: "0.00013601"
            blockchain: bitcoin
            forwardingTransactionId: b15ab5bbaf5107d551ae1b50181f4c55959205c4ff843e3c10d86d00e690fc72
            fromAddress: mySJoZ6wsjrKXZQRWpGoeBW5KkdKGL79Xz
            tokenType: OMNI
            toAddress: mmd963W1fECjLyaDCHcioSCZYHkRwjkGST
            network: testnet
            triggerTransactionId: 6ed1f1c8f2887a78ee8c45a975d928ca63eafc7b63def56324606ddd3cc9854f
            token: null
          event: TOKENS_FORWARDING_SUCCESS
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/TokensForwardingSuccess_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    TokensForwardingFail:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_AUTOMATIONS
          item:
            blockchain: bitcoin
            errorMessage: You have insufficient credits.
            errorCode: FEE_ADDRESS_OUT_OF_FUNDS
            fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
            toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
            network: testnet
            triggerTransactionId: ba1a4e661d36457abc46ea0effef0105f639912119fc64df8fb866118ce7c0d8
          event: TOKENS_FORWARDING_FAIL
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/TokensForwardingFail_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    BroadcastTransactionSuccess:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_TOOLS
          item:
            blockchain: Bitcoin/Ethereum (whichever applicable)
            transactionId: 347d96855d41b77f1e23048fff11c18e9fe699ee69b0b402338f34189734e0a2
            network: Testnet/Mainnet (whichever applicable)
          event: BROADCAST_TRANSACTION_SUCCESS
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/BroadcastTransactionSuccess_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    BroadcastTransactionFail:
      example:
        apiVersion: 2021-03-20
        data:
          product: BLOCKCHAIN_TOOLS
          item:
            blockchain: Bitcoin/Ethereum (whichever applicable)
            errorMessage: Transaction already in block chain
            transactionId: d83c75dd0f73425a1a85023ba25bc7ff47333c823a0ea19fac28d4abe59fd612
            network: Testnet/Mainnet (whichever applicable)
          event: BROADCAST_TRANSACTION_FAIL
        idempotencyKey: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
        referenceId: 6038d09050653d1f0e40584c
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        referenceId:
          description: "Represents a unique identifier that serves as reference to\
            \ the specific request which prompts a callback, e.g. Blockchain Events\
            \ Subscription, Blockchain Automation, etc."
          example: 6038d09050653d1f0e40584c
          type: string
        idempotencyKey:
          description: Specifies a unique ID generated by the system and attached
            to each callback. It is used by the server to recognize consecutive requests
            with the same data with the purpose not to perform the same operation
            twice.
          example: e55bf7a4a7188855f1c27541a6c387d04cc3b22ee34d1304b0e6ecad61c9906c
          type: string
        data:
          $ref: '#/components/schemas/BroadcastTransactionFail_data'
      required:
      - apiVersion
      - data
      - idempotencyKey
      - referenceId
      type: object
    Convert_Bitcoin_Cash_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ConvertBitcoinCashAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Convert_Bitcoin_Cash_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ConvertBitcoinCashAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Convert_Bitcoin_Cash_Address_402_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/InsufficientCredits'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Convert_Bitcoin_Cash_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ConvertBitcoinCashAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Convert_Bitcoin_Cash_Address_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/InvalidData'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Convert_Bitcoin_Cash_Address_415_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/UnsupportedMediaType'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Convert_Bitcoin_Cash_Address_422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/InvalidRequestBodyStructure'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Convert_Bitcoin_Cash_Address_429_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/RequestLimitReached'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Convert_Bitcoin_Cash_Address_500_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/UnexpectedServerError'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Balance_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressBalanceE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Balance_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressBalanceE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Balance_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressBalanceE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Details_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressDetailsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Details_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressDetailsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Details_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressDetailsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Address_Details_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleAddressDetailsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Address_Details_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleAddressDetailsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Address_Details_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleAddressDetailsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Address_Details_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaAddressDetailsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Address_Details_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaAddressDetailsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Address_Details_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaAddressDetailsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Details_By_Transaction_ID_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Details_By_Transaction_ID_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Details_By_Transaction_ID_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Details_By_Transaction_ID_404_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BlockchainDataTransactionNotFound'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Transaction_Details_By_Transaction_ID_404_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ResourceNotFound'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Deposit_Addresses_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListDepositAddressesE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Deposit_Addresses_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListDepositAddressesE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Deposit_Addresses_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListDepositAddressesE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Generate_Deposit_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GenerateDepositAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Generate_Deposit_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GenerateDepositAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Generate_Deposit_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GenerateDepositAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Transaction_Details_by_Transaction_ID_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Transaction_Details_by_Transaction_ID_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Transaction_Details_by_Transaction_ID_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Transactions_By_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Transactions_By_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Transactions_By_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_by_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_by_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_by_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_Request_from_Wallet_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_Request_from_Wallet_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_Request_from_Wallet_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_Request_from_Wallet_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_by_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_by_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_by_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unconfirmed_Transactions_by_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unconfirmed_Transactions_by_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unconfirmed_Transactions_by_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Address_And_Time_Range_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressAndTimeRangeE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Address_And_Time_Range_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressAndTimeRangeE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Address_And_Time_Range_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressAndTimeRangeE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Transactions_by_Block_Hash_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTransactionsByBlockHashE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Transactions_by_Block_Hash_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTransactionsByBlockHashE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Transactions_by_Block_Hash_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTransactionsByBlockHashE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Block_Hash_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Block_Hash_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Block_Hash_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_Request_from_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_Request_from_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_Request_from_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_Request_from_Address_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_By_Block_Hash_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHashE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_By_Block_Hash_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHashE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_By_Block_Hash_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHashE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_By_Block_Height_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHeightE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_By_Block_Height_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHeightE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Zilliqa_Transactions_By_Block_Height_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHeightE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Block_Height_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Block_Height_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_XRP__Ripple__Transactions_By_Block_Height_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Transactions_by_Block_Height_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Transactions_by_Block_Height_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Transactions_by_Block_Height_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Transactions_by_Block_Height_404_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BlockchainDataBlockNotFound'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_From_Address_For_Whole_Amount_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_From_Address_For_Whole_Amount_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_From_Address_For_Whole_Amount_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Coins_Transaction_From_Address_For_Whole_Amount_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Height_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Height_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Height_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Block_Details_By_Block_Height_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Block_Details_By_Block_Height_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Block_Details_By_Block_Height_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Block_Details_By_Block_Height_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHeightE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Block_Details_By_Block_Height_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHeightE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Block_Details_By_Block_Height_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHeightE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Hash_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Hash_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Hash_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Block_Details_By_Block_Hash_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHashE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Block_Details_By_Block_Hash_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHashE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_XRP__Ripple__Block_Details_By_Block_Hash_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHashE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Block_Details_By_Block_Hash_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHashE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Block_Details_By_Block_Hash_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHashE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Zilliqa_Block_Details_By_Block_Hash_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHashE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Supported_Tokens_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSupportedTokensE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Supported_Tokens_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSupportedTokensE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Supported_Tokens_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSupportedTokensE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Wallet_Asset_Details_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetWalletAssetDetailsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Wallet_Asset_Details_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetWalletAssetDetailsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Wallet_Asset_Details_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetWalletAssetDetailsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Fungible_Tokens_Transaction_Request_from_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Fungible_Tokens_Transaction_Request_from_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Fungible_Tokens_Transaction_Request_from_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Fungible_Tokens_Transaction_Request_from_Address_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_All_Assets_From_All_Wallets_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListAllAssetsFromAllWalletsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_All_Assets_From_All_Wallets_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListAllAssetsFromAllWalletsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_All_Assets_From_All_Wallets_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListAllAssetsFromAllWalletsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_All_Assets_By_Wallet_ID_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListAllAssetsByWalletIDE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_All_Assets_By_Wallet_ID_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListAllAssetsByWalletIDE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_All_Assets_By_Wallet_ID_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListAllAssetsByWalletIDE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Last_Mined_Block_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLastMinedBlockE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Last_Mined_Block_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLastMinedBlockE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Last_Mined_Block_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLastMinedBlockE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Latest_Mined_XRP__Ripple__Block_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Latest_Mined_XRP__Ripple__Block_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Latest_Mined_XRP__Ripple__Block_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Latest_Mined_Zilliqa_Block_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLatestMinedZilliqaBlockE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Latest_Mined_Zilliqa_Block_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLatestMinedZilliqaBlockE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Latest_Mined_Zilliqa_Block_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetLatestMinedZilliqaBlockE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Request_Details_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionRequestDetailsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Request_Details_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionRequestDetailsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Request_Details_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionRequestDetailsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Single_Transaction_Request_From_Address_Without_Fee_Priority_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Single_Transaction_Request_From_Address_Without_Fee_Priority_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Single_Transaction_Request_From_Address_Without_Fee_Priority_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Single_Transaction_Request_From_Address_Without_Fee_Priority_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Latest_Mined_Blocks_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListLatestMinedBlocksE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Latest_Mined_Blocks_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListLatestMinedBlocksE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Latest_Mined_Blocks_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListLatestMinedBlocksE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_HD_Wallet__xPub__yPub__zPub__400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_HD_Wallet__xPub__yPub__zPub__401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_HD_Wallet__xPub__yPub__zPub__403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_HD_Wallet__xPub__yPub__zPub__409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_HD_Wallet__xPub__yPub__zPub__422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubE422'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Wallet_Transactions_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListWalletTransactionsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Wallet_Transactions_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListWalletTransactionsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Wallet_Transactions_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListWalletTransactionsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Fungible_Token_Transaction_Request_From_Address_Without_Fee_Priority_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Fungible_Token_Transaction_Request_From_Address_Without_Fee_Priority_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Fungible_Token_Transaction_Request_From_Address_Without_Fee_Priority_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Fungible_Token_Transaction_Request_From_Address_Without_Fee_Priority_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Wallet_Transaction_Details_By_Transaction_ID_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Wallet_Transaction_Details_By_Transaction_ID_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Wallet_Transaction_Details_By_Transaction_ID_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transaction_Details_by_Transaction_Hash_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionDetailsByTransactionHashE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transaction_Details_by_Transaction_Hash_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionDetailsByTransactionHashE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transaction_Details_by_Transaction_Hash_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionDetailsByTransactionHashE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_New_HD_Wallet__xPub__yPub__zPub__400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_New_HD_Wallet__xPub__yPub__zPub__401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_New_HD_Wallet__xPub__yPub__zPub__403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_New_HD_Wallet__xPub__yPub__zPub__409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Sync_New_HD_Wallet__xPub__yPub__zPub__422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubE422'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Internal_Transaction_by_Transaction_Hash_and_Operation_Id_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetInternalTransactionByTransactionHashAndOperationIdE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Internal_Transaction_by_Transaction_Hash_and_Operation_Id_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetInternalTransactionByTransactionHashAndOperationIdE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Internal_Transaction_by_Transaction_Hash_and_Operation_Id_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetInternalTransactionByTransactionHashAndOperationIdE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Internal_Transaction_by_Transaction_Hash_and_Operation_Id_404_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BlockchainDataInternalTransactionNotFound'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transactions_By_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionsByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transactions_By_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionsByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transactions_By_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionsByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_And_Sync_New_Receiving_Addresses_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_And_Sync_New_Receiving_Addresses_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_And_Sync_New_Receiving_Addresses_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_And_Sync_New_Change_Addresses_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_And_Sync_New_Change_Addresses_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_And_Sync_New_Change_Addresses_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Fee_Recommendations_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetFeeRecommendationsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Fee_Recommendations_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetFeeRecommendationsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Fee_Recommendations_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetFeeRecommendationsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Synced_Addresses_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSyncedAddressesE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Synced_Addresses_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSyncedAddressesE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Synced_Addresses_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSyncedAddressesE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Next_Available_Nonce_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetNextAvailableNonceE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Next_Available_Nonce_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetNextAvailableNonceE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Next_Available_Nonce_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetNextAvailableNonceE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unspent_Transaction_Outputs_By_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnspentTransactionOutputsByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unspent_Transaction_Outputs_By_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnspentTransactionOutputsByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unspent_Transaction_Outputs_By_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnspentTransactionOutputsByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_HD_Wallet__xPub__yPub__zPub__Transactions_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_HD_Wallet__xPub__yPub__zPub__Transactions_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_HD_Wallet__xPub__yPub__zPub__Transactions_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_HD_Wallet__xPub__yPub__zPub__Transactions_422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsE422'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_Transfers_By_Transaction_Hash_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensTransfersByTransactionHashE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_Transfers_By_Transaction_Hash_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensTransfersByTransactionHashE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_Transfers_By_Transaction_Hash_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensTransfersByTransactionHashE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Transactions_By_Address_And_Time_Range_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Transactions_By_Address_And_Time_Range_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Transactions_By_Address_And_Time_Range_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Tokens_Transfers_By_Address_And_Time_Range_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressAndTimeRangeE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Tokens_Transfers_By_Address_And_Time_Range_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressAndTimeRangeE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Tokens_Transfers_By_Address_And_Time_Range_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressAndTimeRangeE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transactions_By_Address_And_Time_Range_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionsByAddressAndTimeRangeE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transactions_By_Address_And_Time_Range_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionsByAddressAndTimeRangeE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Internal_Transactions_By_Address_And_Time_Range_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListInternalTransactionsByAddressAndTimeRangeE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Tokens_Transfers_By_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Tokens_Transfers_By_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Confirmed_Tokens_Transfers_By_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_HD_Wallet__xPub__yPub__zPub__UTXOs_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubUTXOsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_HD_Wallet__xPub__yPub__zPub__UTXOs_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubUTXOsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_HD_Wallet__xPub__yPub__zPub__UTXOs_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubUTXOsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_HD_Wallet__xPub__yPub__zPub__UTXOs_422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListHDWalletXPubYPubZPubUTXOsE422'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Raw_Transaction_Data_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetRawTransactionDataE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Raw_Transaction_Data_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetRawTransactionDataE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Raw_Transaction_Data_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetRawTransactionDataE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unconfirmed_Tokens_Transfers_By_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnconfirmedTokensTransfersByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unconfirmed_Tokens_Transfers_By_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnconfirmedTokensTransfersByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Unconfirmed_Tokens_Transfers_By_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListUnconfirmedTokensTransfersByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_By_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensByAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_By_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensByAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_By_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensByAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Transaction_Smart_Fee_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateTransactionSmartFeeE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Transaction_Smart_Fee_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateTransactionSmartFeeE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Transaction_Smart_Fee_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateTransactionSmartFeeE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Transaction_Smart_Fee_501_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/Unimplemented'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Prepare_A_UTXO_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Prepare_A_UTXO_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Prepare_A_UTXO_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Token_Details_by_Contract_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTokenDetailsByContractAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Token_Details_by_Contract_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTokenDetailsByContractAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Token_Details_by_Contract_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTokenDetailsByContractAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Prepare_An_Account_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Prepare_An_Account_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Prepare_An_Account_Based_Transaction_From_HD_Wallet__xPub__yPub__zPub__403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_HD_Wallet__xPub__yPub__zPub__Assets_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_HD_Wallet__xPub__yPub__zPub__Assets_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_HD_Wallet__xPub__yPub__zPub__Assets_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_HD_Wallet__xPub__yPub__zPub__Assets_422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsE422'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_HD_Wallet__xPub__yPub__zPub__Details_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubDetailsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_HD_Wallet__xPub__yPub__zPub__Details_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubDetailsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_HD_Wallet__xPub__yPub__zPub__Details_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubDetailsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_HD_Wallet__xPub__yPub__zPub__Details_422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubDetailsE422'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_HD_Wallet__xPub__yPub__zPub__Change_Or_Receiving_Addresses_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_HD_Wallet__xPub__yPub__zPub__Change_Or_Receiving_Addresses_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Derive_HD_Wallet__xPub__yPub__zPub__Change_Or_Receiving_Addresses_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_unconfirmed_coins_transactions_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_unconfirmed_coins_transactions_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_unconfirmed_coins_transactions_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_unconfirmed_coins_transactions_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_unconfirmed_tokens_transactions_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_unconfirmed_tokens_transactions_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_unconfirmed_tokens_transactions_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_unconfirmed_tokens_transactions_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_coins_transactions_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_coins_transactions_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_coins_transactions_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_coins_transactions_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_tokens_transactions_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_tokens_transactions_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_tokens_transactions_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_tokens_transactions_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_tokens_transactions_and_each_confirmation_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_tokens_transactions_and_each_confirmation_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_tokens_transactions_and_each_confirmation_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_tokens_transactions_and_each_confirmation_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_coins_transactions_and_each_confirmation_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_coins_transactions_and_each_confirmation_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_coins_transactions_and_each_confirmation_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_coins_transactions_and_each_confirmation_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Mined_transaction_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/MinedTransactionE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Mined_transaction_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/MinedTransactionE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Mined_transaction_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/MinedTransactionE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Mined_transaction_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/MinedTransactionE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Block_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewBlockE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Block_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewBlockE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Block_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewBlockE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Block_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewBlockE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Block_Height_Reached_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BlockHeightReachedE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Block_Height_Reached_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BlockHeightReachedE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Block_Height_Reached_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BlockHeightReachedE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Block_Height_Reached_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BlockHeightReachedE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Blockchain_Events_Subscriptions_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListBlockchainEventsSubscriptionsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Blockchain_Events_Subscriptions_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListBlockchainEventsSubscriptionsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Blockchain_Events_Subscriptions_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListBlockchainEventsSubscriptionsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Blockchain_Event_Subscription_Details_By_Reference_ID_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockchainEventSubscriptionDetailsByReferenceIDE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Blockchain_Event_Subscription_Details_By_Reference_ID_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockchainEventSubscriptionDetailsByReferenceIDE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Blockchain_Event_Subscription_Details_By_Reference_ID_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockchainEventSubscriptionDetailsByReferenceIDE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Activate_Blockchain_Event_Subscription_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ActivateBlockchainEventSubscriptionE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Activate_Blockchain_Event_Subscription_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ActivateBlockchainEventSubscriptionE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Activate_Blockchain_Event_Subscription_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ActivateBlockchainEventSubscriptionE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Blockchain_Event_Subscription_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteBlockchainEventSubscriptionE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Blockchain_Event_Subscription_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteBlockchainEventSubscriptionE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Blockchain_Event_Subscription_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteBlockchainEventSubscriptionE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Details_From_Callback_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressDetailsFromCallbackE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Details_From_Callback_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressDetailsFromCallbackE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Details_From_Callback_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAddressDetailsFromCallbackE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Address_Details_From_Callback_404_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BlockchainDataAddressEventSubscriptionNotFound'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Details_By_Transaction_ID_From_Callback_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Details_By_Transaction_ID_From_Callback_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Transaction_Details_By_Transaction_ID_From_Callback_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Hash_From_Callback_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Hash_From_Callback_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Hash_From_Callback_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Height_From_Callback_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Height_From_Callback_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Block_Details_By_Block_Height_From_Callback_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_internal_transactions_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_internal_transactions_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_internal_transactions_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_internal_transactions_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_internal_transactions_and_each_confirmation_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_internal_transactions_and_each_confirmation_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_internal_transactions_and_each_confirmation_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_confirmed_internal_transactions_and_each_confirmation_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Coins_Transactions_For_Specific_Amount_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Coins_Transactions_For_Specific_Amount_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Coins_Transactions_For_Specific_Amount_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Coins_Transactions_For_Specific_Amount_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Token_Transactions_For_Specific_Amount_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Token_Transactions_For_Specific_Amount_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Token_Transactions_For_Specific_Amount_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Token_Transactions_For_Specific_Amount_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Internal_Transactions_For_Specific_Amount_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Internal_Transactions_For_Specific_Amount_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Internal_Transactions_For_Specific_Amount_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    New_Confirmed_Internal_Transactions_For_Specific_Amount_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Coins_Forwarding_Automations_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListCoinsForwardingAutomationsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Coins_Forwarding_Automations_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListCoinsForwardingAutomationsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Coins_Forwarding_Automations_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListCoinsForwardingAutomationsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Automatic_Coins_Forwarding_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateAutomaticCoinsForwardingE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Automatic_Coins_Forwarding_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateAutomaticCoinsForwardingE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Automatic_Coins_Forwarding_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateAutomaticCoinsForwardingE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Automatic_Coins_Forwarding_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateAutomaticCoinsForwardingE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Automatic_Coins_Forwarding_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteAutomaticCoinsForwardingE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Automatic_Coins_Forwarding_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteAutomaticCoinsForwardingE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Automatic_Coins_Forwarding_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteAutomaticCoinsForwardingE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_Forwarding_Automations_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensForwardingAutomationsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_Forwarding_Automations_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensForwardingAutomationsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Tokens_Forwarding_Automations_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListTokensForwardingAutomationsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Automatic_Tokens_Forwarding_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Automatic_Tokens_Forwarding_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Create_Automatic_Tokens_Forwarding_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Add_Tokens_To_Existing_fromAddress_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Add_Tokens_To_Existing_fromAddress_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Add_Tokens_To_Existing_fromAddress_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Fee_Address_Details_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetFeeAddressDetailsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Fee_Address_Details_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetFeeAddressDetailsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Fee_Address_Details_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetFeeAddressDetailsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Automatic_Tokens_Forwarding_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteAutomaticTokensForwardingE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Automatic_Tokens_Forwarding_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteAutomaticTokensForwardingE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Delete_Automatic_Tokens_Forwarding_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DeleteAutomaticTokensForwardingE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Validate_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ValidateAddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Validate_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ValidateAddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Validate_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ValidateAddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_EIP_1559_Fee_Recommendations_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetEIP1559FeeRecommendationsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_EIP_1559_Fee_Recommendations_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetEIP1559FeeRecommendationsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_EIP_1559_Fee_Recommendations_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetEIP1559FeeRecommendationsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Broadcast_Locally_Signed_Transaction_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BroadcastLocallySignedTransactionE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Broadcast_Locally_Signed_Transaction_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BroadcastLocallySignedTransactionE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Broadcast_Locally_Signed_Transaction_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BroadcastLocallySignedTransactionE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Broadcast_Locally_Signed_Transaction_409_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/BroadcastLocallySignedTransactionE409'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Gas_Limit_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateGasLimitE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Gas_Limit_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateGasLimitE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Gas_Limit_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateGasLimitE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Token_Gas_Limit_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateTokenGasLimitE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Token_Gas_Limit_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateTokenGasLimitE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Estimate_Token_Gas_Limit_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EstimateTokenGasLimitE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Decode_Raw_Transaction_Hex_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DecodeRawTransactionHexE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Decode_Raw_Transaction_Hex_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DecodeRawTransactionHexE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Decode_Raw_Transaction_Hex_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DecodeRawTransactionHexE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Decode_X_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DecodeX-AddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Decode_X_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DecodeX-AddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Decode_X_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/DecodeX-AddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Encode_X_Address_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EncodeX-AddressE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Encode_X_Address_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EncodeX-AddressE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Encode_X_Address_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/EncodeX-AddressE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Supported_Assets_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSupportedAssetsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Supported_Assets_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSupportedAssetsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    List_Supported_Assets_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/ListSupportedAssetsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Exchange_Rate_By_Asset_Symbols_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetExchangeRateByAssetSymbolsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Exchange_Rate_By_Asset_Symbols_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetExchangeRateByAssetSymbolsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Exchange_Rate_By_Asset_Symbols_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetExchangeRateByAssetSymbolsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Exchange_Rate_By_Asset_Symbols_422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetExchangeRateByAssetSymbolsE422'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Exchange_Rate_By_Assets_IDs_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetExchangeRateByAssetsIDsE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Exchange_Rate_By_Assets_IDs_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetExchangeRateByAssetsIDsE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Exchange_Rate_By_Assets_IDs_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetExchangeRateByAssetsIDsE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Exchange_Rate_By_Assets_IDs_422_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetExchangeRateByAssetsIDsE422'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Asset_Details_By_Asset_ID_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Asset_Details_By_Asset_ID_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Asset_Details_By_Asset_ID_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Asset_Details_By_Asset_Symbol_400_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAssetDetailsByAssetSymbolE400'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Asset_Details_By_Asset_Symbol_401_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAssetDetailsByAssetSymbolE401'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    Get_Asset_Details_By_Asset_Symbol_403_response:
      properties:
        apiVersion:
          description: Specifies the version of the API that incorporates this endpoint.
          example: 2021-03-20
          type: string
        requestId:
          description: Defines the ID of the request. The `requestId` is generated
            by Crypto APIs and it's unique for every request.
          example: 601c1710034ed6d407996b30
          type: string
        context:
          description: In batch situations the user can use the context to correlate
            responses with requests. This property is present regardless of whether
            the response was successful or returned as an error. `context` is specified
            by the user.
          example: yourExampleString
          type: string
        error:
          $ref: '#/components/schemas/GetAssetDetailsByAssetSymbolE403'
      required:
      - apiVersion
      - error
      - requestId
      type: object
    ConvertBitcoinCashAddressRB_data_item:
      example:
        address: bchtest:qpcgz3zt5zp5dj7vd9ms24xquamncvhnxvlz97eee8
      properties:
        address:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: bchtest:qpcgz3zt5zp5dj7vd9ms24xquamncvhnxvlz97eee8
          type: string
      required:
      - address
      type: object
    ConvertBitcoinCashAddressRB_data:
      example:
        item:
          address: bchtest:qpcgz3zt5zp5dj7vd9ms24xquamncvhnxvlz97eee8
      properties:
        item:
          $ref: '#/components/schemas/ConvertBitcoinCashAddressRB_data_item'
      required:
      - item
      type: object
    GenerateDepositAddressRB_data_item:
      example:
        label: yourLabelStringHere
      properties:
        label:
          description: Represents a custom tag that customers can set up for their
            Wallets and addresses. E.g. custom label named "Special addresses".
          example: yourLabelStringHere
          type: string
      required:
      - label
      type: object
    GenerateDepositAddressRB_data:
      example:
        item:
          label: yourLabelStringHere
      properties:
        item:
          $ref: '#/components/schemas/GenerateDepositAddressRB_data_item'
      required:
      - item
      type: object
    CreateCoinsTransactionRequestFromWalletRB_data_item_recipients_inner:
      example:
        amount: "0.125"
        address: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
      properties:
        address:
          description: Defines the specific recipient/destination address.
          example: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
          type: string
        amount:
          description: Represents the specific amount of the transaction's destination.
          example: "0.125"
          type: string
      required:
      - address
      - amount
      type: object
    CreateCoinsTransactionRequestFromWalletRB_data_item:
      example:
        feePriority: standard
        note: yourAdditionalInformationhere
        recipients:
        - amount: "0.125"
          address: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
        - amount: "0.125"
          address: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
        prepareStrategy: minimize-dust
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        prepareStrategy:
          default: minimize-dust
          description: "Refers to a model of a UTXO spending strategy, where customers\
            \ can choose how to spend their transaction outputs from multiple Bitcoin\
            \ addresses. Two options available - \"minimize-dust\" (select lower amounts\
            \ from multiple addresses) or \"optimize-size\" (select higher amounts\
            \ from less addresses)."
          enum:
          - minimize-dust
          - optimize-size
          example: minimize-dust
          type: string
        recipients:
          description: "Defines the destination of the transaction, whether it is\
            \ incoming or outgoing."
          items:
            $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletRB_data_item_recipients_inner'
          type: array
      required:
      - feePriority
      - recipients
      type: object
    CreateCoinsTransactionRequestFromWalletRB_data:
      example:
        item:
          feePriority: standard
          note: yourAdditionalInformationhere
          recipients:
          - amount: "0.125"
            address: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
          - amount: "0.125"
            address: 2MtzNEqm2D9jcbPJ5mW7Z3AUNwqt3afZH66
          prepareStrategy: minimize-dust
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
      properties:
        item:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletRB_data_item'
      required:
      - item
      type: object
    CreateCoinsTransactionRequestFromAddressRB_data_item:
      example:
        feePriority: slow
        note: yourAdditionalInformationhere
        amount: "0.2"
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
      properties:
        amount:
          description: Represents the specific amount of the transaction.
          example: "0.2"
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: slow
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipientAddress:
          description: Defines the specific recipient address for the transaction.
            For XRP we also support the X-address format.
          example: 0xc065b539490f81b6c297c37b1925c3be2f190732
          type: string
      required:
      - amount
      - feePriority
      - recipientAddress
      type: object
    CreateCoinsTransactionRequestFromAddressRB_data:
      example:
        item:
          feePriority: slow
          note: yourAdditionalInformationhere
          amount: "0.2"
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
      properties:
        item:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressRB_data_item'
      required:
      - item
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountRB_data_item:
      example:
        feePriority: standard
        note: yourAdditionalInformationhere
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipientAddress:
          description: Defines the specific recipient address for the transaction.
          example: 0xc065b539490f81b6c297c37b1925c3be2f190732
          type: string
      required:
      - feePriority
      - recipientAddress
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountRB_data:
      example:
        item:
          feePriority: standard
          note: yourAdditionalInformationhere
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
      properties:
        item:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountRB_data_item'
      required:
      - item
      type: object
    CreateFungibleTokensTransactionRequestFromAddressRB_data_item:
      example:
        feePriority: standard
        note: yourAdditionalInformationhere
        amount: "0.2"
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
        tokenIdentifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
      properties:
        amount:
          description: Represents the specific amount of the transaction.
          example: "0.2"
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipientAddress:
          description: Defines the specific recipient address for the transaction.
          example: 0xc065b539490f81b6c297c37b1925c3be2f190732
          type: string
        tokenIdentifier:
          description: Defines the specific token identifier. For Bitcoin-based transactions
            it should be the `propertyId` and for Ethereum-based transactions - the
            `contract`.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
      required:
      - amount
      - feePriority
      - recipientAddress
      - tokenIdentifier
      type: object
    CreateFungibleTokensTransactionRequestFromAddressRB_data:
      example:
        item:
          feePriority: standard
          note: yourAdditionalInformationhere
          amount: "0.2"
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          recipientAddress: 0xc065b539490f81b6c297c37b1925c3be2f190732
          tokenIdentifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
      properties:
        item:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressRB_data_item'
      required:
      - item
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityRB_data_item:
      example:
        note: yourAdditionalInformationhere
        amount: "0.0006"
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        recipientAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
      properties:
        amount:
          description: Represents the specific amount of the transaction's destination.
          example: "0.0006"
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipientAddress:
          description: Defines the specific recipient/destination address.
          example: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          type: string
      required:
      - amount
      - recipientAddress
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityRB_data:
      example:
        item:
          note: yourAdditionalInformationhere
          amount: "0.0006"
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          recipientAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
      properties:
        item:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityRB_data_item'
      required:
      - item
      type: object
    SyncHDWalletXPubYPubZPubRB_data_item:
      example:
        extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
      properties:
        extendedPublicKey:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
          type: string
      required:
      - extendedPublicKey
      type: object
    SyncHDWalletXPubYPubZPubRB_data:
      example:
        item:
          extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
      properties:
        item:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubRB_data_item'
      required:
      - item
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRB_data_item:
      example:
        note: yourAdditionalInformationhere
        amount: "0.25684"
        feeLimit: "1000000000"
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        recipientAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
        tokenIdentifier: TF17BgPaZYbz8oxbjhriubPDsA7ArKoLX3
      properties:
        amount:
          description: Represents the specific amount of the transaction.
          example: "0.25684"
          type: string
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        feeLimit:
          description: Fee limit of the smart contract
          example: "1000000000"
          type: string
        note:
          description: "Represents an optional note to add a free text in, explaining\
            \ or providing additional detail on the transaction request."
          example: yourAdditionalInformationhere
          type: string
        recipientAddress:
          description: Defines the specific recipient address for the transaction.
          example: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          type: string
        tokenIdentifier:
          description: Token identifier - for BITCOIN BASED should be property id
            e.g 31 for ETHEREUM BASED shoud be contract e.g 0xdac17f958d2ee523a2206206994597c13d831ec7
          example: TF17BgPaZYbz8oxbjhriubPDsA7ArKoLX3
          type: string
      required:
      - amount
      - feeLimit
      - recipientAddress
      - tokenIdentifier
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRB_data:
      example:
        item:
          note: yourAdditionalInformationhere
          amount: "0.25684"
          feeLimit: "1000000000"
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          recipientAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          tokenIdentifier: TF17BgPaZYbz8oxbjhriubPDsA7ArKoLX3
      properties:
        item:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRB_data_item'
      required:
      - item
      type: object
    DeriveAndSyncNewReceivingAddressesRB_data_item:
      example:
        extendedPublicKey: xpub6DSqNgZke91RZBXk9s8tBknGPiVB7AQqVyxHCLEM49D3VGeMWg6qmSDruSn7SgQApVH1M8cSvjXfDmhRysDt9hZWFAMcZf4X1DAzd23G4ZQ
      properties:
        extendedPublicKey:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: xpub6DSqNgZke91RZBXk9s8tBknGPiVB7AQqVyxHCLEM49D3VGeMWg6qmSDruSn7SgQApVH1M8cSvjXfDmhRysDt9hZWFAMcZf4X1DAzd23G4ZQ
          type: string
      required:
      - extendedPublicKey
      type: object
    DeriveAndSyncNewReceivingAddressesRB_data:
      example:
        item:
          extendedPublicKey: xpub6DSqNgZke91RZBXk9s8tBknGPiVB7AQqVyxHCLEM49D3VGeMWg6qmSDruSn7SgQApVH1M8cSvjXfDmhRysDt9hZWFAMcZf4X1DAzd23G4ZQ
      properties:
        item:
          $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesRB_data_item'
      required:
      - item
      type: object
    DeriveAndSyncNewChangeAddressesRB_data_item:
      example:
        extendedPublicKey: xpub6BuJ8T4xTEePRTWxEcyyZRHPRZw91GFRjuu4H1eNqNGDswpraD5Hthf7JBbK7iQayuLf2MbxT6MVrKGbY7HvBcQo937Qiwmxz7Fzy9S5y9q
      properties:
        extendedPublicKey:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: xpub6BuJ8T4xTEePRTWxEcyyZRHPRZw91GFRjuu4H1eNqNGDswpraD5Hthf7JBbK7iQayuLf2MbxT6MVrKGbY7HvBcQo937Qiwmxz7Fzy9S5y9q
          type: string
      required:
      - extendedPublicKey
      type: object
    DeriveAndSyncNewChangeAddressesRB_data:
      example:
        item:
          extendedPublicKey: xpub6BuJ8T4xTEePRTWxEcyyZRHPRZw91GFRjuu4H1eNqNGDswpraD5Hthf7JBbK7iQayuLf2MbxT6MVrKGbY7HvBcQo937Qiwmxz7Fzy9S5y9q
      properties:
        item:
          $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesRB_data_item'
      required:
      - item
      type: object
    PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item_fee:
      properties:
        address:
          description: Represents the fee address
          example: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
          type: string
        exactAmount:
          description: Representation of the exact amount value
          example: "0.00023"
          type: string
        priority:
          description: Represents the fee priority
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
      type: object
    PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item_recipients_inner:
      properties:
        address:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
          type: string
        amount:
          description: Represents the amount value
          example: "0.00003"
          type: string
      required:
      - address
      - amount
      type: object
    PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item:
      properties:
        additionalData:
          description: Representation of the additional data.
          example: yourAdditionalDataHere
          type: string
        fee:
          $ref: '#/components/schemas/PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item_fee'
        locktime:
          description: Represents the time at which a particular transaction can be
            added to the blockchain.
          example: 1659001055
          type: integer
        prepareStrategy:
          description: Representation of the transaction's strategy type
          enum:
          - none
          - minimize-dust
          - optimize-size
          example: minimize-dust
          type: string
        recipients:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          items:
            $ref: '#/components/schemas/PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item_recipients_inner'
          type: array
        replaceable:
          description: Representation of whether the transaction is replaceable
          example: false
          type: boolean
        xpub:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: tpubDCNoSqt3HF32yq8VU6mgapTuW1FzENZa3C5dKUF6WCQzubWz2nA1yxUhMQWkhhkD58Uc8YiuD8cmB3y5tihqAv4zT2GNyqKTNLchHJmsvt9
          type: string
      required:
      - fee
      - recipients
      - xpub
      type: object
    PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRB_data:
      properties:
        item:
          $ref: '#/components/schemas/PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item'
      required:
      - item
      type: object
    PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item_fee:
      properties:
        exactAmount:
          description: Representation of the exact amount value
          example: "0.00045"
          type: string
        priority:
          description: Represents the fee priority
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
      type: object
    PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item:
      properties:
        additionalData:
          description: Representation of the additional data.
          example: yourAdditionalDataHere
          type: string
        amount:
          description: Representation of the amount of the transaction
          example: "0.000003"
          type: string
        fee:
          $ref: '#/components/schemas/PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item_fee'
        nonce:
          description: Representation of the nonce value
          example: "0"
          type: string
        recipient:
          description: Represents a list of recipient addresses with the respective
            amounts. In account-based protocols like Ethereum there is only one address
            in this list.
          example: 0x041c594a0cc194e826bef5411b29c7f27001b7e3
          type: string
        sender:
          description: Represents a  sender address with the respective amount. In
            account-based protocols like Ethereum there is only one address in this
            list.
          example: 0x03654A9E78771442CAdf8DB37ae60D6a12bAEa9f
          type: string
        transactionType:
          description: Representation of the transaction type
          enum:
          - legacy-transaction
          - access-list-transaction
          - gas-fee-market-transaction
          example: access-list-transaction
          type: string
        xpub:
          description: Defines the account extended publicly known key which is used
            to derive all child public keys.
          example: xpub6CsGdqTDEVRnLmpWN218HBwJqfhqSx46iA8ByzEA5Bz9jfwU3TSg9U7ambKgJyykvCraHQ6sAFAddMGFdPzhXrRanKbHnnkbDTyRPyn5gRJ
          type: string
      required:
      - amount
      - fee
      - recipient
      - sender
      - xpub
      type: object
    PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubRB_data:
      properties:
        item:
          $ref: '#/components/schemas/PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubRB_data_item'
      required:
      - item
      type: object
    NewUnconfirmedCoinsTransactionsRB_data_item:
      example:
        address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          type: string
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs 2.0. For\
            \ more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
      required:
      - address
      - callbackUrl
      type: object
    NewUnconfirmedCoinsTransactionsRB_data:
      example:
        item:
          address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsRB_data_item'
      required:
      - item
      type: object
    NewUnconfirmedTokensTransactionsRB_data_item:
      example:
        address: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
          type: string
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
      required:
      - address
      - callbackUrl
      type: object
    NewUnconfirmedTokensTransactionsRB_data:
      example:
        item:
          address: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsRB_data_item'
      required:
      - item
      type: object
    NewConfirmedCoinsTransactionsRB_data_item:
      example:
        address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
        callbackSecretKey: yourSecretKey
        callbackURL: https://example.com
        receiveCallbackOn: 3
        allowDuplicates: true
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          type: string
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackURL:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        receiveCallbackOn:
          description: "Represents the exact confirmation, on which the user wants\
            \ to receive callback."
          example: 3
          type: integer
      required:
      - address
      - callbackURL
      type: object
    NewConfirmedCoinsTransactionsRB_data:
      example:
        item:
          address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          callbackSecretKey: yourSecretKey
          callbackURL: https://example.com
          receiveCallbackOn: 3
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsRB_data_item'
      required:
      - item
      type: object
    NewConfirmedTokensTransactionsRB_data_item:
      example:
        address: 0xbf16582e53d6fd892f11de8a3e29e8c3b65d77c2
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        receiveCallbackOn: 3
        allowDuplicates: true
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: 0xbf16582e53d6fd892f11de8a3e29e8c3b65d77c2
          type: string
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        receiveCallbackOn:
          description: "Represents the exact confirmation, on which the user wants\
            \ to receive callback."
          example: 3
          type: integer
      required:
      - address
      - callbackUrl
      type: object
    NewConfirmedTokensTransactionsRB_data:
      example:
        item:
          address: 0xbf16582e53d6fd892f11de8a3e29e8c3b65d77c2
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          receiveCallbackOn: 3
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsRB_data_item'
      required:
      - item
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationRB_data_item:
      example:
        confirmationsCount: 3
        address: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
          type: string
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
      required:
      - address
      - callbackUrl
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationRB_data:
      example:
        item:
          confirmationsCount: 3
          address: 0x033ef6db9fbd0ee60e2931906b987fe0280471a0
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationRB_data_item'
      required:
      - item
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationRB_data_item:
      example:
        confirmationsCount: 3
        address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
      properties:
        address:
          description: "Represents the address of the transaction, per which the result\
            \ is returned."
          example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          type: string
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
      required:
      - address
      - callbackUrl
      - confirmationsCount
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationRB_data:
      example:
        item:
          confirmationsCount: 3
          address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationRB_data_item'
      required:
      - item
      type: object
    MinedTransactionRB_data_item:
      example:
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: false
        transactionId: df2690ff97e72c1f8b0f2102a8cb5c1d0fa8fb8754d543c9bc0edc4d4bc34bfc
      properties:
        allowDuplicates:
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: false
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        transactionId:
          description: Represents the unique identification string that defines the
            transaction.
          example: df2690ff97e72c1f8b0f2102a8cb5c1d0fa8fb8754d543c9bc0edc4d4bc34bfc
          type: string
      required:
      - callbackUrl
      - transactionId
      type: object
    MinedTransactionRB_data:
      example:
        item:
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: false
          transactionId: df2690ff97e72c1f8b0f2102a8cb5c1d0fa8fb8754d543c9bc0edc4d4bc34bfc
      properties:
        item:
          $ref: '#/components/schemas/MinedTransactionRB_data_item'
      required:
      - item
      type: object
    NewBlockRB_data_item:
      example:
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
      properties:
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
      required:
      - callbackUrl
      type: object
    NewBlockRB_data:
      example:
        item:
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewBlockRB_data_item'
      required:
      - item
      type: object
    BlockHeightReachedRB_data_item:
      example:
        blockHeightReached: 667900
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
      properties:
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        blockHeightReached:
          description: Represents the specified value of block height for which the
            callback will be received.
          example: 667900
          format: int64
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
      required:
      - blockHeightReached
      - callbackUrl
      type: object
    BlockHeightReachedRB_data:
      example:
        item:
          blockHeightReached: 667900
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/BlockHeightReachedRB_data_item'
      required:
      - item
      type: object
    ActivateBlockchainEventSubscriptionRB_data:
      example:
        item: "{}"
      properties:
        item:
          properties: {}
          type: object
      required:
      - item
      type: object
    NewConfirmedInternalTransactionsRB_data_item:
      example:
        address: 0xbcc817f057950b0df41206c5d7125e6225cae18e
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        receiveCallbackOn: 3
        allowDuplicates: true
      properties:
        address:
          description: Defines the specific address of the internal transaction.
          example: 0xbcc817f057950b0df41206c5d7125e6225cae18e
          type: string
        allowDuplicates:
          default: false
          description: Flag that permits or denies creation of duplicates
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        receiveCallbackOn:
          description: "Represents the exact confirmation, on which the user wants\
            \ to receive callback."
          example: 3
          type: integer
      required:
      - address
      - allowDuplicates
      - callbackSecretKey
      - callbackUrl
      type: object
    NewConfirmedInternalTransactionsRB_data:
      example:
        item:
          address: 0xbcc817f057950b0df41206c5d7125e6225cae18e
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          receiveCallbackOn: 3
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsRB_data_item'
      required:
      - item
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationRB_data_item:
      example:
        confirmationsCount: 3
        address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        allowDuplicates: true
      properties:
        address:
          description: Defines the specific address of the internal transaction.
          example: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
          type: string
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
      required:
      - address
      - allowDuplicates
      - callbackSecretKey
      - callbackUrl
      - confirmationsCount
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationRB_data:
      example:
        item:
          confirmationsCount: 3
          address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          allowDuplicates: true
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationRB_data_item'
      required:
      - item
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountRB_data_item:
      example:
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
        amountHigherThan: 2
      properties:
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        amountHigherThan:
          description: Represents a specific amount of coins after which the system
            have to send a callback to customers' callbackUrl.
          example: 2
          format: int64
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs 2.0. For\
            \ more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
      required:
      - amountHigherThan
      - callbackUrl
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountRB_data:
      example:
        item:
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
          amountHigherThan: 2
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountRB_data_item'
      required:
      - item
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountRB_data_item:
      example:
        contractAddress: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
        amountHigherThan: 2
      properties:
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        amountHigherThan:
          description: Represents a specific amount of tokens after which the system
            have to send a callback to customers' callbackUrl.
          example: 2
          format: int64
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs 2.0. For\
            \ more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        contractAddress:
          description: "Represents the contract address of the token, which controls\
            \ its logic. It is not the address that holds the tokens."
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
      required:
      - amountHigherThan
      - callbackUrl
      - contractAddress
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountRB_data:
      example:
        item:
          contractAddress: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
          amountHigherThan: 2
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountRB_data_item'
      required:
      - item
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountRB_data_item:
      example:
        callbackSecretKey: yourSecretKey
        callbackUrl: https://example.com
        allowDuplicates: true
        amountHigherThan: 3
      properties:
        allowDuplicates:
          default: false
          description: Specifies a flag that permits or denies the creation of duplicate
            addresses.
          example: true
          type: boolean
        amountHigherThan:
          description: Represents a specific amount of coins after which the system
            have to send a callback to customers' callbackUrl.
          example: 3
          format: int64
          type: integer
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs 2.0. For\
            \ more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretKey
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
      required:
      - amountHigherThan
      - callbackUrl
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountRB_data:
      example:
        item:
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          allowDuplicates: true
          amountHigherThan: 3
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountRB_data_item'
      required:
      - item
      type: object
    CreateAutomaticCoinsForwardingRB_data_item:
      example:
        confirmationsCount: 3
        feePriority: standard
        minimumTransferAmount: "0.02"
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"slow\", \"standard\" or \"fast\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the currency in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.02"
          type: string
        toAddress:
          description: Represents the hash of the address the currency is forwarded
            to.
          example: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
          type: string
      required:
      - callbackSecretKey
      - callbackUrl
      - confirmationsCount
      - feePriority
      - minimumTransferAmount
      - toAddress
      type: object
    CreateAutomaticCoinsForwardingRB_data:
      example:
        item:
          confirmationsCount: 3
          feePriority: standard
          minimumTransferAmount: "0.02"
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
      properties:
        item:
          $ref: '#/components/schemas/CreateAutomaticCoinsForwardingRB_data_item'
      required:
      - item
      type: object
    CreateAutomaticTokensForwardingRB_data_item:
      example:
        confirmationsCount: "3"
        feePriority: standard
        tokenData: null
        minimumTransferAmount: "0.00002"
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: "3"
          type: string
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" or \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the currency in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.00002"
          type: string
        toAddress:
          description: Represents the hash of the address the currency is forwarded
            to.
          example: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
          type: string
        tokenData:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingRBTokenData'
      required:
      - callbackUrl
      - confirmationsCount
      - feePriority
      - minimumTransferAmount
      - toAddress
      - tokenData
      type: object
    CreateAutomaticTokensForwardingRB_data:
      example:
        item:
          confirmationsCount: "3"
          feePriority: standard
          tokenData: null
          minimumTransferAmount: "0.00002"
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
      properties:
        item:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingRB_data_item'
      required:
      - item
      type: object
    AddTokensToExistingFromAddressRB_data_item:
      example:
        confirmationsCount: 3
        feePriority: standard
        tokenData: null
        minimumTransferAmount: "0.00001"
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
        fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
        toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        confirmationsCount:
          description: "Represents the number of confirmations, i.e. the amount of\
            \ blocks that have been built on top of this block."
          example: 3
          type: integer
        feePriority:
          description: "Represents the fee priority of the automation, whether it\
            \ is \"SLOW\", \"STANDARD\" or \"FAST\"."
          enum:
          - slow
          - standard
          - fast
          example: standard
          type: string
        fromAddress:
          description: Represents the hash of the address that forwards the tokens.
          example: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
          type: string
        minimumTransferAmount:
          description: Represents the minimum transfer amount of the currency in the
            `fromAddress` that can be allowed for an automatic forwarding.
          example: "0.00001"
          type: string
        toAddress:
          description: Represents the hash of the address the currency is forwarded
            to.
          example: mnumE76iEKN47bUsdni85oped5D1fRwKWi
          type: string
        tokenData:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressRBTokenData'
      required:
      - callbackUrl
      - confirmationsCount
      - feePriority
      - fromAddress
      - minimumTransferAmount
      - toAddress
      - tokenData
      type: object
    AddTokensToExistingFromAddressRB_data:
      example:
        item:
          confirmationsCount: 3
          feePriority: standard
          tokenData: null
          minimumTransferAmount: "0.00001"
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
          toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
      properties:
        item:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressRB_data_item'
      required:
      - item
      type: object
    ValidateAddressRB_data_item:
      example:
        address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
      properties:
        address:
          description: Represents the specific address that will be checked if it's
            valid or not.
          example: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          type: string
      required:
      - address
      type: object
    ValidateAddressRB_data:
      example:
        item:
          address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
      properties:
        item:
          $ref: '#/components/schemas/ValidateAddressRB_data_item'
      required:
      - item
      type: object
    BroadcastLocallySignedTransactionRB_data_item:
      example:
        signedTransactionHex: 0xf86a22827d00831e8480941b85a43e2e7f52e766ddfdfa2b901c42cb1201be8801b27f33b807c0008029a084ccbf02b27e0842fb1eda7a187a5589c3759be0e969e0ca989dc469a5e5e394a02e111e1156b197f1de4c1d9ba4af26e50665ea6d617d05b3e4047da12b915e69
        callbackSecretKey: yourSecretString
        callbackUrl: https://example.com
      properties:
        callbackSecretKey:
          description: "Represents the Secret Key value provided by the customer.\
            \ This field is used for security purposes during the callback notification,\
            \ in order to prove the sender of the callback as Crypto APIs. For more\
            \ information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security)."
          example: yourSecretString
          type: string
        callbackUrl:
          description: Represents the URL that is set by the customer where the callback
            will be received at. The callback notification will be received only if
            and when the event occurs. `We support ONLY httpS type of protocol`.
          example: https://example.com
          type: string
        signedTransactionHex:
          description: Represents the signed transaction's specific hex.
          example: 0xf86a22827d00831e8480941b85a43e2e7f52e766ddfdfa2b901c42cb1201be8801b27f33b807c0008029a084ccbf02b27e0842fb1eda7a187a5589c3759be0e969e0ca989dc469a5e5e394a02e111e1156b197f1de4c1d9ba4af26e50665ea6d617d05b3e4047da12b915e69
          type: string
      required:
      - signedTransactionHex
      type: object
    BroadcastLocallySignedTransactionRB_data:
      example:
        item:
          signedTransactionHex: 0xf86a22827d00831e8480941b85a43e2e7f52e766ddfdfa2b901c42cb1201be8801b27f33b807c0008029a084ccbf02b27e0842fb1eda7a187a5589c3759be0e969e0ca989dc469a5e5e394a02e111e1156b197f1de4c1d9ba4af26e50665ea6d617d05b3e4047da12b915e69
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
      properties:
        item:
          $ref: '#/components/schemas/BroadcastLocallySignedTransactionRB_data_item'
      required:
      - item
      type: object
    EstimateGasLimitRB_data_item:
      example:
        amount: "0.002"
        sender: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
        recipient: 0xc065b539490f81b6c297c37b1925c3be2f190738
        additionalData: yourAdditionalString
      properties:
        additionalData:
          description: Represents an optional field to add additonal data.
          example: yourAdditionalString
          type: string
        amount:
          description: Represents transactions' amount.
          example: "0.002"
          type: string
        recipient:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 0xc065b539490f81b6c297c37b1925c3be2f190738
          type: string
        sender:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          type: string
      required:
      - amount
      - recipient
      - sender
      type: object
    EstimateGasLimitRB_data:
      example:
        item:
          amount: "0.002"
          sender: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          recipient: 0xc065b539490f81b6c297c37b1925c3be2f190738
          additionalData: yourAdditionalString
      properties:
        item:
          $ref: '#/components/schemas/EstimateGasLimitRB_data_item'
      required:
      - item
      type: object
    EstimateTokenGasLimitRB_data_item:
      example:
        amount: "0.12"
        sender: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
        contractType: ERC-20
        contract: 0x092de782a7e1e0a92991ad829a0a33aef3c7545e
        recipient: 0xc065b539490f81b6c297c37b1925c3be2f190738
      properties:
        amount:
          description: Represents transactions' amount.
          example: "0.12"
          type: string
        contract:
          description: Defines the specific token identifier.  For Ethereum-based
            transactions it is the contract.
          example: 0x092de782a7e1e0a92991ad829a0a33aef3c7545e
          type: string
        contractType:
          description: Represents the ERC contract type. It can be ERC20 or ERC721
          example: ERC-20
          type: string
        recipient:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 0xc065b539490f81b6c297c37b1925c3be2f190738
          type: string
        sender:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          type: string
      required:
      - amount
      - contract
      - contractType
      - recipient
      - sender
      type: object
    EstimateTokenGasLimitRB_data:
      example:
        item:
          amount: "0.12"
          sender: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          contractType: ERC-20
          contract: 0x092de782a7e1e0a92991ad829a0a33aef3c7545e
          recipient: 0xc065b539490f81b6c297c37b1925c3be2f190738
      properties:
        item:
          $ref: '#/components/schemas/EstimateTokenGasLimitRB_data_item'
      required:
      - item
      type: object
    DecodeRawTransactionHexRB_data_item:
      example:
        rawTransactionHex: 0100000001f3f6a909f8521adb57d898d2985834e632374e770fd9e2b98656f1bf1fdfd427010000006b48304502203a776322ebf8eb8b58cc6ced4f2574f4c73aa664edce0b0022690f2f6f47c521022100b82353305988cb0ebd443089a173ceec93fe4dbfe98d74419ecc84a6a698e31d012103c5c1bc61f60ce3d6223a63cedbece03b12ef9f0068f2f3c4a7e7f06c523c3664ffffffff0260e31600000000001976a914977ae6e32349b99b72196cb62b5ef37329ed81b488ac063d1000000000001976a914f76bc4190f3d8e2315e5c11c59cfc8be9df747e388ac00000000
      properties:
        rawTransactionHex:
          description: Represents the raw transaction Hex that has to be decoded.
          example: 0100000001f3f6a909f8521adb57d898d2985834e632374e770fd9e2b98656f1bf1fdfd427010000006b48304502203a776322ebf8eb8b58cc6ced4f2574f4c73aa664edce0b0022690f2f6f47c521022100b82353305988cb0ebd443089a173ceec93fe4dbfe98d74419ecc84a6a698e31d012103c5c1bc61f60ce3d6223a63cedbece03b12ef9f0068f2f3c4a7e7f06c523c3664ffffffff0260e31600000000001976a914977ae6e32349b99b72196cb62b5ef37329ed81b488ac063d1000000000001976a914f76bc4190f3d8e2315e5c11c59cfc8be9df747e388ac00000000
          type: string
      required:
      - rawTransactionHex
      type: object
    DecodeRawTransactionHexRB_data:
      example:
        item:
          rawTransactionHex: 0100000001f3f6a909f8521adb57d898d2985834e632374e770fd9e2b98656f1bf1fdfd427010000006b48304502203a776322ebf8eb8b58cc6ced4f2574f4c73aa664edce0b0022690f2f6f47c521022100b82353305988cb0ebd443089a173ceec93fe4dbfe98d74419ecc84a6a698e31d012103c5c1bc61f60ce3d6223a63cedbece03b12ef9f0068f2f3c4a7e7f06c523c3664ffffffff0260e31600000000001976a914977ae6e32349b99b72196cb62b5ef37329ed81b488ac063d1000000000001976a914f76bc4190f3d8e2315e5c11c59cfc8be9df747e388ac00000000
      properties:
        item:
          $ref: '#/components/schemas/DecodeRawTransactionHexRB_data_item'
      required:
      - item
      type: object
    DecodeRawTransactionHexRISB_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 0014daaf6d5cb86befe42df851a4d1df052e663754c1
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 160014daaf6d5cb86befe42df851a4d1df052e663754c1
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      type: object
    DecodeRawTransactionHexRISB_vin_inner:
      properties:
        address:
          description: Represents the address which send/receive the amount.
          example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
          type: string
        inputHash:
          description: Represents the transaction inputs' indentifier.
          example: 108c523cba933520905136262f6cdef87d68a1fa4ffb95b1a73f69a07ed2aed3
          type: string
        outputIndex:
          description: Represents the output of a transaction.
          example: 3
          type: integer
        scriptSig:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
      required:
      - scriptSig
      type: object
    DecodeRawTransactionHexRISB_vout_inner_scriptPubKey:
      description: Script pub key of the transaction
      properties:
        address:
          description: Represents the address which send the amount.
          example: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
          type: string
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - address
      type: object
    DecodeRawTransactionHexRISB_vout_inner:
      properties:
        scriptPubKey:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISB_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.00014400"
          type: string
      required:
      - scriptPubKey
      type: object
    DecodeRawTransactionHexRISB2_vin_inner:
      properties:
        address:
          description: Represents the address which send/receive the amount.
          example: bitcoincash:qq0adqyntn2zl9tsyjfagnyda9j2gfjkk574lxyrxd
          type: string
        inputHash:
          description: Represents the transaction inputs' indentifier.
          example: 073c565b56e98cfd53013136e92b9fdcf774409f9dc0daff2cf7afadde3a3f0c
          type: string
        outputIndex:
          description: Defines the output index of a transaction.
          example: "2"
          type: string
        scriptSig:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
      required:
      - scriptSig
      type: object
    DecodeRawTransactionHexRISB2_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        address:
          description: Represents the address which send the amount.
          example: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
          type: string
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - address
      type: object
    DecodeRawTransactionHexRISB2_vout_inner:
      properties:
        scriptPubKey:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISB2_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.00014400"
          type: string
      required:
      - scriptPubKey
      type: object
    DecodeRawTransactionHexRISD_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_DUP OP_HASH160 1fd680935cd42f95702493d44c8de964a42656b5 OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address
          example: 4197968cb34bfba488b4a2399f7959b823fefad79ca0b5ed3f3a4bec4c0286cab55b896b28bbbcd4e61cf584cecfd47063b18b481d8d680eafbf869ada1a02c52441210237a84e6d70e775f274e4cbd9f30f9f8b1a426e8b08a9f802a851ce501c930011
          type: string
        type:
          description: Represents the script type of the reference transaction identifier
          example: scripthash
          type: string
      type: object
    DecodeRawTransactionHexRISD_vin_inner:
      properties:
        address:
          description: Represents the address which send/receive the amount
          example: 7W7gfYstwDR6a2ZCxEidAuvshyomqJ8yXT
          type: string
        inputHash:
          description: Represents the transaction inputs' indentifier.
          example: 5061c34b1c1f40a9328c168f1070915bb9c450dbf2ecd566ae2e34e80651ecb4
          type: string
        outputIndex:
          description: Defines the output index of a transaction.
          example: "1"
          type: string
        scriptSig:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
      required:
      - scriptSig
      type: object
    DecodeRawTransactionHexRISD_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        address:
          description: Represents the addresses which send the amount
          example: yP8A3cbdxRtLRduy5mXDsBnJtMzHWs6ZXr
          type: string
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 4112d3f2cc01db043c0e638bb6338c83a7b9aa8f OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a9144112d3f2cc01db043c0e638bb6338c83a7b9aa8f88ac
          type: string
        type:
          description: Represents the hex of the script public key of the address.
          example: 76a9144112d3f2cc01db043c0e638bb6338c83a7b9aa8f88ac
          type: string
      required:
      - address
      type: object
    DecodeRawTransactionHexRISD_vout_inner:
      properties:
        scriptPubKey:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISD_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.5896"
          type: string
      required:
      - scriptPubKey
      type: object
    DecodeRawTransactionHexRISD2_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 030483ff6271580681f4f7828c01df56d5aebfe982cbaa2922594be9eb6cf40206
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 21030483ff6271580681f4f7828c01df56d5aebfe982cbaa2922594be9eb6cf40206ac
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      type: object
    DecodeRawTransactionHexRISD2_vin_inner:
      properties:
        address:
          description: Represents the addresses which send/receive the amount.
          example: DPzdWPsKaGvRn3AH7WjBpnNVHhAPELDY4o
          type: string
        inputHash:
          description: Represents the transaction inputs' indentifier.
          example: 746b56225c5eee8c50c0bedd885d18d3fda37b846d59eb7434b5e365e73e4b60
          type: string
        outputIndex:
          description: Defines the output index of a transaction.
          example: "2"
          type: string
        scriptSig:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISD2_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number
          example: "4294967295"
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: qpq395ljesqakppupe3chd3n3jp60wd23ue00g66xx
            type: string
          type: array
      required:
      - scriptSig
      type: object
    DecodeRawTransactionHexRISD2_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        address:
          description: Represents the addresses which send the amount.
          example: yd5KMREs3GLMe6mTJYr3YrH1juwNwrFCfB
          type: string
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 430158211605af1f0fa26d90405199621bdae5cd OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a914430158211605af1f0fa26d90405199621bdae5cd88ac
          type: string
        type:
          description: Represents the script type
          example: scripthash
          type: string
      required:
      - address
      type: object
    DecodeRawTransactionHexRISD2_vout_inner:
      properties:
        scriptPubKey:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISD2_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "11.25"
          type: string
      required:
      - scriptPubKey
      type: object
    DecodeRawTransactionHexRISL_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 3045022100f031442894c0fd60c195fbdb29c0bf72f143a815689b8840cd31ec31cc6a7721022028f74f0869e4666761c9ba1035cc714528a17de873dfc7b3a541d29f3942a2d8
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 483045022100f031442894c0fd60c195fbdb29c0bf72f143a815689b8840cd31ec31cc6a7721022028f74f0869e4666761c9ba1035cc714528a17de873dfc7b3a541d29f3942a2d80121028c533b6c0ce0ad714a8af36b64d207c4f61cd6d5af210362447c92b4105a4fab
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      type: object
    DecodeRawTransactionHexRISL_vin_inner:
      properties:
        address:
          description: Represents the addresses which send/receive the amount.
          example: LZ891CJWn54CpE6yJ4T3mzP8Xxwrg9gDpH
          type: string
        inputHash:
          description: Represents the transaction inputs' indentifier.
          example: 4c76c153f5de975f94da7526c1b4b4a13380ef93c946f6bed1892f4410600a3d
          type: string
        outputIndex:
          description: Defines the output index of a transaction.
          example: "3"
          type: string
        scriptSig:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISL_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967294"
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 304402204e88dfe79e58b640908812c496ea74d2941c23e70ee3d93ebd469dbd136afe0c02203d7631427c0b5cb96e8a8b23b6c8c0c8112ecb5fb020ee2a7a70841564ed679b01
            type: string
          type: array
      required:
      - scriptSig
      type: object
    DecodeRawTransactionHexRISL_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        address:
          description: Represents the addresses which send the amount.
          example: 3LAAY4fp88RsNHkVW5DZJgqUdbMD5rVoqZ
          type: string
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ca94af32587de4e5006685ffffc65a818ccd3fbc OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ca94af32587de4e5006685ffffc65a818ccd3fbc87
          type: string
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - address
      type: object
    DecodeRawTransactionHexRISL_vout_inner:
      properties:
        scriptPubKey:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISL_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.03505975"
          type: string
      required:
      - scriptPubKey
      type: object
    DecodeRawTransactionHexRISZ_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_HASH160 ef775f1f997f122a062fff1a2d7443abd1f9c642 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: a914ef775f1f997f122a062fff1a2d7443abd1f9c64287
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: pubkeyhash
          type: string
      type: object
    DecodeRawTransactionHexRISZ_vin_inner:
      properties:
        address:
          description: Represents the addresses which send/receive the amount.
          example: t1ajyFP7GnauoDFaM8MqJx9ouQjKS3tbA7g
          type: string
        inputHash:
          description: Represents the transaction inputs' indentifier.
          example: 9dcaee77cd1806c4f9b0bac9ba17e4713fd04032f33be27b630ce499f7a35bd7
          type: string
        outputIndex:
          description: Defines the output index of a transaction.
          example: "1"
          type: string
        scriptSig:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISZ_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
      required:
      - scriptSig
      type: object
    DecodeRawTransactionHexRISZ_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        address:
          description: Represents the address which send the amount.
          example: t1ajyFP7GnauoDFaM8MqJx9ouQjKS3tbA7g
          type: string
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ef775f1f997f122a062fff1a2d7443abd1f9c642 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ef775f1f997f122a062fff1a2d7443abd1f9c64287
          type: string
        type:
          description: Represents the script type.
          example: pubkeyhash
          type: string
      type: object
    DecodeRawTransactionHexRISZ_vout_inner:
      properties:
        scriptPubKey:
          $ref: '#/components/schemas/DecodeRawTransactionHexRISZ_vout_inner_scriptPubKey'
        value:
          description: Defines the specific amount.
          example: "2.50003291"
          type: string
      required:
      - scriptPubKey
      type: object
    ConvertBitcoinCashAddressR_data:
      example:
        item:
          convertedAddress: mqmpq9nZBbotG22nVDruEVwn2nCHWKfU4p
      properties:
        item:
          $ref: '#/components/schemas/ConvertBitcoinCashAddressRI'
      required:
      - item
      type: object
    BannedIpAddress_details_inner:
      properties:
        attribute:
          description: Specifies an attribute of the error by name.
          example: attribute which content caused the error
          type: string
        message:
          description: Specifies the details of an attribute as part from the error.
          example: message describing the error
          type: string
      required:
      - attribute
      - message
      type: object
    GetAddressBalanceRI_confirmedBalance:
      example:
        amount: "3.25"
        unit: TRX
      properties:
        amount:
          description: Defines the total balance of the address that is confirmed.
            It doesn't include unconfirmed transactions.
          example: "3.25"
          type: string
        unit:
          description: Represents the unit of the confirmed balance.
          example: TRX
          type: string
      required:
      - amount
      - unit
      type: object
    GetAddressBalanceR_data:
      example:
        item:
          confirmedBalance:
            amount: "3.25"
            unit: TRX
      properties:
        item:
          $ref: '#/components/schemas/GetAddressBalanceRI'
      required:
      - item
      type: object
    GetAddressDetailsRI_confirmedBalance:
      example:
        amount: amount
        unit: BTC
      properties:
        amount:
          description: Object representation of the total balance of the address
          type: string
        unit:
          description: Represents the unit of the confirmed balance.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    GetAddressDetailsRI_totalReceived:
      example:
        amount: "5.6"
        unit: BTC
      properties:
        amount:
          description: "Defines the total amount of all coins received to the address,\
            \ based on confirmed transactions."
          example: "5.6"
          type: string
        unit:
          description: Represents the unit of the total received amount.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    GetAddressDetailsRI_totalSpent:
      example:
        amount: "2.1"
        unit: BTC
      properties:
        amount:
          description: "Defines the total amount of all spent by this address coins,\
            \ based on confirmed transactions."
          example: "2.1"
          type: string
        unit:
          description: Represents the unit of the total spent amount.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    GetAddressDetailsR_data:
      example:
        item:
          confirmedBalance:
            amount: amount
            unit: BTC
          totalSpent:
            amount: "2.1"
            unit: BTC
          incomingTransactionsCount: 2
          totalReceived:
            amount: "5.6"
            unit: BTC
          outgoingTransactionsCount: 2
          transactionsCount: 3
      properties:
        item:
          $ref: '#/components/schemas/GetAddressDetailsRI'
      required:
      - item
      type: object
    GetXRPRippleAddressDetailsRI_balance:
      description: Defines the balance of the account.
      example:
        amount: "22.0000"
        unit: XRP
      properties:
        amount:
          description: Represents the total amount of the balance.
          example: "22.0000"
          type: string
        unit:
          description: Represents the unit used for the balance.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    GetXRPRippleAddressDetailsR_data:
      example:
        item:
          sequence: 25648975
          incomingTransactionsCount: 1
          balance:
            amount: "22.0000"
            unit: XRP
          outgoingTransactionsCount: 1
          transactionsCount: 2
      properties:
        item:
          $ref: '#/components/schemas/GetXRPRippleAddressDetailsRI'
      required:
      - item
      type: object
    GetZilliqaAddressDetailsRI_balance:
      description: Represents the total balance of the address as an object.
      example:
        amount: "23.125"
        unit: ZIL
      properties:
        amount:
          description: Represents the amount of the address's balance.
          example: "23.125"
          type: string
        unit:
          description: Represents the unit of the address's balance.
          example: ZIL
          type: string
      required:
      - amount
      - unit
      type: object
    GetZilliqaAddressDetailsR_data:
      example:
        item:
          incomingTransactionsCount: 5
          balance:
            amount: "23.125"
            unit: ZIL
          outgoingTransactionsCount: 2
          transactionsCount: 5
      properties:
        item:
          $ref: '#/components/schemas/GetZilliqaAddressDetailsRI'
      required:
      - item
      type: object
    GetTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 0014daaf6d5cb86befe42df851a4d1df052e663754c1
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 160014daaf6d5cb86befe42df851a4d1df052e663754c1
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSB_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: caee978cae255bbe303ac86152679e46113a8b12925aa3afaa312d89d11ccbf8
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      type: object
    GetTransactionDetailsByTransactionIDRIBSB_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSB_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.00014400"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDRIBSBC_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: bitcoincash:qq0adqyntn2zl9tsyjfagnyda9j2gfjkk574lxyrxd
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: caee978cae255bbe303ac86152679e46113a8b12925aa3afaa312d89d11ccbf8
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      type: object
    GetTransactionDetailsByTransactionIDRIBSBC_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: bchtest:qqux7gek8sg6r9qjkrdmrvz6t4xet3ax3gztt2drzk
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 386f23363c11a19412b0dbb1b05a5d4d95c7a68a OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: pubkeyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSBC_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSBC_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.000122"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDRIBSL_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: "3045022100f031442894c0fd60c195fbdb29c0bf72f143a815689b8840cd31ec31cc6a7721022028f74f0869e4666761c9ba1035cc714528a17de873dfc7b3a541d29f3942a2d8[ALL]\
            \ 028c533b6c0ce0ad714a8af36b64d207c4f61cd6d5af210362447c92b4105a4fab"
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 483045022100f031442894c0fd60c195fbdb29c0bf72f143a815689b8840cd31ec31cc6a7721022028f74f0869e4666761c9ba1035cc714528a17de873dfc7b3a541d29f3942a2d80121028c533b6c0ce0ad714a8af36b64d207c4f61cd6d5af210362447c92b4105a4fab
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSL_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: LZ891CJWn54CpE6yJ4T3mzP8Xxwrg9gDpH
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399d620046183f4502cfabe6d6d54cff85e53693837dc613bc4cc4b78986c2193a4e2902e3da62aa311957f50844000000000000000042f4c502f08220000b0e1110000
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967294
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: 1db56e1e8dfab84f6f0e33f8ddb160c9b16286471a3b486d79ea85bcf4d076b2
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 304402204e88dfe79e58b640908812c496ea74d2941c23e70ee3d93ebd469dbd136afe0c02203d7631427c0b5cb96e8a8b23b6c8c0c8112ecb5fb020ee2a7a70841564ed679b01
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      type: object
    GetTransactionDetailsByTransactionIDRIBSL_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 3LAAY4fp88RsNHkVW5DZJgqUdbMD5rVoqZ
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ca94af32587de4e5006685ffffc65a818ccd3fbc OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ca94af32587de4e5006685ffffc65a818ccd3fbc87
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSL_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.03505975"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDRIBSD_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 030483ff6271580681f4f7828c01df56d5aebfe982cbaa2922594be9eb6cf40206
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 21030483ff6271580681f4f7828c01df56d5aebfe982cbaa2922594be9eb6cf40206ac
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSD_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: DPzdWPsKaGvRn3AH7WjBpnNVHhAPELDY4o
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 03dcf4150c0b2f454233322f414431322f04da88506004565cc01f0c3130fc5f4e050000000000000a626368706f6f6c172f20626974636f696e636173682e6e6574776f726b202f
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: qpq395ljesqakppupe3chd3n3jp60wd23ue00g66xx
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      - value
      type: object
    GetTransactionDetailsByTransactionIDRIBSD_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: yd5KMREs3GLMe6mTJYr3YrH1juwNwrFCfB
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 430158211605af1f0fa26d90405199621bdae5cd OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a914430158211605af1f0fa26d90405199621bdae5cd88ac
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSD_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "11.25"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDRIBSD2_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_DUP OP_HASH160 1fd680935cd42f95702493d44c8de964a42656b5 OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 4197968cb34bfba488b4a2399f7959b823fefad79ca0b5ed3f3a4bec4c0286cab55b896b28bbbcd4e61cf584cecfd47063b18b481d8d680eafbf869ada1a02c52441210237a84e6d70e775f274e4cbd9f30f9f8b1a426e8b08a9f802a851ce501c930011
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSD2_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: 7W7gfYstwDR6a2ZCxEidAuvshyomqJ8yXT
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 03dcf4150c0b2f454233322f414431322f04da88506004565cc01f0c3130fc5f4e050000000000000a626368706f6f6c172f20626974636f696e636173682e6e6574776f726b202f
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD2_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: f60cf447159b08e9857cbc96688ba80beff23c6f032f6545044ab40a771b15f5
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.2354"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      type: object
    GetTransactionDetailsByTransactionIDRIBSD2_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 4112d3f2cc01db043c0e638bb6338c83a7b9aa8f OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a9144112d3f2cc01db043c0e638bb6338c83a7b9aa8f88ac
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSD2_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD2_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.5896"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDRIBSE_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "2994782927"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: WEI
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDRIBSEC_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "2994782934"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: WEI
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDRIBSBSC_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "20000000000"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: BNB
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDRIBSZ_vJoinSplit_inner:
      properties:
        anchor:
          description: "Defines a Merkle tree root of a note commitment tree which\
            \ uniquely identifies a note commitment tree state given the assumed security\
            \ properties of the Merkle tree’s\r\nhash function."
          example: d32ddbaf0d9dc8c10783c01fd9ba5bd0bc2e5efe3d1665d7d6771eb4393736b4
          type: string
        cipherTexts:
          items:
            description: Represents the cipher texts.
            example: 988a182a3e561e0cca18e38e3273b3c538c3e6f79077867eca4305e48cbc5e6d3ff680de602e44fb8869f1a8747d9e3775f2418d33c41233e3612d6ecf277346b85bcd0c1fbdf4c4c0da107bf84e02c82588bf02f4a6c23ed36f70a436f69a6fe6cc38634d69e34e3d3942ff06a7921153689b4b50e3799f0ce3d8a35d165beaecc0c91018e9a8c618ff7036fd14b95641229e42974054c70d1e080c909c382297c5698b9af9b9291d6851c718d3e771e6376bd6dd52f4624ad024b4d85426e32fcf531019eeea547fda3ecca87aceaa80982e8fe22db152c01635d24fe4f59d1979610cad898c169d88559bcd8847f82b2ac5ab2f8623eed55b0273982297a52e9cbb4523d6411a0d40f59faf0ff9f23783790027d5f5153d421d897c11b9da48e7218b7ce64c653283ecaffab78006b771aec20e05761d768f9347f96c566d47014eff083268622e81ce6c17e1e66227ee795cd3a7efb77c3b5b4a896d75111a2a846be94c0fcdaab69ca2101a499c817590c4d1ea8b39145f0168210af4ac86cc6018e95c0699a6f1275c2934cbe1cf84bbeee12ed77b54fe4c2f6b1c0187e7ab31750e03cf72467e9bf7c8a89bb8f4160b5d56def4cb24f595303bcdf065bf2ec7161c8165a6be7252b7cd8c3aa9bf9baf78690f19c1d4fc1d39e558bd4f4fdb3e56fb1b2e287cf67b0e0cf8df5c28c7bb94393cb837c180d380814a63e7db94e4e9652933e67f28f93dd92ee45be8f824cd9469dd0a872e130d4c1621a56d2a33ffb51c04b4151f0a471472a977d771b0eb13bf9fde44804ef755b97e1cae1e8d807f5eb692d7ffc20d8e451ce9ccd75b1a270836db80
            type: string
          type: array
        commitments:
          items:
            description: Represents the commitments.
            example: 2f7f341d6af9a75b317d0753d2fc0514baf38bb602cd66dc7d221aa371e6062c
            type: string
          type: array
        macs:
          items:
            description: Represents the macs.
            example: 52f677a49eb36bcce6b30f94bee481d73c4fdd61963bda54b68f3a90ca007b59
            type: string
          type: array
        nullifiers:
          items:
            description: Represents a sequence of nullifiers of the input notes.
            example: 30e41a9a6605933a75ec42439ab65eb347025002f6486e5549abb82438447dbe
            type: string
          type: array
        oneTimePubKey:
          description: Defines the one time public key.
          example: 0a2e7ba03903480af852cb47d8ce76eb6546aef69bdb35b28b8ae815012d4d13
          type: string
        proof:
          description: Defines the proof.
          example: 8dd9c988c9f337bd55c07fa9e2fa405cf4dda2cb915214fc0b5924870eed0f0187a0db001b5d8ea43a537e423d91d0fc868a456fa3e0bf9e99d1b04f43c6983a05a99458a69903add73ccaa4177844df9056d40c5a71ae14a70835cb30ca7d810fa1d48c9180ddec2ca1cecfaa8706ab514d6e8fe2dd228d7dc012d9407517523b774107a6a78dc972b175b94d1681b980e2b9ba7d39f880973787080a12bf14dc3f038333245a60bbcd9cb1fe2baba30ed083535752cc26ea0c57134e0c774e
          type: string
        randomSeed:
          description: Represents a 256-bit seed that must be chosen independently
            at random for each JoinSplit description.
          example: 05eb35ce1cec5f5824f708ee9d95467d2318d24c8d4220040df92d48b1f182e8
          type: string
        vPubNew:
          description: Defines the value that the joinSplit transfer will insert into
            the transparent transaction value pool
          example: "50.02989193"
          type: string
        vPubOld:
          description: Defines the value that the joinSplit transfer will remove from
            the transparent transaction value pool.
          example: "0"
          type: string
      required:
      - anchor
      - cipherTexts
      - commitments
      - macs
      - nullifiers
      - oneTimePubKey
      - proof
      - randomSeed
      - vPubNew
      - vPubOld
      type: object
    GetTransactionDetailsByTransactionIDRIBSZ_vShieldedOutput_inner:
      properties:
        cmu:
          description: Represents the 𝑢-coordinate of the note commitment for the
            output note.
          example: 4eb188a762d4fd4358ae70b2dac1b6a596ad653be92471792bf4b157850a1011
          type: string
        cv:
          description: Defines a value commitment to the value of the input note.
          example: 547a9cef4937304f97acacfcd9827b5aa1b2e5b1ae32e360fae828b955564a0e
          type: string
        encCipherText:
          description: Represents a ciphertext component for the encrypted output
            note.
          example: a6c0084214eef0058f4b51c1e25b4c05ac282fec0edc5938c4283aa2a6d7c426d7a3c927d11596f81780b18c0eee90848702eb7fa512f7a6386e52d9bc17d5bc0e20bc24608ece560a314570aaf4c095bc988a9a0f8ef72ed91d0eee7d927eb37428c62af28c6a5c9379ac48aef3cdfb9b83eed77edde50acab7615f8fecdb1f24500fab6b8a72440e6fadbf0e6ad0ff8989df4d27bb2bc56c3a99c6da2e82c68a319857902842cf15aec180b6ea0ff3ebedf1cfd02b434ac715bc4afb17f67286d5708864a7aabb461461f080bbcf0315c38d782be6d0aae7ac3beb6574babf12c9182574d6c6e900888b5c4da40952c403b7d4ebe96e051893e388bcb7026d839e1d49ddbb132706fbadae1ef272d7e8dbf297dfbe7867651cfd843e52239d8270c1b6d46f2589643a5a325018f2d0b82b53955a5a3c5c3cecf8f0829594777887028456bd708c7c4ad88e588609c1b33d9060d8cf0015bfc18676ebc7022956ab6d4c6aae24550422e702733da234e2ce6f5adbafc4e2d97ae9846febddeacfaefda7f186b7e8182f4692c34bff4bd31eeeab15c5b5f7a41c93acae05a4f3c378fbe6cf33ab3628f4c5b8e04b9368ec69ea1c7c816c803d9ef7bbafe232f43959c7b49dd7c3328dc028040f440fd3cb2e08449db77c191288f120c065870d800ebdca234e6c2ba1fa6d44d04f4fed2e41b1c65d273b0ce58287274e8dc71a2a174244f026971bb9c698e7f7964eec615515910c627a201b52c3c2c504623ac45f5606d0400120bd5b6e1f431775fe92fb2c9eb5546c9dc12693ee9b679e49fce2cf71
          type: string
        ephemeralKey:
          description: Represents an encoding of an ephemeral Jubjub public key.
          example: 04c59e908296aeac1160ba8def90916988bf8389564343e6fb3b9e52c27fba0a
          type: string
        outCipherText:
          description: "Represents a ciphertext component that allows the holder of\
            \ the outgoing cipher key to recover the diversified transmission key\
            \ pkd and ephemeral private key esk, hence the entire note plaintext."
          example: b3f02b333a61b69e63dfeaf1ad430534985cd6958abe92664abe85449ca68b5c145f536e9a636a881aab5e314b4f550b2b8f5600dc1ed636f643b11e00bb6c469bf5205f16197372dcf5e4b0871e42f4
          type: string
        proof:
          description: Represents the proof.
          example: 8dd9c988c9f337bd55c07fa9e2fa405cf4dda2cb915214fc0b5924870eed0f0187a0db001b5d8ea43a537e423d91d0fc868a456fa3e0bf9e99d1b04f43c6983a05a99458a69903add73ccaa4177844df9056d40c5a71ae14a70835cb30ca7d810fa1d48c9180ddec2ca1cecfaa8706ab514d6e8fe2dd228d7dc012d9407517523b774107a6a78dc972b175b94d1681b980e2b9ba7d39f880973787080a12bf14dc3f038333245a60bbcd9cb1fe2baba30ed083535752cc26ea0c57134e0c774e
          type: string
      required:
      - cmu
      - cv
      - encCipherText
      - ephemeralKey
      - outCipherText
      - proof
      type: object
    GetTransactionDetailsByTransactionIDRIBSZ_vShieldedSpend_inner:
      properties:
        anchor:
          description: "Defines a Merkle tree root of a note commitment tree which\
            \ uniquely identifies a note commitment tree state given the assumed security\
            \ properties of the Merkle tree’s\r\nhash function."
          example: d32ddbaf0d9dc8c10783c01fd9ba5bd0bc2e5efe3d1665d7d6771eb4393736b4
          type: string
        cv:
          description: Defines a value commitment to the value of the input note.
          example: 547a9cef4937304f97acacfcd9827b5aa1b2e5b1ae32e360fae828b955564a0e
          type: string
        nullifier:
          description: Represents a sequence of nullifiers of the input notes.
          example: 30e41a9a6605933a75ec42439ab65eb347025002f6486e5549abb82438447dbe
          type: string
        proof:
          description: Represents the proof.
          example: 030ff7fdb006db7f9acb0d2d6fae180e4395f0b6a979f6ddf48a349bc03ad2e7bb0324a5c3c7e6be131c34126ad22c74138f45f6f77bba706dfc87335a9adffcfef20a03e47751f403a37f9c5e1874aa50818c3eef09304c57c77b111057c09ed2112a7ed310ad285e0b778a4f44b654032b642b8b2df3be16bea011da7a2221bc0f0a0309f51f87caef2ea0f665f1a77d0dd50766d835d181e534818d8c3413b4d555990222574d9c92f81f17ff0af7a0583e76b3d3d4df2927561f37e57e15bc07b3f5d70306a9624c496d0bcb40085894bf32ef05db6469ec145c0ce5529e2697b6a0252c0216930cf7b3a7381762a6a91868e9d2bf823bfc7fb885de1fbd6a6cacae02db590318ffeb357ffd6832893ab0ccd3b15cef1df0fef45c091cf33fccee43a2834d44
          type: string
        rk:
          description: Represents the randomized validating key for spendAuthSig.
          example: 39bdf742e16c4d1533a56df956bebe4d0214d4a361820db58a293847b6344d30
          type: string
        spendAuthSig:
          description: Used to prove knowledge of the spending key authorizing spending
            of an input note.
          example: 0f3b38a91fffbbf58f99d2d070002c0868be6804204b7bf4be0df47f62ee5e0d43222776a71fd7e1421ec54502194192d73681701b743ad427573ca18a95a405
          type: string
      required:
      - anchor
      - cv
      - nullifier
      - proof
      - rk
      - spendAuthSig
      type: object
    GetTransactionDetailsByTransactionIDRIBSZ_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_HASH160 ef775f1f997f122a062fff1a2d7443abd1f9c642 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: a914ef775f1f997f122a062fff1a2d7443abd1f9c64287
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: pubkeyhash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSZ_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: t2UNzUUx8mWBCRYPRezvA363EYXyEpHokyi
            type: string
          type: array
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Defines the specific amount.
          example: "0.000144"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    GetTransactionDetailsByTransactionIDRIBSZ_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: t2UNzUUx8mWBCRYPRezvA363EYXyEpHokyi
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ef775f1f997f122a062fff1a2d7443abd1f9c642 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ef775f1f997f122a062fff1a2d7443abd1f9c64287
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: pubkeyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDRIBSZ_vout_inner:
      properties:
        isSpent:
          description: Defines whether the transaction output has been spent or not.
          example: true
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vout_inner_scriptPubKey'
        value:
          description: Represents the specific amount.
          example: "0.000144"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDRI_recipients_inner:
      example:
        amount: "0.000144"
        address: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
      properties:
        address:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
          type: string
        amount:
          description: Represents the amount received to this address.
          example: "0.000144"
          type: string
      required:
      - address
      - amount
      type: object
    GetTransactionDetailsByTransactionIDRI_senders_inner:
      example:
        amount: "0.00873472"
        address: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
      properties:
        address:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0.00873472"
          type: string
      required:
      - address
      - amount
      type: object
    GetTransactionDetailsByTransactionIDRI_fee:
      example:
        amount: "0.00016932"
        unit: ZEC
      properties:
        amount:
          description: "When isConfirmed is True - Defines the amount of the transaction\
            \ fee\r\nWhen isConfirmed is False - For ETH-based blockchains this attribute\
            \ represents the max fee value."
          example: "0.00016932"
          type: string
        unit:
          description: Defines the fee unit.
          example: ZEC
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDR_data:
      example:
        item:
          recipients:
          - amount: "0.000144"
            address: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
          - amount: "0.000144"
            address: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
          fee:
            amount: "0.00016932"
            unit: ZEC
          minedInBlockHeight: 1939750
          index: 1
          isConfirmed: true
          minedInBlockHash: 00000000407f119ecb74b44229228910400aaeb9f4e3b9869955b85a53e9b7db
          blockchainSpecific: null
          senders:
          - amount: "0.00873472"
            address: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
          - amount: "0.00873472"
            address: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
          transactionHash: 1ec73b0f61359927d02376b35993b756b1097cb9a857bec23da4c98c4977d2b2
          transactionId: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          timestamp: 1582202940
      properties:
        item:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRI'
      required:
      - item
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDRI_offer:
      description: Defines the specific offer.
      example:
        amount: "3.0154"
        unit: XRP
      properties:
        amount:
          description: Defines the amount of the offer.
          example: "3.0154"
          type: string
        unit:
          description: Defines the unit of the offer.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDRI_receive:
      description: Defines on object array of the funds for which an offer is made.
      example:
        amount: "2.1256"
        unit: XRP
      properties:
        amount:
          description: Defines the amount of the funds for which an offer is made.
          example: "2.1256"
          type: string
        unit:
          description: Defines the unit of the funds for which an offer is made.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDRI_recipients_inner:
      example:
        amount: "0.00001"
        address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
      properties:
        address:
          description: Represents the hash of the address that receives the funds.
          example: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
          type: string
        amount:
          description: Defines the amount of the received funds as a string.
          example: "0.00001"
          type: string
      required:
      - address
      - amount
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDRI_senders_inner:
      example:
        amount: "0.00001"
        address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
      properties:
        address:
          description: Represents the hash of the address that provides the funds.
          example: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0.00001"
          type: string
      required:
      - address
      - amount
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDRI_fee:
      example:
        amount: "0.0021"
        unit: XRP
      properties:
        amount:
          description: Defines the amount of the fee.
          example: "0.0021"
          type: string
        unit:
          description: Defines the unit of the fee.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDRI_value:
      example:
        amount: "3.0254"
        unit: XRP
      properties:
        amount:
          description: Defines the amount of the value.
          example: "3.0254"
          type: string
        unit:
          description: Defines the unit of the value.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    GetXRPRippleTransactionDetailsByTransactionIDR_data:
      example:
        item:
          receive:
            amount: "2.1256"
            unit: XRP
          destinationTag: 3999472835
          fee:
            amount: "0.0021"
            unit: XRP
          index: "2"
          minedInBlockHash: 3f7af58d6cf1cd9020fb285d8e3e215131800d5109e42647ffd9b3aeae59df33
          type: Payment
          transactionHash: 36a1737481edec87bacc3101dfb752ae2c76f9171e7edebe587e330c1ea77c8d
          offer:
            amount: "3.0154"
            unit: XRP
          sequence: 4294967295
          recipients:
          - amount: "0.00001"
            address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
          - amount: "0.00001"
            address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
          minedInBlockHeight: "15973802"
          additionalData: rPmPErQe4g9725pcNxJpuvKkdqTESTQ6Tu
          senders:
          - amount: "0.00001"
            address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
          - amount: "0.00001"
            address: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
          value:
            amount: "3.0254"
            unit: XRP
          status: status
          timestamp: 1582202940
      properties:
        item:
          $ref: '#/components/schemas/GetXRPRippleTransactionDetailsByTransactionIDRI'
      required:
      - item
      type: object
    GenerateDepositAddressR_data:
      example:
        item:
          address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
          createdTimestamp: 1624028267
          label: yourLabelStringHere
      properties:
        item:
          $ref: '#/components/schemas/GenerateDepositAddressRI'
      required:
      - item
      type: object
    GetZilliqaTransactionDetailsByTransactionIDRI_fee:
      description: Represents the transaction fee.
      example:
        amount: "0.000235"
        unit: ZIL
      properties:
        amount:
          description: Represents the amount of the transaction fee.
          example: "0.000235"
          type: string
        unit:
          description: Represents the unit of the transaction fee.
          example: ZIL
          type: string
      required:
      - amount
      - unit
      type: object
    GetZilliqaTransactionDetailsByTransactionIDRI_recipients_inner:
      example:
        amount: "0"
        address: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
      properties:
        address:
          description: Represents the hash of the address that receives the funds.
          example: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
          type: string
        amount:
          description: Defines the amount of the received funds as a string.
          example: "0"
          type: string
      required:
      - address
      - amount
      type: object
    GetZilliqaTransactionDetailsByTransactionIDRI_senders_inner:
      example:
        amount: "0"
        address: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
      properties:
        address:
          description: Represents the hash of the address that provides the funds.
          example: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0"
          type: string
      required:
      - address
      - amount
      type: object
    GetZilliqaTransactionDetailsByTransactionIDR_data:
      example:
        item:
          gasLimit: 552020
          gasUsed: 24673
          transactionStatus: "0"
          recipients:
          - amount: "0"
            address: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
          - amount: "0"
            address: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
          fee:
            amount: "0.000235"
            unit: ZIL
          minedInBlockHeight: 1250207
          minedInBlockHash: 0x5ba627aed1ff0f5480694e994ee03a6ec7b5a6fa96be899c84d52725f9830891
          transactionIndex: 0
          nonce: 13
          senders:
          - amount: "0"
            address: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
          - amount: "0"
            address: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
          gasPrice: 2994782927
          timestamp: 1582202940
      properties:
        item:
          $ref: '#/components/schemas/GetZilliqaTransactionDetailsByTransactionIDRI'
      required:
      - item
      type: object
    ListConfirmedTransactionsByAddressRIBSB_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: caee978cae255bbe303ac86152679e46113a8b12925aa3afaa312d89d11ccbf8
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        vout:
          description: "Defines the vout of the transaction output, i.e. which output\
            \ to spend."
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      type: object
    ListConfirmedTransactionsByAddressRIBSB_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ca94af32587de4e5006685ffffc65a818ccd3fbc OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListConfirmedTransactionsByAddressRIBSB_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: true
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSB_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.000144"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListConfirmedTransactionsByAddressRIBSBC_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: bitcoincash:qq0adqyntn2zl9tsyjfagnyda9j2gfjkk574lxyrxd
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: caee978cae255bbe303ac86152679e46113a8b12925aa3afaa312d89d11ccbf8
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        vout:
          description: "Defines the vout of the transaction output, i.e. which output\
            \ to spend."
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListConfirmedTransactionsByAddressRIBSL_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 0 eab6ff0ee1158241737dfa5c78449dc06cf021cc
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 0014eab6ff0ee1158241737dfa5c78449dc06cf021cc
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListConfirmedTransactionsByAddressRIBSL_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: tltc1qcefwt8q647lstt5829exynqnecr9uxq9pk3yr5
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399d620046183f4502cfabe6d6d54cff85e53693837dc613bc4cc4b78986c2193a4e2902e3da62aa311957f50844000000000000000042f4c502f08220000b0e1110000
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSL_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967294"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: 1db56e1e8dfab84f6f0e33f8ddb160c9b16286471a3b486d79ea85bcf4d076b2
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 304402204e88dfe79e58b640908812c496ea74d2941c23e70ee3d93ebd469dbd136afe0c02203d7631427c0b5cb96e8a8b23b6c8c0c8112ecb5fb020ee2a7a70841564ed679b01
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: "Defines the vout of the transaction output, i.e. which output\
            \ to spend."
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - txinwitness
      type: object
    ListConfirmedTransactionsByAddressRIBSD_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 030483ff6271580681f4f7828c01df56d5aebfe982cbaa2922594be9eb6cf40206
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 21030483ff6271580681f4f7828c01df56d5aebfe982cbaa2922594be9eb6cf40206ac
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: pubkey
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListConfirmedTransactionsByAddressRIBSD_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: DPzdWPsKaGvRn3AH7WjBpnNVHhAPELDY4o
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0301352f0101
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: e1945b5d7e05f6d5ff77983d8a701b806722063559ed2528721b23fcb50baf06
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: nY1qa6325pH5zfGjA3NW16xPYG8XYQjtbS
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - coinbase
      - scriptSig
      - sequence
      - txinwitness
      - value
      type: object
    ListConfirmedTransactionsByAddressRIBSD2_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_DUP OP_HASH160 1ec5c66e9789c655ae068d35088b4073345fe0b0 OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 76a9141ec5c66e9789c655ae068d35088b4073345fe0b088ac
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListConfirmedTransactionsByAddressRIBSD2_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: yP8A3cbdxRtLRduy5mXDsBnJtMzHWs6ZXr
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: "039312070108"
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: 54b8f0e54b4b66fab386c6f9dea76bfe06524ab71d1d42b321aea9a7fea50f48
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: yP8A3cbdxRtLRduy5mXDsBnJtMzHWs6ZXr
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "7.76021116"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      - vout
      type: object
    ListConfirmedTransactionsByAddressRIBSD2_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: yP8A3cbdxRtLRduy5mXDsBnJtMzHWs6ZXr
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 1ec5c66e9789c655ae068d35088b4073345fe0b0 OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a9141ec5c66e9789c655ae068d35088b4073345fe0b088ac
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListConfirmedTransactionsByAddressRIBSD2_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "7.76020409"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListConfirmedTransactionsByAddressRIBSEC_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "21000"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: ETC
          type: string
      required:
      - amount
      - unit
      type: object
    ListConfirmedTransactionsByAddressRIBSE_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas
          example: "2994782927"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: WEI
          type: string
      required:
      - amount
      - unit
      type: object
    ListConfirmedTransactionsByAddressRIBSBSC_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas
          example: "20000000000"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: BNB
          type: string
      required:
      - amount
      - unit
      type: object
    ListConfirmedTransactionsByAddressRIBSZ_vJoinSplit_inner:
      properties:
        anchor:
          description: "Defines a Merkle tree root of a note commitment tree which\
            \ uniquely identifies a note commitment tree state given the assumed security\
            \ properties of the Merkle tree’s\r\nhash function."
          example: d32ddbaf0d9dc8c10783c01fd9ba5bd0bc2e5efe3d1665d7d6771eb4393736b4
          type: string
        cipherTexts:
          items:
            description: Represents the cipher texts.
            example: 988a182a3e561e0cca18e38e3273b3c538c3e6f79077867eca4305e48cbc5e6d3ff680de602e44fb8869f1a8747d9e3775f2418d33c41233e3612d6ecf277346b85bcd0c1fbdf4c4c0da107bf84e02c82588bf02f4a6c23ed36f70a436f69a6fe6cc38634d69e34e3d3942ff06a7921153689b4b50e3799f0ce3d8a35d165beaecc0c91018e9a8c618ff7036fd14b95641229e42974054c70d1e080c909c382297c5698b9af9b9291d6851c718d3e771e6376bd6dd52f4624ad024b4d85426e32fcf531019eeea547fda3ecca87aceaa80982e8fe22db152c01635d24fe4f59d1979610cad898c169d88559bcd8847f82b2ac5ab2f8623eed55b0273982297a52e9cbb4523d6411a0d40f59faf0ff9f23783790027d5f5153d421d897c11b9da48e7218b7ce64c653283ecaffab78006b771aec20e05761d768f9347f96c566d47014eff083268622e81ce6c17e1e66227ee795cd3a7efb77c3b5b4a896d75111a2a846be94c0fcdaab69ca2101a499c817590c4d1ea8b39145f0168210af4ac86cc6018e95c0699a6f1275c2934cbe1cf84bbeee12ed77b54fe4c2f6b1c0187e7ab31750e03cf72467e9bf7c8a89bb8f4160b5d56def4cb24f595303bcdf065bf2ec7161c8165a6be7252b7cd8c3aa9bf9baf78690f19c1d4fc1d39e558bd4f4fdb3e56fb1b2e287cf67b0e0cf8df5c28c7bb94393cb837c180d380814a63e7db94e4e9652933e67f28f93dd92ee45be8f824cd9469dd0a872e130d4c1621a56d2a33ffb51c04b4151f0a471472a977d771b0eb13bf9fde44804ef755b97e1cae1e8d807f5eb692d7ffc20d8e451ce9ccd75b1a270836db80
            type: string
          type: array
        commitments:
          items:
            description: Represents the commitments.
            example: 2f7f341d6af9a75b317d0753d2fc0514baf38bb602cd66dc7d221aa371e6062c
            type: string
          type: array
        macs:
          items:
            description: Represents the macs.
            example: 52f677a49eb36bcce6b30f94bee481d73c4fdd61963bda54b68f3a90ca007b59
            type: string
          type: array
        nullifiers:
          items:
            description: Represents a sequence of nullifiers of the input notes.
            example: 30e41a9a6605933a75ec42439ab65eb347025002f6486e5549abb82438447dbe
            type: string
          type: array
        oneTimePubKey:
          description: Defines the one time public key.
          example: 0a2e7ba03903480af852cb47d8ce76eb6546aef69bdb35b28b8ae815012d4d13
          type: string
        proof:
          description: Defines the proof.
          example: 8dd9c988c9f337bd55c07fa9e2fa405cf4dda2cb915214fc0b5924870eed0f0187a0db001b5d8ea43a537e423d91d0fc868a456fa3e0bf9e99d1b04f43c6983a05a99458a69903add73ccaa4177844df9056d40c5a71ae14a70835cb30ca7d810fa1d48c9180ddec2ca1cecfaa8706ab514d6e8fe2dd228d7dc012d9407517523b774107a6a78dc972b175b94d1681b980e2b9ba7d39f880973787080a12bf14dc3f038333245a60bbcd9cb1fe2baba30ed083535752cc26ea0c57134e0c774e
          type: string
        randomSeed:
          description: Represents a 256-bit seed that must be chosen independently
            at random for each JoinSplit description.
          example: 05eb35ce1cec5f5824f708ee9d95467d2318d24c8d4220040df92d48b1f182e8
          type: string
        vPubNew:
          description: Defines the value that the joinSplit transfer will insert into
            the transparent transaction value pool.
          example: "50.02989193"
          type: string
        vPubOld:
          description: Defines the value that the joinSplit transfer will remove from
            the transparent transaction value pool.
          example: "0"
          type: string
      required:
      - anchor
      - cipherTexts
      - commitments
      - macs
      - nullifiers
      - oneTimePubKey
      - proof
      - randomSeed
      - vPubNew
      - vPubOld
      type: object
    ListConfirmedTransactionsByAddressRIBSZ_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: t2UNzUUx8mWBCRYPRezvA363EYXyEpHokyi
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 02d3080c4e060000000000002f4e614e
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Defines the specific amount.
          example: "0.000144"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - coinbase
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListConfirmedTransactionsByAddressRI_fee:
      properties:
        amount:
          description: Defines the amount of the transaction fee.
          example: "0.00016932"
          type: string
        unit:
          description: Defines the specific unit of the fee.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    ListConfirmedTransactionsByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListXRPRippleTransactionsByAddressRI_fee:
      properties:
        amount:
          description: Defines the amount of the transaction fee.
          example: "0.000024"
          type: string
        unit:
          description: Defines the unit of the transaction fee.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByAddressRI_offer:
      properties:
        amount:
          description: Defines the amount of the offer.
          example: "5.256"
          type: string
        unit:
          description: Defines the unit of the offer.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByAddressRI_receive:
      properties:
        amount:
          description: Defines the amount received.
          example: "4.236"
          type: string
        unit:
          description: Defines the unit of the amount received.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByAddressRI_value:
      properties:
        amount:
          description: Defines the specific amount of the value.
          example: "22"
          type: string
        unit:
          description: Defines the specific unit of the value.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    CreateCoinsTransactionRequestFromWalletRI_recipients_inner:
      example:
        amount: "0.00123"
        address: mmd963W1fECjLyaDCHcioSCZYHkRwjkhtr
      properties:
        address:
          description: Defines the specific destination address.
          example: mmd963W1fECjLyaDCHcioSCZYHkRwjkhtr
          type: string
        amount:
          description: Represents the specific amount of the transaction's destination.
          example: "0.00123"
          type: string
      required:
      - address
      - amount
      type: object
    CreateCoinsTransactionRequestFromWalletR_data:
      example:
        item:
          feePriority: standard
          note: yourAdditionalInformationhere
          totalTransactionAmount: "0.001"
          transactionRequestStatus: created
          recipients:
          - amount: "0.00123"
            address: mmd963W1fECjLyaDCHcioSCZYHkRwjkhtr
          - amount: "0.00123"
            address: mmd963W1fECjLyaDCHcioSCZYHkRwjkhtr
          transactionRequestId: 6017dd02a309213863be9e55
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
      properties:
        item:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromWalletRI'
      required:
      - item
      type: object
    ListZilliqaTransactionsByAddressRI_recipients_inner:
      properties:
        address:
          description: Represents the recipient's address.
          example: zil1v25at4s3eh9w34uqqhe3vdvfsvcwq6un3fupc2
          type: string
        amount:
          description: Represents the received amount.
          example: "0"
          type: string
      required:
      - address
      - amount
      type: object
    ListZilliqaTransactionsByAddressRI_senders_inner:
      properties:
        address:
          description: Represents the sender's address.
          example: zil1uhn7627k6xl5f03sq6grje5lk3gy0kf5aptz83
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0"
          type: string
      required:
      - address
      - amount
      type: object
    ListZilliqaTransactionsByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListUnconfirmedTransactionsByAddressRIBSB_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: "304402203862a918653adb03c5dcd82965b2e6c658b5cabdecba315231975873c5a12aa102203101f4d9b4b1cae943c04054b53d2dc8a359776963e9d029fdf0ddba785ab71f[ALL]\
            \ 027970a92cad2023bc5e83dc4199333a5c6f45a15a141963ac61a3c773940b0115"
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 47304402203862a918653adb03c5dcd82965b2e6c658b5cabdecba315231975873c5a12aa102203101f4d9b4b1cae943c04054b53d2dc8a359776963e9d029fdf0ddba785ab71f0121027970a92cad2023bc5e83dc4199333a5c6f45a15a141963ac61a3c773940b0115
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: pubkeyhash
          type: string
      required:
      - asm
      - type
      type: object
    ListUnconfirmedTransactionsByAddressRIBSB_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: n1eypQAVqQMmDuXffCF3LPXREmF71ecuai
            type: string
          type: array
        scriptSig:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: aca730af131622fa0d765706e9e5263faee054b03a00b6e9b25f235462fb3043
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.19163773"
          type: string
        vout:
          description: "Defines the vout of the transaction output, i.e. which output\
            \ to spend."
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      type: object
    ListUnconfirmedTransactionsByAddressRIBSB_vout_inner_scriptPubKey:
      description: Object representation of the script
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: tb1qdc0jaryry3u56j94xp5zeyhn9zjuzkqec2mvfh
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 3502000e8ff5717295df19fbae4597c4f43fb1d9 OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a9143502000e8ff5717295df19fbae4597c4f43fb1d988ac
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: witness_v0_keyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListUnconfirmedTransactionsByAddressRIBSB_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: true
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSB_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.09720621"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListUnconfirmedTransactionsByAddressRIBSBC_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: bitcoincash:qq0adqyntn2zl9tsyjfagnyda9j2gfjkk574lxyrxd
            type: string
          type: array
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: String representation of the txid
          example: caee978cae255bbe303ac86152679e46113a8b12925aa3afaa312d89d11ccbf8
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        vout:
          description: "Defines the vout of the transaction output, i.e. which output\
            \ to spend."
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListUnconfirmedTransactionsByAddressRIBSBC_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: bchtest:qqux7gek8sg6r9qjkrdmrvz6t4xet3ax3gztt2drzk
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 386f23363c11a19412b0dbb1b05a5d4d95c7a68a OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: String representation of the type
          example: pubkeyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListUnconfirmedTransactionsByAddressRIBSBC_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: true
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSBC_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.000122"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListUnconfirmedTransactionsByAddressRIBSL_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 0 eab6ff0ee1158241737dfa5c78449dc06cf021cc
          type: string
        hex:
          description: String array representation of the hex
          example: 0014eab6ff0ee1158241737dfa5c78449dc06cf021cc
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListUnconfirmedTransactionsByAddressRIBSL_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: tltc1qcefwt8q647lstt5829exynqnecr9uxq9pk3yr5
            type: string
          type: array
        scriptSig:
          $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRIBSL_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967294"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: 1db56e1e8dfab84f6f0e33f8ddb160c9b16286471a3b486d79ea85bcf4d076b2
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 304402204e88dfe79e58b640908812c496ea74d2941c23e70ee3d93ebd469dbd136afe0c02203d7631427c0b5cb96e8a8b23b6c8c0c8112ecb5fb020ee2a7a70841564ed679b01
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: "Defines the vout of the transaction output, i.e. which output\
            \ to spend."
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      type: object
    ListUnconfirmedTransactionsByAddressRIBSL_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSL_vout_inner_scriptPubKey'
        value:
          description: String representation of the amount
          example: "0.03505975"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListUnconfirmedTransactionsByAddressRIBSD_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: DPzdWPsKaGvRn3AH7WjBpnNVHhAPELDY4o
            type: string
          type: array
        scriptSig:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: e1945b5d7e05f6d5ff77983d8a701b806722063559ed2528721b23fcb50baf06
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: nY1qa6325pH5zfGjA3NW16xPYG8XYQjtbS
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      - value
      type: object
    ListUnconfirmedTransactionsByAddressRIBSD2_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: yP8A3cbdxRtLRduy5mXDsBnJtMzHWs6ZXr
            type: string
          type: array
        scriptSig:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: 54b8f0e54b4b66fab386c6f9dea76bfe06524ab71d1d42b321aea9a7fea50f48
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: yP8A3cbdxRtLRduy5mXDsBnJtMzHWs6ZXr
            type: string
          type: array
        value:
          description: String representation of the amount
          example: "7.76021116"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - vout
      type: object
    ListUnconfirmedTransactionsByAddressRIBSD2_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListConfirmedTransactionsByAddressRIBSD2_vout_inner_scriptPubKey'
        value:
          description: String representation of the amount
          example: "7.76020409"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListUnconfirmedTransactionsByAddressRIBSE_fee:
      description: Object representation of the transaction fee
      properties:
        amount:
          description: String representation of the fee value
          example: "0.0122"
          type: string
        unit:
          example: ETH
          type: string
      required:
      - amount
      - unit
      type: object
    ListUnconfirmedTransactionsByAddressRIBSEC_fee:
      description: Object representation of the transaction fee
      properties:
        amount:
          description: String representation of the fee value
          example: "0.000105"
          type: string
        unit:
          example: ETH
          type: string
      required:
      - amount
      - unit
      type: object
    ListUnconfirmedTransactionsByAddressRIBSEC_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "21000"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: ETH
          type: string
      required:
      - amount
      - unit
      type: object
    ListUnconfirmedTransactionsByAddressRI_recipients_inner:
      properties:
        address:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: tb1qdc0jaryry3u56j94xp5zeyhn9zjuzkqec2mvfh
          type: string
        amount:
          description: Represents the amount received to this address.
          example: "0.09720621"
          type: string
      required:
      - address
      - amount
      type: object
    ListUnconfirmedTransactionsByAddressRI_senders_inner:
      properties:
        address:
          description: Represents the address of the sender.
          example: n1eypQAVqQMmDuXffCF3LPXREmF71ecuai
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0.19163773"
          type: string
      required:
      - address
      - amount
      type: object
    ListUnconfirmedTransactionsByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListUnconfirmedTransactionsByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListXRPRippleTransactionsByAddressAndTimeRangeR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListXRPRippleTransactionsByAddressAndTimeRangeRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListTransactionsByBlockHashRIBSB_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: caee978cae255bbe303ac86152679e46113a8b12925aa3afaa312d89d11ccbf8
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - coinbase
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListTransactionsByBlockHashRIBSB_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHashRIBSB_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: true
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSB_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.000144"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHashRIBSBC_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: bitcoincash:qq0adqyntn2zl9tsyjfagnyda9j2gfjkk574lxyrxd
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: caee978cae255bbe303ac86152679e46113a8b12925aa3afaa312d89d11ccbf8
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 2
          type: integer
      required:
      - addresses
      - coinbase
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListTransactionsByBlockHashRIBSBC_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: bchtest:qqux7gek8sg6r9qjkrdmrvz6t4xet3ax3gztt2drzk
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 386f23363c11a19412b0dbb1b05a5d4d95c7a68a OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 2
          type: integer
        type:
          description: Represents the script type.
          example: pubkeyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHashRIBSBC_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSBC_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.000122"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHashRIBSL_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHashRIBSL_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0382221c04d6e05160086800002d090000000d2f6e6f64655374726174756d2f
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSL_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967294"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: 1db56e1e8dfab84f6f0e33f8ddb160c9b16286471a3b486d79ea85bcf4d076b2
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 304402204e88dfe79e58b640908812c496ea74d2941c23e70ee3d93ebd469dbd136afe0c02203d7631427c0b5cb96e8a8b23b6c8c0c8112ecb5fb020ee2a7a70841564ed679b01
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 2
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListTransactionsByBlockHashRIBSL_vout_inner_scriptPubKey:
      description: Object representation of the script
      example: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 3LAAY4fp88RsNHkVW5DZJgqUdbMD5rVoqZ
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ca94af32587de4e5006685ffffc65a818ccd3fbc OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ca94af32587de4e5006685ffffc65a818ccd3fbc87
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 2
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHashRIBSL_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSL_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.03505975"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHashRIBSD_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: DPzdWPsKaGvRn3AH7WjBpnNVHhAPELDY4o
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 037a3a2f
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 2
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      - value
      type: object
    ListTransactionsByBlockHashRIBSD_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: yd5KMREs3GLMe6mTJYr3YrH1juwNwrFCfB
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 430158211605af1f0fa26d90405199621bdae5cd OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a914430158211605af1f0fa26d90405199621bdae5cd88ac
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 2
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHashRIBSD_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "11.25"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHashRIBSD2_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_DUP OP_HASH160 1fd680935cd42f95702493d44c8de964a42656b5 OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 76a9141442eec4888ec035fd27a82f227e09f548bec81288ac
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHashRIBSD2_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: nW3Hxfx9a9ef1MCHm6veWBbw1Nh2ZEefER
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 037a3a2f
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD2_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: ddeb07a87366077535455148a79fabc160dbe5d455a3b69a70246316d1acf384
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "10000"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 2
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      - vout
      type: object
    ListTransactionsByBlockHashRIBSD2_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: nW3Hxfx9a9ef1MCHm6veWBbw1Nh2ZEefER
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 1442eec4888ec035fd27a82f227e09f548bec812 OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a9141442eec4888ec035fd27a82f227e09f548bec81288ac
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 2
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHashRIBSD2_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSD2_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "10000"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHashRIBSE_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "21000"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: WEI
          type: string
      required:
      - amount
      - unit
      type: object
    ListTransactionsByBlockHashRIBSBSC_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "20000000000"
          type: string
        unit:
          description: Defines the specific unit of the fee.
          example: BNB
          type: string
      required:
      - amount
      - unit
      type: object
    ListTransactionsByBlockHashRIBSZ_vJoinSplit_inner:
      properties:
        anchor:
          description: "Defines a Merkle tree root of a note commitment tree which\
            \ uniquely identifies a note commitment tree state given the assumed security\
            \ properties of the Merkle tree’s\r\nhash function."
          example: d32ddbaf0d9dc8c10783c01fd9ba5bd0bc2e5efe3d1665d7d6771eb4393736b3
          type: string
        cipherTexts:
          items:
            description: Represents the cipher texts.
            example: 988a182a3e561e0cca18e38e3273b3c538c3e6f79077867eca4305e48cbc5e6d3ff680de602e44fb8869f1a8747d9e3775f2418d33c41233e3612d6ecf277346b85bcd0c1fbdf4c4c0da107bf84e02c82588bf02f4a6c23ed36f70a436f69a6fe6cc38634d69e34e3d3942ff06a7921153689b4b50e3799f0ce3d8a35d165beaecc0c91018e9a8c618ff7036fd14b95641229e42974054c70d1e080c909c382297c5698b9af9b9291d6851c718d3e771e6376bd6dd52f4624ad024b4d85426e32fcf531019eeea547fda3ecca87aceaa80982e8fe22db152c01635d24fe4f59d1979610cad898c169d88559bcd8847f82b2ac5ab2f8623eed55b0273982297a52e9cbb4523d6411a0d40f59faf0ff9f23783790027d5f5153d421d897c11b9da48e7218b7ce64c653283ecaffab78006b771aec20e05761d768f9347f96c566d47014eff083268622e81ce6c17e1e66227ee795cd3a7efb77c3b5b4a896d75111a2a846be94c0fcdaab69ca2101a499c817590c4d1ea8b39145f0168210af4ac86cc6018e95c0699a6f1275c2934cbe1cf84bbeee12ed77b54fe4c2f6b1c0187e7ab31750e03cf72467e9bf7c8a89bb8f4160b5d56def4cb24f595303bcdf065bf2ec7161c8165a6be7252b7cd8c3aa9bf9baf78690f19c1d4fc1d39e558bd4f4fdb3e56fb1b2e287cf67b0e0cf8df5c28c7bb94393cb837c180d380814a63e7db94e4e9652933e67f28f93dd92ee45be8f824cd9469dd0a872e130d4c1621a56d2a33ffb51c04b4151f0a471472a977d771b0eb13bf9fde44804ef755b97e1cae1e8d807f5eb692d7ffc20d8e451ce9ccd75b1a270836db80
            type: string
          type: array
        commitments:
          items:
            description: Represents the commitments.
            example: 2f7f341d6af9a75b317d0753d2fc0514baf38bb602cd66dc7d221aa371e6062c
            type: string
          type: array
        macs:
          items:
            description: Represents the macs.
            example: 52f677a49eb36bcce6b30f94bee481d73c4fdd61963bda54b68f3a90ca007b59
            type: string
          type: array
        nullifiers:
          items:
            description: Represents a sequence of nullifiers of the input notes.
            example: 30e41a9a6605933a75ec42439ab65eb347025002f6486e5549abb82438447dbe
            type: string
          type: array
        oneTimePubKey:
          description: Defines the one time public key.
          example: 0a2e7ba03903480af852cb47d8ce76eb6546aef69bdb35b28b8ae815012d4d13
          type: string
        proof:
          description: Defines the proof.
          example: 8dd9c988c9f337bd55c07fa9e2fa405cf4dda2cb915214fc0b5924870eed0f0187a0db001b5d8ea43a537e423d91d0fc868a456fa3e0bf9e99d1b04f43c6983a05a99458a69903add73ccaa4177844df9056d40c5a71ae14a70835cb30ca7d810fa1d48c9180ddec2ca1cecfaa8706ab514d6e8fe2dd228d7dc012d9407517523b774107a6a78dc972b175b94d1681b980e2b9ba7d39f880973787080a12bf14dc3f038333245a60bbcd9cb1fe2baba30ed083535752cc26ea0c57134e0c774e
          type: string
        randomSeed:
          description: Represents a 256-bit seed that must be chosen independently
            at random for each JoinSplit description.
          example: 05eb35ce1cec5f5824f708ee9d95467d2318d24c8d4220040df92d48b1f182e8
          type: string
        vPubNew:
          description: Defines the value that the joinSplit transfer will insert into
            the transparent transaction value pool.
          example: "50.02989199"
          type: string
        vPubOld:
          description: Defines the value that the joinSplit transfer will remove from
            the transparent transaction value pool.
          example: "0"
          type: string
      required:
      - anchor
      - cipherTexts
      - commitments
      - macs
      - nullifiers
      - oneTimePubKey
      - proof
      - randomSeed
      - vPubNew
      - vPubOld
      type: object
    ListTransactionsByBlockHashRIBSZ_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_DUP OP_HASH160 4c275e3800739237500ed7c5ee428b9f05909a2e OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 76a9144c275e3800739237500ed7c5ee428b9f05909a2e88ac
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: pubkeyhash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHashRIBSZ_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: tmGf1r6Bo9HFdssAcFpYPehzcn1QyfurEeH
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 02d3080c4e060000000000002f4e614e
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListTransactionsByBlockHashRIBSZ_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: a2022151256fa5d6d3d282f3c0074456fa247da08bc07df71f8c1d9e76e7d928
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Defines the specific amount.
          example: "0.000144"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - coinbase
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListTransactionsByBlockHashRI_recipients_inner:
      properties:
        address:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: mvuvhgT5DUjpQ2LBWQhujiFGDZiDHGdHa7
          type: string
        amount:
          description: Represents the amount received to this address.
          example: "0.00476076"
          type: string
      required:
      - address
      - amount
      type: object
    ListTransactionsByBlockHashRI_senders_inner:
      properties:
        address:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: n3NFmt8ibu1FnUqxexrVg4psg88Sx2PMsv
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0.00572702"
          type: string
      required:
      - address
      - amount
      type: object
    ListTransactionsByBlockHashRI_fee:
      properties:
        amount:
          description: Represents the fee amount.
          example: "0.00016932"
          type: string
        unit:
          description: Defines the specific unit of the fee.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    ListTransactionsByBlockHashR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHashRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListXRPRippleTransactionsByBlockHashRI_recipients_inner:
      properties:
        address:
          description: Represents the hash of the address that receives the funds.
          example: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
          type: string
        amount:
          description: Defines the amount of the received funds as a string.
          example: "0.0001"
          type: string
      required:
      - address
      - amount
      type: object
    ListXRPRippleTransactionsByBlockHashRI_senders_inner:
      properties:
        address:
          description: Represents the hash of the address that provides the funds.
          example: rPmPErQe4g9725pcNxJpuvKkdqTESTQ6Tu
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0.0001"
          type: string
      required:
      - address
      - amount
      type: object
    ListXRPRippleTransactionsByBlockHashRI_fee:
      properties:
        amount:
          description: Defines the amount of the fee.
          example: "2.0325"
          type: string
        unit:
          description: Defines the unit of the fee.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByBlockHashRI_offer:
      properties:
        amount:
          description: Defines the amount of the offer.
          example: "8.2365"
          type: string
        unit:
          description: Defines the unit of the offer.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByBlockHashRI_receive:
      properties:
        amount:
          description: Defines the received amount.
          example: "6.2354"
          type: string
        unit:
          description: Defines the unit of the received amount.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByBlockHashRI_value:
      properties:
        amount:
          description: Defines the amount of the value.
          example: "22.023"
          type: string
        unit:
          description: Defines the unit of the value.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByBlockHashR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHashRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    CreateCoinsTransactionRequestFromAddressRI_recipients_inner:
      example:
        amount: "0.0023"
        address: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
        addressTag: 3999472835
        classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
      properties:
        address:
          description: Defines the destination address.
          example: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
          type: string
        addressTag:
          description: Defines a specific Tag that is an additional XRP address feature.
            It helps identify a transaction recipient beyond a wallet address. The
            tag that was encoded into the x-Address along with the Source Classic
            Address.
          example: 3999472835
          type: integer
        amount:
          description: Defines the amount sent to the destination address.
          example: "0.0023"
          type: string
        classicAddress:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key. The classic address is shown when the source address\
            \ is an x-Address."
          example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          type: string
      required:
      - address
      - amount
      type: object
    CreateCoinsTransactionRequestFromAddressRI_senders:
      description: "Defines details about the source, i.e. the sender."
      example:
        address: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        address:
          description: Defines the sender's public address.
          example: 0x8798d11a96a2822ae60275f3a0798a2542912a10
          type: string
      required:
      - address
      type: object
    CreateCoinsTransactionRequestFromAddressR_data:
      example:
        item:
          feePriority: standard
          note: yourAdditionalInformationhere
          transactionRequestStatus: created
          recipients:
          - amount: "0.0023"
            address: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
            addressTag: 3999472835
            classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          - amount: "0.0023"
            address: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
            addressTag: 3999472835
            classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          transactionRequestId: 6017dd02a309213863be9e55
          addressTag: 3999472835
          classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          senders:
            address: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        item:
          $ref: '#/components/schemas/CreateCoinsTransactionRequestFromAddressRI'
      required:
      - item
      type: object
    ListZilliqaTransactionsByBlockHashR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHashRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListZilliqaTransactionsByBlockHeightR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListZilliqaTransactionsByBlockHeightRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListXRPRippleTransactionsByBlockHeightRI_recipients_inner:
      properties:
        address:
          description: String representation of the receiver address
          example: rNUY3X3HovAXuTesTbMh8PAX6CM5V2RzMY
          type: string
        amount:
          description: String representation of the amount
          example: "0.0001"
          type: string
      required:
      - address
      - amount
      type: object
    ListXRPRippleTransactionsByBlockHeightRI_senders_inner:
      properties:
        address:
          description: String array representation of the sender address
          example: rPmPErQe4g9725pcNxJpuvKkdqTESTQ6Tu
          type: string
        amount:
          description: String representation of the amount
          example: "0.0001"
          type: string
      required:
      - address
      - amount
      type: object
    ListXRPRippleTransactionsByBlockHeightRI_fee:
      properties:
        amount:
          example: "2.0325"
          type: string
        unit:
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByBlockHeightRI_offer:
      properties:
        amount:
          example: "8.2365"
          type: string
        unit:
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByBlockHeightRI_receive:
      properties:
        amount:
          example: "6.2354"
          type: string
        unit:
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByBlockHeightRI_value:
      properties:
        amount:
          example: "22.023"
          type: string
        unit:
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    ListXRPRippleTransactionsByBlockHeightR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListXRPRippleTransactionsByBlockHeightRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListTransactionsByBlockHeightRIBSB_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 2
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHeightRIBSB_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: true
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSB_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.000144"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHeightRIBSD_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_DUP OP_HASH160 1fd680935cd42f95702493d44c8de964a42656b5 OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHeightRIBSD_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: Represents the coinbase hex.
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          type: string
        txid:
          description: Represents the reference transaction identifier.
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: yP8A3cbdxRtLRduy5mXDsBnJtMzHWs6ZXr
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 2
          type: integer
      required:
      - addresses
      - coinbase
      - scriptSig
      - sequence
      - txinwitness
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSD_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 2
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHeightRIBSD_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSD_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: Represents the sent/received amount.
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHeightRIBSD2_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: DPzdWPsKaGvRn3AH7WjBpnNVHhAPELDY4o
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 03dcf4150c0b2f454233322f414431322f04da88506004565cc01f0c3130fc5f4e050000000000000a626368706f6f6c172f20626974636f696e636173682e6e6574776f726b202f
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967295"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: nY1qa6325pH5zfGjA3NW16xPYG8XYQjtbS
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 2
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      - value
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSL_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: "e052170e6a8ca2a891158c2f3a268521ae16bd1927d3cb941d54ff194986263dda8582fbc3d1a38155e366d7bea9e58501e84daf6d84f0ccb99380af36477c4f[ALL|FORKID]\
            \ 027774729b977f98bb119fb1cf6fb17cc6b2d78af7acbeb6ad2b49187e8894efba"
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 41e052170e6a8ca2a891158c2f3a268521ae16bd1927d3cb941d54ff194986263dda8582fbc3d1a38155e366d7bea9e58501e84daf6d84f0ccb99380af36477c4f4121027774729b977f98bb119fb1cf6fb17cc6b2d78af7acbeb6ad2b49187e8894efba
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHeightRIBSL_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 03dcf4150c0b2f454233322f414431322f04da88506004565cc01f0c3130fc5f4e050000000000000a626368706f6f6c172f20626974636f696e636173682e6e6574776f726b202f
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSL_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: "4294967294"
          type: string
        txid:
          description: Represents the reference transaction identifier.
          example: 1db56e1e8dfab84f6f0e33f8ddb160c9b16286471a3b486d79ea85bcf4d076b2
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 304402204e88dfe79e58b640908812c496ea74d2941c23e70ee3d93ebd469dbd136afe0c02203d7631427c0b5cb96e8a8b23b6c8c0c8112ecb5fb020ee2a7a70841564ed679b01
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 2
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSL_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 3LAAY4fp88RsNHkVW5DZJgqUdbMD5rVoqZ
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ca94af32587de4e5006685ffffc65a818ccd3fbc OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ca94af32587de4e5006685ffffc65a818ccd3fbc87
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 2
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHeightRIBSL_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSL_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.03505975"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHeightRIBSEC_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "17000000000"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: WEI
          type: string
      required:
      - amount
      - unit
      type: object
    ListTransactionsByBlockHeightRIBSBSC_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "17000000000"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: BNB
          type: string
      required:
      - amount
      - unit
      type: object
    ListTransactionsByBlockHeightRIBSZ_vJoinSplit_inner:
      properties:
        anchor:
          description: "Defines a Merkle tree root of a note commitment tree which\
            \ uniquely identifies a note commitment tree state given the assumed security\
            \ properties of the Merkle tree’s\r\nhash function."
          example: d32ddbaf0d9dc8c10783c01fd9ba5bd0bc2e5efe3d1665d7d6771eb4393736b4
          type: string
        cipherTexts:
          items:
            description: Represents the cipher texts.
            example: 988a182a3e561e0cca18e38e3273b3c538c3e6f79077867eca4305e48cbc5e6d3ff680de602e44fb8869f1a8747d9e3775f2418d33c41233e3612d6ecf277346b85bcd0c1fbdf4c4c0da107bf84e02c82588bf02f4a6c23ed36f70a436f69a6fe6cc38634d69e34e3d3942ff06a7921153689b4b50e3799f0ce3d8a35d165beaecc0c91018e9a8c618ff7036fd14b95641229e42974054c70d1e080c909c382297c5698b9af9b9291d6851c718d3e771e6376bd6dd52f4624ad024b4d85426e32fcf531019eeea547fda3ecca87aceaa80982e8fe22db152c01635d24fe4f59d1979610cad898c169d88559bcd8847f82b2ac5ab2f8623eed55b0273982297a52e9cbb4523d6411a0d40f59faf0ff9f23783790027d5f5153d421d897c11b9da48e7218b7ce64c653283ecaffab78006b771aec20e05761d768f9347f96c566d47014eff083268622e81ce6c17e1e66227ee795cd3a7efb77c3b5b4a896d75111a2a846be94c0fcdaab69ca2101a499c817590c4d1ea8b39145f0168210af4ac86cc6018e95c0699a6f1275c2934cbe1cf84bbeee12ed77b54fe4c2f6b1c0187e7ab31750e03cf72467e9bf7c8a89bb8f4160b5d56def4cb24f595303bcdf065bf2ec7161c8165a6be7252b7cd8c3aa9bf9baf78690f19c1d4fc1d39e558bd4f4fdb3e56fb1b2e287cf67b0e0cf8df5c28c7bb94393cb837c180d380814a63e7db94e4e9652933e67f28f93dd92ee45be8f824cd9469dd0a872e130d4c1621a56d2a33ffb51c04b4151f0a471472a977d771b0eb13bf9fde44804ef755b97e1cae1e8d807f5eb692d7ffc20d8e451ce9ccd75b1a270836db80
            type: string
          type: array
        commitments:
          items:
            description: Represents the commitments.
            example: 2f7f341d6af9a75b317d0753d2fc0514baf38bb602cd66dc7d221aa371e6062c
            type: string
          type: array
        macs:
          items:
            description: Represents the macs.
            example: 52f677a49eb36bcce6b30f94bee481d73c4fdd61963bda54b68f3a90ca007b59
            type: string
          type: array
        nullifiers:
          items:
            description: Represents a sequence of nullifiers of the input notes.
            example: 30e41a9a6605933a75ec42439ab65eb347025002f6486e5549abb82438447dbe
            type: string
          type: array
        oneTimePubKey:
          description: Defines the one time public key.
          example: 0a2e7ba03903480af852cb47d8ce76eb6546aef69bdb35b28b8ae815012d4d13
          type: string
        proof:
          description: Defines the proof.
          example: 8dd9c988c9f337bd55c07fa9e2fa405cf4dda2cb915214fc0b5924870eed0f0187a0db001b5d8ea43a537e423d91d0fc868a456fa3e0bf9e99d1b04f43c6983a05a99458a69903add73ccaa4177844df9056d40c5a71ae14a70835cb30ca7d810fa1d48c9180ddec2ca1cecfaa8706ab514d6e8fe2dd228d7dc012d9407517523b774107a6a78dc972b175b94d1681b980e2b9ba7d39f880973787080a12bf14dc3f038333245a60bbcd9cb1fe2baba30ed083535752cc26ea0c57134e0c774e
          type: string
        randomSeed:
          description: Represents a 256-bit seed that must be chosen independently
            at random for each JoinSplit description.
          type: string
        vPubNew:
          description: Defines the value that the joinSplit transfer will insert into
            the transparent transaction value pool.
          example: "50.02989193"
          type: string
        vPubOld:
          description: Defines the value that the joinSplit transfer will remove from
            the transparent transaction value pool.
          example: "0"
          type: string
      required:
      - anchor
      - cipherTexts
      - commitments
      - macs
      - nullifiers
      - oneTimePubKey
      - proof
      - randomSeed
      - vPubNew
      - vPubOld
      type: object
    ListTransactionsByBlockHeightRIBSZ_vShieldedOutput_inner:
      properties:
        cmu:
          description: Represents the 𝑢-coordinate of the note commitment for the
            output note.
          example: 4eb188a762d4fd4358ae70b2dac1b6a596ad653be92471792bf4b157850a1011
          type: string
        cv:
          description: Defines a value commitment to the value of the input note.
          example: 547a9cef4937304f97acacfcd9827b5aa1b2e5b1ae32e360fae828b955564a0e
          type: string
        encCipherText:
          description: Represents a ciphertext component for the encrypted output
            note.
          example: a6c0084214eef0058f4b51c1e25b4c05ac282fec0edc5938c4283aa2a6d7c426d7a3c927d11596f81780b18c0eee90848702eb7fa512f7a6386e52d9bc17d5bc0e20bc24608ece560a314570aaf4c095bc988a9a0f8ef72ed91d0eee7d927eb37428c62af28c6a5c9379ac48aef3cdfb9b83eed77edde50acab7615f8fecdb1f24500fab6b8a72440e6fadbf0e6ad0ff8989df4d27bb2bc56c3a99c6da2e82c68a319857902842cf15aec180b6ea0ff3ebedf1cfd02b434ac715bc4afb17f67286d5708864a7aabb461461f080bbcf0315c38d782be6d0aae7ac3beb6574babf12c9182574d6c6e900888b5c4da40952c403b7d4ebe96e051893e388bcb7026d839e1d49ddbb132706fbadae1ef272d7e8dbf297dfbe7867651cfd843e52239d8270c1b6d46f2589643a5a325018f2d0b82b53955a5a3c5c3cecf8f0829594777887028456bd708c7c4ad88e588609c1b33d9060d8cf0015bfc18676ebc7022956ab6d4c6aae24550422e702733da234e2ce6f5adbafc4e2d97ae9846febddeacfaefda7f186b7e8182f4692c34bff4bd31eeeab15c5b5f7a41c93acae05a4f3c378fbe6cf33ab3628f4c5b8e04b9368ec69ea1c7c816c803d9ef7bbafe232f43959c7b49dd7c3328dc028040f440fd3cb2e08449db77c191288f120c065870d800ebdca234e6c2ba1fa6d44d04f4fed2e41b1c65d273b0ce58287274e8dc71a2a174244f026971bb9c698e7f7964eec615515910c627a201b52c3c2c504623ac45f5606d0400120bd5b6e1f431775fe92fb2c9eb5546c9dc12693ee9b679e49fce2cf71
          type: string
        ephemeralKey:
          description: Represents an encoding of an ephemeral Jubjub public key.
          example: 04c59e908296aeac1160ba8def90916988bf8389564343e6fb3b9e52c27fba0a
          type: string
        outCipherText:
          description: "Represents a ciphertext component that allows the holder of\
            \ the outgoing cipher key to recover the diversified transmission key\
            \ pkd and ephemeral private key esk, hence the entire note plaintext."
          example: b3f02b333a61b69e63dfeaf1ad430534985cd6958abe92664abe85449ca68b5c145f536e9a636a881aab5e314b4f550b2b8f5600dc1ed636f643b11e00bb6c469bf5205f16197372dcf5e4b0871e42f4
          type: string
        proof:
          description: Represents the proof
          example: 8dd9c988c9f337bd55c07fa9e2fa405cf4dda2cb915214fc0b5924870eed0f0187a0db001b5d8ea43a537e423d91d0fc868a456fa3e0bf9e99d1b04f43c6983a05a99458a69903add73ccaa4177844df9056d40c5a71ae14a70835cb30ca7d810fa1d48c9180ddec2ca1cecfaa8706ab514d6e8fe2dd228d7dc012d9407517523b774107a6a78dc972b175b94d1681b980e2b9ba7d39f880973787080a12bf14dc3f038333245a60bbcd9cb1fe2baba30ed083535752cc26ea0c57134e0c774e
          type: string
      required:
      - cmu
      - cv
      - encCipherText
      - ephemeralKey
      - outCipherText
      - proof
      type: object
    ListTransactionsByBlockHeightRIBSZ_vin_inner_scriptSig:
      description: Object representation of the script
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: OP_HASH160 ef775f1f997f122a062fff1a2d7443abd1f9c642 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: a914ef775f1f997f122a062fff1a2d7443abd1f9c64287
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: pubkeyhash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHeightRIBSZ_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: t2UNzUUx8mWBCRYPRezvA363EYXyEpHokyi
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 02d3080c4e060000000000002f4e614e
          type: string
        scriptSig:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSZ_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: a2022151256fa5d6d3d282f3c0074456fa247da08bc07df71f8c1d9e76e7d928
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Defines the specific amount.
          example: "0.002324"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - coinbase
      - scriptSig
      - sequence
      - txid
      - txinwitness
      - value
      - vout
      type: object
    ListTransactionsByBlockHeightRIBSZ_vout_inner_scriptPubKey:
      description: Object representation of the script
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: t2UNzUUx8mWBCRYPRezvA363EYXyEpHokyi
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ef775f1f997f122a062fff1a2d7443abd1f9c642 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ef775f1f997f122a062fff1a2d7443abd1f9c64287
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: pubkeyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    ListTransactionsByBlockHeightRIBSZ_vout_inner:
      properties:
        isSpent:
          description: Defines whether the transaction output has been spent or not.
          example: true
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/ListTransactionsByBlockHeightRIBSZ_vout_inner_scriptPubKey'
        value:
          description: Represents the specific amount.
          example: "0.000144"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    ListTransactionsByBlockHeightRI_fee:
      properties:
        amount:
          description: Defines the amount of the fee.
          example: "0.00016932"
          type: string
        unit:
          description: Defines the specific unit of the fee.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    ListTransactionsByBlockHeightR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListTransactionsByBlockHeightRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountRI_recipients_inner:
      example:
        amount: "0.123"
        address: 0xc065b539490f81b6c297c37b1925c3be2f190732
      properties:
        address:
          description: Defines the destination address.
          example: 0xc065b539490f81b6c297c37b1925c3be2f190732
          type: string
        amount:
          description: Defines the amount sent to the destination address.
          example: "0.123"
          type: string
      required:
      - address
      - amount
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountRI_senders:
      description: Details about the sender
      example:
        address: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        address:
          description: Defines the sender's public address.
          example: 0x8798d11a96a2822ae60275f3a0798a2542912a10
          type: string
      required:
      - address
      type: object
    CreateCoinsTransactionFromAddressForWholeAmountR_data:
      example:
        item:
          feePriority: standard
          note: yourExampleStringHere
          transactionRequestStatus: created
          recipients:
          - amount: "0.123"
            address: 0xc065b539490f81b6c297c37b1925c3be2f190732
          - amount: "0.123"
            address: 0xc065b539490f81b6c297c37b1925c3be2f190732
          transactionRequestId: 6017dd02a309213863be9e55
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          senders:
            address: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        item:
          $ref: '#/components/schemas/CreateCoinsTransactionFromAddressForWholeAmountRI'
      required:
      - item
      type: object
    GetBlockDetailsByBlockHeightR_data:
      example:
        item:
          previousBlockHash: 00000000b8c2337ed1221d1861105ad227dfff93b0a1798e78fb6edff58925f5
          nextBlockHash: 000000000000000e2f2e4fab8eaaa6bb39632a79a825d34169d451a86959fe04
          blockchainSpecific: null
          hash: 000000000000000cf507214c4f86a5048449230bc5c5dbbed59aa74421553f26
          transactionsCount: 12
          height: 1939743
          timestamp: 1615378134
      properties:
        item:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightRI'
      required:
      - item
      type: object
    GetXRPRippleBlockDetailsByBlockHeightRI_totalCoins:
      description: Represents the total Coins of the block as a string.
      example:
        amount: "22.0012"
        unit: Drops
      properties:
        amount:
          description: Represents the total amount of all Coins of the block as a
            string.
          example: "22.0012"
          type: string
        unit:
          description: Represents the unit of total Coins of the block as a string.
          example: Drops
          type: string
      required:
      - amount
      - unit
      type: object
    GetXRPRippleBlockDetailsByBlockHeightRI_totalFees:
      description: Defines the total fees included in the specific block.
      example:
        amount: "0.004487"
        unit: XRP
      properties:
        amount:
          description: Defines the amount of all fees included in the specific block.
          example: "0.004487"
          type: string
        unit:
          description: Defines the unit of all fees included in the specific block.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    GetXRPRippleBlockDetailsByBlockHeightR_data:
      example:
        item:
          blockHash: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
          totalFees:
            amount: "0.004487"
            unit: XRP
          previousBlockHash: dcf6ade36e1d5f30b3e52605692ff47123f290f4c8915cbf5a6b7c3541f2354e
          nextBlockHash: 738cf04b9e32826395a8445aa44ec6bbb83f2cc296d94201625f3a3d6ff85a5a
          blockHeight: 15886156
          totalCoins:
            amount: "22.0012"
            unit: Drops
          transactionsCount: 0
          timestamp: 1616069434
      properties:
        item:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHeightRI'
      required:
      - item
      type: object
    ListDepositAddressesRI_confirmedBalance:
      properties:
        amount:
          description: Defines the total balance of the address that is confirmed.
            It doesn't include unconfirmed transactions.
          example: "0.0101"
          type: string
        unit:
          description: Represents the unit of the confirmed balance.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    ListDepositAddressesRI_fungibleTokens_inner:
      properties:
        amount:
          description: Defines the amount of the fungible tokens.
          example: "0.254"
          type: string
        identifier:
          description: Defines the specific token identifier. For Bitcoin-based transactions
            it should be the propertyId and for Ethereum-based transactions - the
            contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        name:
          description: Defines the token's name as a string.
          example: Tether USD
          type: string
        symbol:
          description: Defines the symbol of the fungible tokens.
          example: USDT
          type: string
        tokenDecimals:
          description: "Defines the decimals of the token, i.e. the number of digits\
            \ that come after the decimal coma of the token."
          example: 6
          format: int64
          type: integer
        type:
          description: Defines the specific token type.
          example: ERC-20
          type: string
      required:
      - amount
      - identifier
      - name
      - symbol
      - tokenDecimals
      - type
      type: object
    ListDepositAddressesRI_nonFungibleTokens_inner:
      properties:
        identifier:
          description: Defines the specific token identifier. For Bitcoin-based transactions
            it should be the propertyId and for Ethereum-based transactions - the
            contract.
          example: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          type: string
        name:
          description: Defines the token's name as a string.
          example: Tether
          type: string
        symbol:
          description: Defines the symbol of the non-fungible tokens.
          example: ENS
          type: string
        tokenId:
          description: Represents tokens' unique identifier.
          example: 0x000000000000000000000000000000000000000000000000000000000000195b
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-721
          type: string
      required:
      - identifier
      - name
      - symbol
      - tokenId
      - type
      type: object
    ListDepositAddressesR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListDepositAddressesRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    GetZilliqaBlockDetailsByBlockHeightR_data:
      example:
        item:
          difficulty: "41.375"
          blockHash: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
            Block 1244297 Block 1244299
          gasLimit: 550000
          gasUsed: 0
          previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
            Block 1244296 Block 1244298
          nextBlockHash: 0x07939adbc3f5a6ba75968012acfe0fee9a351dca72c814e499fee554281b56b6
            Block 1244298 Block 1244300
          dsDifficulty: "48.625"
          dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          transactionsCount: 1
          dsBlock: 12443
          microBlocks:
          - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
            \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
            \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
            \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
          - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
            \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
            \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
            \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
          timestamp: 1616069434
      properties:
        item:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHeightRI'
      required:
      - item
      type: object
    GetBlockDetailsByBlockHashR_data:
      example:
        item:
          previousBlockHash: 00000000844434fd86a630ba8e29503d5396a2b6c4003d69bf0a08d96169d4cd
          nextBlockHash: 0000000000000003b08ca90b701da447fb3e7c5c6b43acd33a5e4062fe98dea5
          blockchainSpecific: null
          hash: 0000000006b3f483bec16b8a85c632bdd30a14a202c83a9148002c9ee441dd0c
          transactionsCount: 145
          height: 1941208
          timestamp: 1615378134
      properties:
        item:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashRI'
      required:
      - item
      type: object
    GetXRPRippleBlockDetailsByBlockHashRI_totalCoins:
      description: Defines the total coins.
      example:
        amount: "22.0012"
        unit: Drops
      properties:
        amount:
          description: Defines the amount of the total coins.
          example: "22.0012"
          type: string
        unit:
          description: Defines the unit of the total coins.
          example: Drops
          type: string
      required:
      - amount
      - unit
      type: object
    GetXRPRippleBlockDetailsByBlockHashR_data:
      example:
        item:
          blockHash: 1ab0614d2a438da8b23086cbceef7d443edbd295d9c7619fc8a19c7618bc22c9
          totalFees:
            amount: "0.004487"
            unit: XRP
          previousBlockHash: dcf6ade36e1d5f30b3e52605692ff47123f290f4c8915cbf5a6b7c3541f2354e
          nextBlockHash: 738cf04b9e32826395a8445aa44ec6bbb83f2cc296d94201625f3a3d6ff85a5a
          blockHeight: 15886156
          totalCoins:
            amount: "22.0012"
            unit: Drops
          transactionsCount: 0
          timestamp: 1616069434
      properties:
        item:
          $ref: '#/components/schemas/GetXRPRippleBlockDetailsByBlockHashRI'
      required:
      - item
      type: object
    GetZilliqaBlockDetailsByBlockHashR_data:
      example:
        item:
          difficulty: "41.375"
          gasLimit: 550000
          gasUsed: 0
          previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
            Block 1244296 Block 1244298
          nextBlockHash: 0x07939adbc3f5a6ba75968012acfe0fee9a351dca72c814e499fee554281b56b6
            Block 1244298 Block 1244300
          blockHeight: 1244298
          dsDifficulty: "48.625"
          dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          transactionsCount: 0
          dsBlock: 12443
          microBlocks:
          - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
            \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
            \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
            \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
          - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
            \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
            \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
            \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
          timestamp: 1616069434
      properties:
        item:
          $ref: '#/components/schemas/GetZilliqaBlockDetailsByBlockHashRI'
      required:
      - item
      type: object
    ListSupportedTokensR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListSupportedTokensRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    GetWalletAssetDetailsRI_confirmedBalance:
      description: Specifies the confirmed balance.
      example:
        amount: "0.0101"
        unit: BTC
      properties:
        amount:
          description: Specifies the amount of the confirmed balance.
          example: "0.0101"
          type: string
        unit:
          description: Specifies the unit of the amount of the confirmed balance.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    GetWalletAssetDetailsRI_fungibleTokens_inner:
      example:
        identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
        symbol: USDT
        confirmedAmount: "0.254"
        type: ERC-20
      properties:
        confirmedAmount:
          description: Defines the amount of the fungible tokens.
          example: "0.254"
          type: string
        identifier:
          description: Defines the specific token identifier. For Bitcoin-based transactions
            it should be the propertyId and for Ethereum-based transactions - the
            contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        symbol:
          description: Defines the symbol of the fungible tokens.
          example: USDT
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-20
          type: string
      required:
      - confirmedAmount
      - identifier
      - symbol
      - type
      type: object
    GetWalletAssetDetailsRI_nonFungibleTokens_inner:
      example:
        identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
        symbol: ENS
        tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
        type: ERC-721
      properties:
        identifier:
          description: Defines the specific token identifier. For Bitcoin-based transactions
            it should be the propertyId and for Ethereum-based transactions - the
            contract.
          example: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          type: string
        symbol:
          description: Defines the symbol of the non-fungible tokens.
          example: ENS
          type: string
        tokenId:
          description: Represents tokens' unique identifier.
          example: 0x000000000000000000000000000000000000000000000000000000000000195b
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-721
          type: string
      required:
      - identifier
      - symbol
      - tokenId
      - type
      type: object
    GetWalletAssetDetailsRI_recievedConfirmedAmount:
      description: Specifies the confirmed amount that has been received.
      example:
        amount: "0.0345"
        unit: BTC
      properties:
        amount:
          description: Specifies the confirmed amount that has been received.
          example: "0.0345"
          type: string
        unit:
          description: Specifies the unit of the confirmed amount that has been received.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    GetWalletAssetDetailsRI_sentConfirmedAmount:
      description: Specifies the confirmed amount that has been sent.
      example:
        amount: "0.0134"
        unit: BTC
      properties:
        amount:
          description: Specifies the confirmed amount that has been sent.
          example: "0.0134"
          type: string
        unit:
          description: Specifies the unit of the confirmed amount that has been sent.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    GetWalletAssetDetailsR_data:
      example:
        item:
          confirmedBalance:
            amount: "0.0101"
            unit: BTC
          fungibleTokens:
          - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
            symbol: USDT
            confirmedAmount: "0.254"
            type: ERC-20
          - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
            symbol: USDT
            confirmedAmount: "0.254"
            type: ERC-20
          recievedConfirmedAmount:
            amount: "0.0345"
            unit: BTC
          name: main vault
          sentConfirmedAmount:
            amount: "0.0134"
            unit: BTC
          nonFungibleTokens:
          - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
            symbol: ENS
            tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
            type: ERC-721
          - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
            symbol: ENS
            tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
            type: ERC-721
          depositAddressesCount: 5
      properties:
        item:
          $ref: '#/components/schemas/GetWalletAssetDetailsRI'
      required:
      - item
      type: object
    CreateFungibleTokensTransactionRequestFromAddressRI_recipients_inner:
      properties:
        address:
          description: Defines the destination address.
          example: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
          type: string
        amount:
          description: Defines the amount sent to the destination address.
          example: "1"
          type: string
      required:
      - address
      - amount
      type: object
    CreateFungibleTokensTransactionRequestFromAddressRI_senders:
      description: "Defines details about the source, i.e. the sender."
      example: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        address:
          description: Defines the sender's public address.
          example: 0x8798d11a96a2822ae60275f3a0798a2542912a10
          type: string
      required:
      - address
      type: object
    CreateFungibleTokensTransactionRequestFromAddressR_data:
      example:
        item:
          feePriority: fast
          note: yourAdditionalInformationhere
          recipients: 0x1316bea88fb7cd4ccc4a57e2f9f4f43d1a86ee59
          transactionRequestId: 6038d09050653d1f0e40584c
          tokenTypeSpecificData: null
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
          senders: 0x8798d11a96a2822ae60275f3a0798a2542912a10
      properties:
        item:
          $ref: '#/components/schemas/CreateFungibleTokensTransactionRequestFromAddressRI'
      required:
      - item
      type: object
    ListAllAssetsFromAllWalletsRI_coins_inner:
      example:
        confirmedBalance: "0.00009179"
        unit: BTC
        totalSpent: "2.1"
        blockchain: bitcoin
        totalReceived: "5.6"
        network: testnet
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        confirmedBalance:
          description: Defines the total balance of the address that is confirmed.
            It doesn't include unconfirmed transactions.
          example: "0.00009179"
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          example: testnet
          type: string
        totalReceived:
          description: "Defines the total amount of all coins received to the address,\
            \ based on confirmed transactions."
          example: "5.6"
          type: string
        totalSpent:
          description: "Defines the total amount of all spent by this address coins,\
            \ based on confirmed transactions."
          example: "2.1"
          type: string
        unit:
          description: Represents the unit of the confirmed balance.
          example: BTC
          type: string
      required:
      - blockchain
      - confirmedBalance
      - network
      - totalReceived
      - totalSpent
      - unit
      type: object
    ListAllAssetsFromAllWalletsRI_fungibleTokens_inner:
      example:
        identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
        symbol: USDT
        amount: "0.254"
        blockchain: ethereum
        type: ERC-20
        network: mainnet
      properties:
        amount:
          description: Defines the amount of the fungible tokens.
          example: "0.254"
          type: string
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        identifier:
          description: Defines the specific token identifier. For Bitcoin-based transactions
            it should be the propertyId and for Ethereum-based transactions - the
            contract.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          example: mainnet
          type: string
        symbol:
          description: Defines the symbol of the fungible tokens.
          example: USDT
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-20
          type: string
      required:
      - amount
      - blockchain
      - identifier
      - network
      - symbol
      - type
      type: object
    ListAllAssetsFromAllWalletsRI_nonFungibleTokens_inner:
      example:
        identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
        symbol: ENS
        tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
        blockchain: ethereum
        type: ERC-721
        network: ropsten
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        identifier:
          description: Defines the specific token identifier. For Bitcoin-based transactions
            it should be the propertyId and for Ethereum-based transactions - the
            contract.
          example: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          example: ropsten
          type: string
        symbol:
          description: Defines the symbol of the non-fungible tokens.
          example: ENS
          type: string
        tokenId:
          description: Represents tokens' unique identifier.
          example: 0x000000000000000000000000000000000000000000000000000000000000195b
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-721
          type: string
      required:
      - blockchain
      - identifier
      - network
      - symbol
      - tokenId
      - type
      type: object
    ListAllAssetsFromAllWalletsR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListAllAssetsFromAllWalletsRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListAllAssetsByWalletIDR_data:
      example:
        item:
          fungibleTokens:
          - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
            symbol: USDT
            amount: "0.254"
            blockchain: ethereum
            type: ERC-20
            network: mainnet
          - identifier: 0xdac17f958d2ee523a2206206994597c13d831ec7
            symbol: USDT
            amount: "0.254"
            blockchain: ethereum
            type: ERC-20
            network: mainnet
          walletId: 60c9d9921c38030006675ff6
          coins:
          - confirmedBalance: "0.00009179"
            unit: BTC
            totalSpent: "2.1"
            blockchain: bitcoin
            totalReceived: "5.6"
            network: testnet
          - confirmedBalance: "0.00009179"
            unit: BTC
            totalSpent: "2.1"
            blockchain: bitcoin
            totalReceived: "5.6"
            network: testnet
          walletName: exampleName
          nonFungibleTokens:
          - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
            symbol: ENS
            tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
            blockchain: ethereum
            type: ERC-721
            network: ropsten
          - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
            symbol: ENS
            tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
            blockchain: ethereum
            type: ERC-721
            network: ropsten
      properties:
        item:
          $ref: '#/components/schemas/ListAllAssetsByWalletIDRI'
      required:
      - item
      type: object
    GetLastMinedBlockR_data:
      example:
        item:
          previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
          blockchainSpecific: null
          hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
          transactionsCount: 2755
          height: 673852
          timestamp: 1610365615
      properties:
        item:
          $ref: '#/components/schemas/GetLastMinedBlockRI'
      required:
      - item
      type: object
    GetLatestMinedXRPRippleBlockRI_totalCoins:
      example:
        amount: "22.0012"
        unit: Drops
      properties:
        amount:
          description: Defines the amount of all coins.
          example: "22.0012"
          type: string
        unit:
          description: Defines the unit of the amount of all coins.
          example: Drops
          type: string
      required:
      - amount
      - unit
      type: object
    GetLatestMinedXRPRippleBlockRI_totalFees:
      example:
        amount: "0.00001"
        unit: XRP
      properties:
        amount:
          description: Defines the amount of all fees.
          example: "0.00001"
          type: string
        unit:
          description: Defines the unit of the amount of all fees.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    GetLatestMinedXRPRippleBlockR_data:
      example:
        item:
          blockHash: f9b304b7933ef298142fdd58ad2dec414a5267dcbbd8a4fe9fc2c0a5f9dde050
          totalFees:
            amount: "0.00001"
            unit: XRP
          previousBlockHash: de9f9e5b68a1322a16f0d1217cf31765e9101764e6e2f3c7aa058b8c641da37a
          blockHeight: 15975748
          totalCoins:
            amount: "22.0012"
            unit: Drops
          transactionsCount: 1
          timestamp: 1616430182
      properties:
        item:
          $ref: '#/components/schemas/GetLatestMinedXRPRippleBlockRI'
      required:
      - item
      type: object
    GetLatestMinedZilliqaBlockR_data:
      example:
        item:
          difficulty: "41.375"
          blockHash: 0xf679d0b5387f0b0b3c3c1f368305512b23860888ba4415063d464a09b8bb6205
            Block 1244297 Block 1244299
          gasLimit: 550000
          gasUsed: 10028
          previousBlockHash: 0xe347b6c09e54a582478f6ccc9f85a386616ad1367e9965e5409fab790e538d16
            Block 1244296 Block 1244298
          blockHeight: 1244298
          dsDifficulty: "48.625"
          dsLeader: zil1k9hne0uu86wuj2n7qdqwhrm9uma0xn7ut42tsj
          transactionsCount: 1
          dsBlock: 12443
          microBlocks:
          - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
            \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
            \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
            \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
          - "[0] 5b7c58118c4873f1f83bf0d1f93c58d608f1fb2692efbbe93483d8d03d7d6119\
            \ [1] 7504a82d1fcf28b03103b4e23bdf3b5045ac63d8c1b8af4bf533907f3b20ee9c\
            \ [2] 6ea4f053dc37e0938dc3e729aa2f197dff3c13dcaa9558857a0d90260210950e\
            \ [3] 31de23ba0a8a57e80a1d3a4a24ab378bd4a814ea0f0354f73ff9a6a46a785297"
          timestamp: 1616069434
      properties:
        item:
          $ref: '#/components/schemas/GetLatestMinedZilliqaBlockRI'
      required:
      - item
      type: object
    GetTransactionRequestDetailsRI_recipients_inner:
      example:
        amount: "0.001"
        unit: BTC
        address: mr3zKBc7skyDHcVHWww4JzzziPnrdYTscR
        addressTag: 3999472835
        classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
      properties:
        address:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: mr3zKBc7skyDHcVHWww4JzzziPnrdYTscR
          type: string
        addressTag:
          description: Defines a specific Tag that is an additional XRP address feature.
            It helps identify a transaction recipient beyond a wallet address. The
            tag that was encoded into the x-Address along with the Classic Address.
          example: 3999472835
          type: integer
        amount:
          description: Represents the amount received to this address.
          example: "0.001"
          type: string
        classicAddress:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key. A classic address is shown when the destination\
            \ address is an x-Address."
          example: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          type: string
        unit:
          description: Defines the unit of the amount.
          example: BTC
          type: string
      required:
      - address
      - amount
      - unit
      type: object
    GetTransactionRequestDetailsR_data:
      example:
        item:
          transactionType: coin
          feePriority: standard
          walletId: 60c9d9921c38030006675ff6
          totalTransactionAmount: "0.001"
          unit: BTC
          transactionRequestStatus: created
          blockchain: bitcoin
          recipients:
          - amount: "0.001"
            unit: BTC
            address: mr3zKBc7skyDHcVHWww4JzzziPnrdYTscR
            addressTag: 3999472835
            classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          - amount: "0.001"
            unit: BTC
            address: mr3zKBc7skyDHcVHWww4JzzziPnrdYTscR
            addressTag: 3999472835
            classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
          additionalDetails: yourExampleStringHere
          transactionId: 61922aa68f192800067a8404
          network: testnet
      properties:
        item:
          $ref: '#/components/schemas/GetTransactionRequestDetailsRI'
      required:
      - item
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI_recipient_inner:
      example:
        amount: "0.0006"
        unit: TRX
        address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
        classicAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
      properties:
        address:
          description: Defines the destination address.
          example: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          type: string
        amount:
          description: Defines the amount sent to the destination address.
          example: "0.0006"
          type: string
        classicAddress:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key. The classic address is shown when the source address\
            \ is an x-Address."
          example: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          type: string
        unit:
          description: Defines the unit of the recieved amount for the address.
          example: TRX
          type: string
      required:
      - address
      - amount
      - unit
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI_sender:
      description: "Defines details about the source, i.e. the sender."
      example:
        address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
      properties:
        address:
          description: Defines the sender's public address.
          example: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          type: string
      required:
      - address
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI_totalAmount:
      example:
        unit: TRX
        value: "0.0006"
      properties:
        unit:
          description: Defines the unit of the total amount transacted.
          example: TRX
          type: string
        value:
          description: Total amount of the transaction
          example: "0.0006"
          type: string
      type: object
    CreateSingleTransactionRequestFromAddressWithoutFeePriorityR_data:
      example:
        item:
          note: yourAdditionalInformationhere
          totalAmount:
            unit: TRX
            value: "0.0006"
          transactionRequestStatus: created
          sender:
            address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          transactionRequestId: 62da9f003d20a65c737af83f
          recipient:
          - amount: "0.0006"
            unit: TRX
            address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
            classicAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          - amount: "0.0006"
            unit: TRX
            address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
            classicAddress: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          classicAddress: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
      properties:
        item:
          $ref: '#/components/schemas/CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI'
      required:
      - item
      type: object
    ListLatestMinedBlocksRIBSX_totalCoins:
      properties:
        amount:
          description: Defines the amount of all coins.
          example: "22.0012"
          type: string
        unit:
          description: Defines the unit of the amount of all coins.
          example: ETH
          type: string
      type: object
    ListLatestMinedBlocksRIBSX_totalFees:
      properties:
        amount:
          description: Defines the amount of all fees.
          example: "0.00001"
          type: string
        unit:
          description: Defines the unit of the amount of all fees.
          example: ETH
          type: string
      required:
      - amount
      type: object
    ListLatestMinedBlocksR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListLatestMinedBlocksRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    SyncHDWalletXPubYPubZPubR_data:
      example:
        item:
          extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
      properties:
        item:
          $ref: '#/components/schemas/SyncHDWalletXPubYPubZPubRI'
      required:
      - item
      type: object
    ListWalletTransactionsRI_fee:
      properties:
        amount:
          description: Defines the fee for the transaction.
          example: "0.00003"
          type: string
        convertedAmount:
          description: Defines the converted amount of the transaction's fee.
          example: "1.50"
          type: string
        exchangeRateUnit:
          description: Defines the exchange rate for the transaction's unit.
          example: USD
          type: string
        symbol:
          description: Defines the unit of the transaction's fee.
          example: ETH
          type: string
      required:
      - amount
      - convertedAmount
      - exchangeRateUnit
      - symbol
      type: object
    ListWalletTransactionsRI_fungibleTokens_inner:
      properties:
        amount:
          description: Defines the amount of the fungible tokens.
          example: "0.254"
          type: string
        convertedAmount:
          description: Defines the tokens' converted amount value.
          example: "0.0034"
          type: string
        exchangeRateUnit:
          description: Represents token's exchange rate unit.
          example: USD
          type: string
        name:
          description: Defines the token's name as a string.
          example: Tether USD
          type: string
        recipient:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one
          example: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
          type: string
        sender:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
          type: string
        symbol:
          description: Defines the symbol of the fungible tokens.
          example: BTC
          type: string
        tokenDecimals:
          description: "Defines the decimals of the token, i.e. the number of digits\
            \ that come after the decimal coma of the token."
          example: 6
          type: integer
        type:
          description: Defines the specific token type.
          example: ERC-20
          type: string
      required:
      - amount
      - convertedAmount
      - exchangeRateUnit
      - name
      - recipient
      - sender
      - symbol
      - tokenDecimals
      - type
      type: object
    ListWalletTransactionsRI_internalTransactions_inner:
      properties:
        amount:
          description: Defines the specific amount of the transaction.
          example: "0.001"
          type: string
        convertedAmount:
          description: Represents the converted amount.
          example: "4.30365936483792"
          type: string
        exchangeRateUnit:
          description: Defines the base asset symbol to get a rate for.
          example: USD
          type: string
        operationId:
          description: Represents the unique internal transaction ID in regards to
            the parent transaction (type trace address).
          example: call_0
          type: string
        recipient:
          description: Represents the recipient address with the respective amount.
          example: 0x07344b7649c5ff096b0317957d9a208931d04d5e
          type: string
        sender:
          description: Represents the sender address with the respective amount.
          example: 0x4b8ec9e58a8b08f3803f84fb52d0a50e84444592
          type: string
        symbol:
          description: Represents the unique unit symbol.
          example: ETH
          type: string
      required:
      - amount
      - convertedAmount
      - exchangeRateUnit
      - operationId
      - recipient
      - sender
      - symbol
      type: object
    ListWalletTransactionsRI_nonFungibleTokens_inner:
      properties:
        convertedAmount:
          description: Defines the tokens' converted amount value.
          example: "0.034"
          type: string
        exchangeRateUnit:
          description: Represents token's exchange rate unit.
          example: USD
          type: string
        name:
          description: Defines the token's name as a string.
          example: Axie Infinity
          type: string
        recipient:
          description: Defines the address to which the recipient receives the transferred
            tokens.
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
          type: string
        sender:
          description: Defines the address from which the sender transfers tokens.
          example: 0x65b895f400dae5541d70cbbec07527210158f6e2
          type: string
        symbol:
          description: Defines the symbol of the non-fungible tokens.
          example: AXS
          type: string
        tokenId:
          description: Represents tokens' unique identifier.
          example: "13383"
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-721
          type: string
      required:
      - convertedAmount
      - exchangeRateUnit
      - name
      - recipient
      - sender
      - symbol
      - tokenId
      - type
      type: object
    ListWalletTransactionsRI_recipients_inner:
      properties:
        address:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          type: string
        amount:
          description: Represents the amount received to this address.
          example: "0.00427167"
          type: string
        label:
          description: Defines a plain text string as a label for the recipient.
          example: yourStringHere
          type: string
      required:
      - address
      - amount
      type: object
    ListWalletTransactionsRI_senders_inner:
      properties:
        address:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 0x6f61e3c2fbb8c8be698bd0907ba6c04b62800fe5
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0.0001"
          type: string
        label:
          description: Defines a plain text string as a label for the sender.
          example: yourStringHere
          type: string
      required:
      - address
      - amount
      type: object
    ListWalletTransactionsRI_value:
      properties:
        amount:
          description: Defines the transaction amount.
          example: "0.001"
          type: string
        convertedAmount:
          description: Defines the converted amount of the transaction as a string.
          example: "150"
          type: string
        exchangeRateUnit:
          description: Defines the exchange rate's unit.
          example: USD
          type: string
        symbol:
          description: Defines the unit of the transaction's amount.
          example: ETH
          type: string
      required:
      - amount
      - convertedAmount
      - exchangeRateUnit
      - symbol
      type: object
    ListWalletTransactionsR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListWalletTransactionsRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRI_recipient_inner:
      example:
        amount: "0.2568"
        unit: JST
        address: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
      properties:
        address:
          description: Defines the destination address.
          example: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          type: string
        amount:
          description: Defines the amount sent to the destination address.
          example: "0.2568"
          type: string
        unit:
          description: Represents the unit of the tokens amount recieved.
          example: JST
          type: string
      required:
      - address
      - amount
      - unit
      type: object
    CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityR_data:
      example:
        item:
          note: yourAdditionalInformationhere
          sender:
            address: TX8VXpdEoNNrKeEuNTfbEXfa9eZivcyUwD
          transactionRequestId: 62daacdbc8a7282e9ea01c35
          tokenTypeSpecificData: null
          recipient:
          - amount: "0.2568"
            unit: JST
            address: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          - amount: "0.2568"
            unit: JST
            address: TMVeigwYyuXJVHER4oA2yQzsFFSN2JfXkt
          callbackSecretKey: yourSecretString
          callbackUrl: https://example.com
      properties:
        item:
          $ref: '#/components/schemas/CreateFungibleTokenTransactionRequestFromAddressWithoutFeePriorityRI'
      required:
      - item
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig:
      description: Object representation of the script
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 00148b3ed2c15710b61a43cb354a7e637dc6bbd448ce
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 1600148b3ed2c15710b61a43cb354a7e637dc6bbd448ce
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSB_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: 2NDxh6gwyx33zCxocteVXo9znPny1GrUuHF
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: 48bd74754b71181d4d2092fc24477f89fa7dfea8059b140a179bac2267048832
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100ee88c1b067d5756831343059a3632106b218ef158fe062725c69a2a21b1504af02207c95262daaefdf9c46f55e53cc42fa152bd874a5ea54dd155a4f2624782be1af01
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00001681"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 0
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSB_vout_inner_scriptPubKey:
      description: Object representation of the script
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 fcae5de86db6ca7121f44a0a01fd2d3b85137e07 OP_EQUA
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914fcae5de86db6ca7121f44a0a01fd2d3b85137e0787
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: witness_v0_keyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSB_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSB_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.00004069"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSE_gasPrice:
      properties:
        amount:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "10354241269"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: WEI
          type: string
      required:
      - amount
      - unit
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSL_vin_inner_scriptSig:
      description: Object representation of the script
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: "3045022100f031442894c0fd60c195fbdb29c0bf72f143a815689b8840cd31ec31cc6a7721022028f74f0869e4666761c9ba1035cc714528a17de873dfc7b3a541d29f3942a2d8[ALL]\
            \ 028c533b6c0ce0ad714a8af36b64d207c4f61cd6d5af210362447c92b4105a4fab"
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 483045022100f031442894c0fd60c195fbdb29c0bf72f143a815689b8840cd31ec31cc6a7721022028f74f0869e4666761c9ba1035cc714528a17de873dfc7b3a541d29f3942a2d80121028c533b6c0ce0ad714a8af36b64d207c4f61cd6d5af210362447c92b4105a4fab
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSL_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: LZ891CJWn54CpE6yJ4T3mzP8Xxwrg9gDpH
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399d620046183f4502cfabe6d6d54cff85e53693837dc613bc4cc4b78986c2193a4e2902e3da62aa311957f50844000000000000000042f4c502f08220000b0e1110000
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSL_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967294
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: 1db56e1e8dfab84f6f0e33f8ddb160c9b16286471a3b486d79ea85bcf4d076b2
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 304402204e88dfe79e58b640908812c496ea74d2941c23e70ee3d93ebd469dbd136afe0c02203d7631427c0b5cb96e8a8b23b6c8c0c8112ecb5fb020ee2a7a70841564ed679b01
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - coinbase
      - scriptSig
      - sequence
      - txid
      - value
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSBC_vin_inner_scriptSig:
      description: Object representation of the script
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 0014daaf6d5cb86befe42df851a4d1df052e663754c1
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 160014daaf6d5cb86befe42df851a4d1df052e663754c1
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSBC_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: qq0adqyntn2zl9tsyjfagnyda9j2gfjkk574lxyrxd
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSBC_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: caee978cae255bbe303ac86152679e46113a8b12925aa3afaa312d89d11ccbf8
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00873472"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSBC_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: qqux7gek8sg6r9qjkrdmrvz6t4xet3ax3gztt2drzk
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 386f23363c11a19412b0dbb1b05a5d4d95c7a68a OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: pubkeyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - type
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSBC_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSBC_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.000122"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSD_vin_inner_scriptSig:
      description: Object representation of the script
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 030483ff6271580681f4f7828c01df56d5aebfe982cbaa2922594be9eb6cf40206
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 21030483ff6271580681f4f7828c01df56d5aebfe982cbaa2922594be9eb6cf40206ac
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: scripthash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSD_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: DPzdWPsKaGvRn3AH7WjBpnNVHhAPELDY4o
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 03dcf4150c0b2f454233322f414431322f04da88506004565cc01f0c3130fc5f4e050000000000000a626368706f6f6c172f20626974636f696e636173682e6e6574776f726b202f
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRIBSD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: qpq395ljesqakppupe3chd3n3jp60wd23ue00g66xx
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - value
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSD2_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: 7W7gfYstwDR6a2ZCxEidAuvshyomqJ8yXT
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 03dcf4150c0b2f454233322f414431322f04da88506004565cc01f0c3130fc5f4e050000000000000a626368706f6f6c172f20626974636f696e636173682e6e6574776f726b202f
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD2_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: f60cf447159b08e9857cbc96688ba80beff23c6f032f6545044ab40a771b15f5
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.2354"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSZ_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: t2UNzUUx8mWBCRYPRezvA363EYXyEpHokyi
            type: string
          type: array
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSZ_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: 4b66461bf88b61e1e4326356534c135129defb504c7acb2fd6c92697d79eb250
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Defines the specific amount.
          example: "0.000144"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txid
      - value
      - vout
      type: object
    GetWalletTransactionDetailsByTransactionIDRIBSP_gasPrice:
      properties:
        amount:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "20000000000"
          type: string
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: MATIC
          type: string
      required:
      - amount
      - unit
      type: object
    GetWalletTransactionDetailsByTransactionIDRI_fee:
      example:
        amount: "0.00003812"
        unit: BTC
      properties:
        amount:
          description: "When isConfirmed is True - Defines the amount of the transaction\
            \ fee\r\nWhen isConfirmed is False - For ETH-based blockchains this attribute\
            \ represents the max fee value."
          example: "0.00003812"
          type: string
        unit:
          description: Represents the unit of the fee.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    GetWalletTransactionDetailsByTransactionIDR_data:
      example:
        item:
          recipients: recipients
          fee:
            amount: "0.00003812"
            unit: BTC
          minedInBlockHeight: 1250283
          index: 21
          isConfirmed: true
          minedInBlockHash: 0000000000503b5200a935cfa9e7740783b5f2292aaad3bf273554abfb3d91ce
          blockchainSpecific: null
          senders: senders
          transactionHash: c58148bb37b9be020338e427784580b58e0b497ce32d7eddf812de6a1a0d3133
          transactionId: 3e081861494aed897e589cdeab5d9e628d985e571ed1c19896d1aa698cce9d80
          timestamp: 1636972451
      properties:
        item:
          $ref: '#/components/schemas/GetWalletTransactionDetailsByTransactionIDRI'
      required:
      - item
      type: object
    ListInternalTransactionDetailsByTransactionHashR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListInternalTransactionDetailsByTransactionHashRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    SyncNewHDWalletXPubYPubZPubR_data:
      example:
        item:
          extendedPublicKey: upub5Ei6bRNneqozk6smK7dvtXHC5PjUyEL4ynCfMKvjznLcXi9DQaikETzQjHvJC43XexMvQs64jxB1njMjCHpRZ4xQWAmv3ge9cVtjfsHmbvQ
      properties:
        item:
          $ref: '#/components/schemas/SyncNewHDWalletXPubYPubZPubRI'
      required:
      - item
      type: object
    GetInternalTransactionByTransactionHashAndOperationIdR_data:
      example:
        item:
          blockHash: 0x61262bd96d7cf50884e8ce61a5cf978d748417d28d3d76aea889346f050a2fbb
          amount: "0.000479716904346335"
          blockHeight: 12561779
          sender: 0x7a250d5630b4cf539739df2c5dacb4c659f2488d
          recipient: 0xef7cfdee2f0ef5ae5e0c60098c8838fa7822754e
          operationType: CALL
          parentHash: 0x92bb77e16444e0417c8b50dfab68e89c7ad27d4140a766c3bbd4d0ac195f12fc
          timestamp: 1622726449
      properties:
        item:
          $ref: '#/components/schemas/GetInternalTransactionByTransactionHashAndOperationIdRI'
      required:
      - item
      type: object
    ListInternalTransactionsByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListInternalTransactionsByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    DeriveAndSyncNewReceivingAddressesR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/DeriveAndSyncNewReceivingAddressesRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    DeriveAndSyncNewChangeAddressesR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/DeriveAndSyncNewChangeAddressesRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    GetFeeRecommendationsR_data:
      example:
        item:
          standard: "0.000015"
          unit: BTC
          fast: "0.000025"
          slow: "0.000010"
      properties:
        item:
          $ref: '#/components/schemas/GetFeeRecommendationsRI'
      required:
      - item
      type: object
    ListSyncedAddressesR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListSyncedAddressesRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    GetNextAvailableNonceR_data:
      example:
        item:
          nextAvailableNonce: 16
      properties:
        item:
          $ref: '#/components/schemas/GetNextAvailableNonceRI'
      required:
      - item
      type: object
    ListUnspentTransactionOutputsByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListUnspentTransactionOutputsByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListHDWalletXPubYPubZPubTransactionsRI_recipients_inner:
      properties:
        address:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
          type: string
        amount:
          description: Represents the amount received to this address.
          example: "0.000144"
          type: string
        isMember:
          description: "Defines whether an address is a child address derived from\
            \ the HD wallet (xPub, yPub, zPub) as boolean."
          example: false
          type: boolean
      required:
      - address
      - amount
      - isMember
      type: object
    ListHDWalletXPubYPubZPubTransactionsRI_senders_inner:
      properties:
        address:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
          type: string
        amount:
          description: Represents the amount sent by this address.
          example: "0.00873472"
          type: string
        isMember:
          description: "Defines whether an address is a child address derived from\
            \ the HD wallet (xPub, yPub, zPub) as boolean."
          example: true
          type: boolean
      required:
      - address
      - amount
      - isMember
      type: object
    ListHDWalletXPubYPubZPubTransactionsRI_fee:
      properties:
        amount:
          description: Defines the amount of the transaction fee.
          example: "0.00016932"
          type: string
      required:
      - amount
      type: object
    ListHDWalletXPubYPubZPubTransactionsR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListHDWalletXPubYPubZPubTransactionsRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListTokensTransfersByTransactionHashRI_transactionFee:
      properties:
        amount:
          description: Represents the total fee of a transaction which includes token
            transfers.
          example: "0.0000051873"
          type: string
        unit:
          description: Represents the unit of the fee.
          example: ETH
          type: string
      required:
      - amount
      - unit
      type: object
    ListTokensTransfersByTransactionHashR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListTokensTransfersByTransactionHashRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListConfirmedTransactionsByAddressAndTimeRangeR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListConfirmedTransactionsByAddressAndTimeRangeRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListConfirmedTokensTransfersByAddressAndTimeRangeR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressAndTimeRangeRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListInternalTransactionsByAddressAndTimeRangeR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListInternalTransactionsByAddressAndTimeRangeRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListConfirmedTokensTransfersByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListConfirmedTokensTransfersByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListHDWalletXPubYPubZPubUTXOsR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListHDWalletXPubYPubZPubUTXOsRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    GetRawTransactionDataR_data:
      example:
        item:
          transactionHex: 01000000000101f8cb1cd1892d31aaafa35a92128b3a11469e675261c83a30be5b25ae8c97eeca0100000017160014daaf6d5cb86befe42df851a4d1df052e663754c1ffffffff02403800000000000017a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15879cd90c000000000017a91475eb14fa1dc2c72637df3c58bc22d925ca0753af8702483045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901210287e995526aa6ccb96141bb598fc7f73323279e026c55039d15f0cfbda5dea84100000000
      properties:
        item:
          $ref: '#/components/schemas/GetRawTransactionDataRI'
      required:
      - item
      type: object
    ListUnconfirmedTokensTransfersByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListUnconfirmedTokensTransfersByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    ListTokensByAddressR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListTokensByAddressRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    EstimateTransactionSmartFeeR_data:
      example:
        item:
          unit: BTC
          confirmationTarget: 2
          feeRate: "0.00001"
      properties:
        item:
          $ref: '#/components/schemas/EstimateTransactionSmartFeeRI'
      required:
      - item
      type: object
    PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRI_vin_inner:
      example:
        outputIndex: 1
        address: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
        derivationIndex: 1
        change: 0
        sighash: 90cfeef03b2755586b8e81668d8009b16b34d48abf2968729892279222e8d893
        script: 00143bb907c4cd6457aeda7b84c2d7cb79e79a8b9632
        transactionId: ff59ac56616ece7498e62c7f9f957cfdd50f6f2a74402058154e3022e7617bf2
        satoshis: 10000
      properties:
        address:
          description: Representation of the address
          example: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
          type: string
        change:
          description: Representation of the change value
          example: 0
          format: int64
          type: integer
        derivationIndex:
          description: Representation of the derivation index of the xpub address.
          example: 1
          format: int64
          type: integer
        outputIndex:
          description: Representation of the output index
          example: 1
          type: integer
        satoshis:
          description: Representation of the satoshis value
          example: 10000
          format: int64
          type: integer
        script:
          description: Representation of the script string
          example: 00143bb907c4cd6457aeda7b84c2d7cb79e79a8b9632
          type: string
        sighash:
          description: Representation of the hash that should be signed.
          example: 90cfeef03b2755586b8e81668d8009b16b34d48abf2968729892279222e8d893
          type: string
        transactionId:
          description: Represents the reference transaction identifier.
          example: ff59ac56616ece7498e62c7f9f957cfdd50f6f2a74402058154e3022e7617bf2
          type: string
      required:
      - address
      - outputIndex
      - satoshis
      - script
      - sighash
      - transactionId
      type: object
    PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubRI_vout_inner:
      example:
        address: tb1qvx3fynjuctk475vgecetfck005fxh699mflshv
        script: 0014a3f1019940ce572681c43fd836db97036a85bc8f
        satoshis: 3094
      properties:
        address:
          description: Representation of the address
          example: tb1qvx3fynjuctk475vgecetfck005fxh699mflshv
          type: string
        satoshis:
          description: Representation of the satoshis value
          example: 3094
          format: int64
          type: integer
        script:
          description: Representation of the script
          example: 0014a3f1019940ce572681c43fd836db97036a85bc8f
          type: string
      required:
      - address
      - satoshis
      - script
      type: object
    PrepareAUTXO_BasedTransactionFromHDWalletXPubYPubZPubR_data:
      example:
        item:
          feePerByte: "0.00000014"
          locktime: 1781965
          size: 243
          fee: "0.0000279"
          replaceable: false
          vin:
          - outputIndex: 1
            address: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
            derivationIndex: 1
            change: 0
            sighash: 90cfeef03b2755586b8e81668d8009b16b34d48abf2968729892279222e8d893
            script: 00143bb907c4cd6457aeda7b84c2d7cb79e79a8b9632
            transactionId: ff59ac56616ece7498e62c7f9f957cfdd50f6f2a74402058154e3022e7617bf2
            satoshis: 10000
          - outputIndex: 1
            address: tb1q8wus03xdv3t6aknmsnpd0jmeu7dgh93j34pj5a
            derivationIndex: 1
            change: 0
            sighash: 90cfeef03b2755586b8e81668d8009b16b34d48abf2968729892279222e8d893
            script: 00143bb907c4cd6457aeda7b84c2d7cb79e79a8b9632
            transactionId: ff59ac56616ece7498e62c7f9f957cfdd50f6f2a74402058154e3022e7617bf2
            satoshis: 10000
          additionalData: yourAdditionalDataHere
          vout:
          - address: tb1qvx3fynjuctk475vgecetfck005fxh699mflshv
            script: 0014a3f1019940ce572681c43fd836db97036a85bc8f
            satoshis: 3094
          - address: tb1qvx3fynjuctk475vgecetfck005fxh699mflshv
            script: 0014a3f1019940ce572681c43fd836db97036a85bc8f
            satoshis: 3094
      properties:
        item:
          $ref: '#/components/schemas/PrepareAUTXO-BasedTransactionFromHDWalletXPubYPubZPubRI'
      required:
      - item
      type: object
    GetTokenDetailsByContractAddressR_data:
      example:
        item:
          tokenSymbol: BAND
          tokenDecimals: "18"
          totalSupply: "1000000"
          tokenName: Band Protocol
          tokenType: ERC-20
      properties:
        item:
          $ref: '#/components/schemas/GetTokenDetailsByContractAddressRI'
      required:
      - item
      type: object
    PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubRI_fee:
      description: When isConfirmed is True - Defines the amount of the transaction
        fee When isConfirmed is False - For ETH-based blockchains this attribute represents
        the max fee value.
      example:
        gasLimit: "552020"
        maxPriorityFeePerGas: "2000000000"
        maxFeePerGas: "2000000008"
        gasPrice: "2500000007"
      properties:
        gasLimit:
          description: Represents the amount of gas used by this specific transaction
            alone.
          example: "552020"
          type: string
        gasPrice:
          description: Represents the price offered to the miner to purchase this
            amount of gas.
          example: "2500000007"
          type: string
        maxFeePerGas:
          description: Representation of the max fee per gas value
          example: "2000000008"
          type: string
        maxPriorityFeePerGas:
          description: Rrepresentation of the max priority fee per gas value
          example: "2000000000"
          type: string
      required:
      - gasLimit
      - gasPrice
      - maxFeePerGas
      - maxPriorityFeePerGas
      type: object
    PrepareAnAccount_BasedTransactionFromHDWalletXPubYPubZPubR_data:
      example:
        item:
          transactionType: legacy-transaction
          amount: "30000000000000"
          derivationIndex: 0
          dataHex: 0x0079006f00750072004100640064006900740069006f006e0061006c00440061007400610048006500720065
          sender: 0x03654A9E78771442CAdf8DB37ae60D6a12bAEa9f
          fee:
            gasLimit: "552020"
            maxPriorityFeePerGas: "2000000000"
            maxFeePerGas: "2000000008"
            gasPrice: "2500000007"
          recipient: 0x041c594a0cc194e826bef5411b29c7f27001b7e3
          sigHash: 40738814e379fd2b1923729c87ac80dddc6810a3f8f02fef05452251972ec83a
          nonce: "0"
      properties:
        item:
          $ref: '#/components/schemas/PrepareAnAccount-BasedTransactionFromHDWalletXPubYPubZPubRI'
      required:
      - item
      type: object
    GetHDWalletXPubYPubZPubAssetsRI_fungibleTokens_inner:
      example:
        identifier: 0x101848d5c5bbca18e6b4431eedf6b95e9adf82fa
        symbol: WEENUS
        amount: "0.100000000000000000"
        type: ERC-20
      properties:
        amount:
          description: Defines the amount of the fungible tokens.
          example: "0.100000000000000000"
          type: string
        identifier:
          description: Represents tokens' contract address.
          example: 0x101848d5c5bbca18e6b4431eedf6b95e9adf82fa
          type: string
        symbol:
          description: Defines the symbol of the fungible token.
          example: WEENUS
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-20
          type: string
      required:
      - amount
      - identifier
      - symbol
      - type
      type: object
    GetHDWalletXPubYPubZPubAssetsRI_nonFungibleTokens_inner:
      example:
        identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
        symbol: GA
        tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
        type: ERC-721
      properties:
        identifier:
          description: Represents tokens' contract address.
          example: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
          type: string
        symbol:
          description: Defines the symbol of the non-fungible token.
          example: GA
          type: string
        tokenId:
          description: Represents tokens' unique identifier.
          example: 0x000000000000000000000000000000000000000000000000000000000000195b
          type: string
        type:
          description: Defines the specific token type.
          example: ERC-721
          type: string
      required:
      - identifier
      - symbol
      - tokenId
      - type
      type: object
    GetHDWalletXPubYPubZPubAssetsRI_confirmedBalance:
      example:
        amount: "0.008516447598774679"
        unit: ETH
      properties:
        amount:
          description: Represents the confirmed balance for the specified blockchain
            protocol.
          example: "0.008516447598774679"
          type: string
        unit:
          description: Specifies the unit of the amount of the confirmed balance.
          example: ETH
          type: string
      required:
      - amount
      - unit
      type: object
    GetHDWalletXPubYPubZPubAssetsR_data:
      example:
        item:
          fungibleTokens:
          - identifier: 0x101848d5c5bbca18e6b4431eedf6b95e9adf82fa
            symbol: WEENUS
            amount: "0.100000000000000000"
            type: ERC-20
          - identifier: 0x101848d5c5bbca18e6b4431eedf6b95e9adf82fa
            symbol: WEENUS
            amount: "0.100000000000000000"
            type: ERC-20
          confirmedBalance:
            amount: "0.008516447598774679"
            unit: ETH
          nonFungibleTokens:
          - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
            symbol: GA
            tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
            type: ERC-721
          - identifier: 0x90ca8a3eb2574f937f514749ce619fdcca187d45
            symbol: GA
            tokenId: 0x000000000000000000000000000000000000000000000000000000000000195b
            type: ERC-721
      properties:
        item:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubAssetsRI'
      required:
      - item
      type: object
    GetHDWalletXPubYPubZPubDetailsR_data:
      example:
        item:
          confirmedBalance: "0.0021"
          totalSpent: "0.0001"
          totalReceived: "0.0002"
      properties:
        item:
          $ref: '#/components/schemas/GetHDWalletXPubYPubZPubDetailsRI'
      required:
      - item
      type: object
    DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesRI_addresses_inner:
      example:
        address: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
        index: 1
      properties:
        address:
          description: "Represents the public address, which is a compressed and shortened\
            \ form of a public key."
          example: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
          type: string
        index:
          description: Represents the output index. It refers to the UTXO sequence
            in the transaction outputs (vout).
          example: 1
          format: int64
          type: integer
      required:
      - address
      - index
      type: object
    DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesR_data:
      example:
        item:
          addresses:
          - address: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
            index: 1
          - address: muZxmnQiz8gZgpYmUoTHpD2CFTHWYEjTwB
            index: 1
      properties:
        item:
          $ref: '#/components/schemas/DeriveHDWalletXPubYPubZPubChangeOrReceivingAddressesRI'
      required:
      - item
      type: object
    NewUnconfirmedCoinsTransactionsR_data:
      example:
        item:
          address: mho4jHBcrNCncKt38trJahXakuaBnS7LK5
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
          isActive: true
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/NewUnconfirmedCoinsTransactionsRI'
      required:
      - item
      type: object
    NewUnconfirmedTokensTransactionsR_data:
      example:
        item:
          address: 0x65b895f400dae5541d70cbbec07527210158f6e2
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: ADDRESS_TOKENS_TRANSACTION_UNCONFIRMED
          isActive: true
          referenceId: c748624f-1843-4738-a7de-8258ada0f524
      properties:
        item:
          $ref: '#/components/schemas/NewUnconfirmedTokensTransactionsRI'
      required:
      - item
      type: object
    NewConfirmedCoinsTransactionsR_data:
      example:
        item:
          address: mfo7jkvcoSNxpRBM7XfcseZGQf9PmmU8TZ
          createdTimestamp: 1236238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          receiveCallbackOn: 3
          eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED
          isActive: true
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsRI'
      required:
      - item
      type: object
    NewConfirmedTokensTransactionsR_data:
      example:
        item:
          address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          receiveCallbackOn: 3
          eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
          isActive: true
          referenceId: c748624f-1843-4738-a7de-8258ada0f524
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsRI'
      required:
      - item
      type: object
    NewConfirmedTokensTransactionsAndEachConfirmationR_data:
      example:
        item:
          confirmationsCount: 3
          address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          createdTimestamp: 1236238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          isActive: true
          referenceId: c748624f-1843-4738-a7de-8258ada0f524
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedTokensTransactionsAndEachConfirmationRI'
      required:
      - item
      type: object
    NewConfirmedCoinsTransactionsAndEachConfirmationR_data:
      example:
        item:
          confirmationsCount: 3
          address: 15XyNC88pujwuuur8DCsXBCfEhJJMzHayU
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          isActive: true
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsAndEachConfirmationRI'
      required:
      - item
      type: object
    MinedTransactionR_data:
      example:
        item:
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: TRANSACTION_MINED
          isActive: true
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          transactionId: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
      properties:
        item:
          $ref: '#/components/schemas/MinedTransactionRI'
      required:
      - item
      type: object
    NewBlockR_data:
      example:
        item:
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://yourURL.com
          isActive: true
          referenceId: 4c530a43-5602-41d9-bc69-156a0372f9aa
      properties:
        item:
          $ref: '#/components/schemas/NewBlockRI'
      required:
      - item
      type: object
    BlockHeightReachedR_data:
      example:
        item:
          blockHeightReached: 667900
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          isActive: true
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/BlockHeightReachedRI'
      required:
      - item
      type: object
    ListBlockchainEventsSubscriptionsRI_deactivationReasons_inner:
      example:
        reason: maximum_retry_attempts_reached
        timestamp: 1642102581
      properties:
        reason:
          description: Defines the deactivation reason as a message.
          example: maximum_retry_attempts_reached
          type: string
        timestamp:
          description: Represents the time of the subscription deactivation.
          example: 1642102581
          type: integer
      required:
      - reason
      - timestamp
      type: object
    ListBlockchainEventsSubscriptionsR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListBlockchainEventsSubscriptionsRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    GetBlockchainEventSubscriptionDetailsByReferenceIDR_data:
      example:
        item:
          confirmationsCount: 5
          address: tb1qtm44m6xmuasy4sc7nl7thvuxcerau2dfvkkgsc
          blockchain: bitcoin
          deactivationReasons:
          - reason: maximum_retry_attempts_reached
            timestamp: 1642102581
          - reason: maximum_retry_attempts_reached
            timestamp: 1642102581
          createdTimestamp: 1966238648
          callbackSecretKey: yourSecretKey
          callbackUrl: http://example.com
          eventType: ADDRESS_COINS_TRANSACTION_CONFIRMED
          isActive: false
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          transactionId: 742b4a8d54a663d372fa16abf74093595ae6fc950f2fa2bb7388c7f4d061d7b8
          network: testnet
      properties:
        item:
          $ref: '#/components/schemas/GetBlockchainEventSubscriptionDetailsByReferenceIDRI'
      required:
      - item
      type: object
    ActivateBlockchainEventSubscriptionR_data:
      example:
        item:
          confirmationsCount: 2
          address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          blockchain: bitcoin
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
          isActive: true
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
          transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          network: testnet
      properties:
        item:
          $ref: '#/components/schemas/ActivateBlockchainEventSubscriptionRI'
      required:
      - item
      type: object
    DeleteBlockchainEventSubscriptionR_data:
      example:
        item:
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
          referenceId: 6de9a6ae-1463-458c-81a5-16d68d108012
      properties:
        item:
          $ref: '#/components/schemas/DeleteBlockchainEventSubscriptionRI'
      required:
      - item
      type: object
    GetAddressDetailsFromCallbackRI_confirmedBalance:
      example:
        amount: "12.5"
        unit: unit
      properties:
        amount:
          description: Defines the total balance of the address that is confirmed.
            It doesn't include unconfirmed transactions.
          example: "12.5"
          type: string
        unit:
          description: Represents the unit of the confirmed balance.
          type: string
      required:
      - amount
      - unit
      type: object
    GetAddressDetailsFromCallbackRI_totalReceived:
      example:
        amount: "5.6"
        unit: unit
      properties:
        amount:
          description: "Defines the total amount of all coins received to the address,\
            \ based on confirmed transactions."
          example: "5.6"
          type: string
        unit:
          description: Represents the unit of the total received amount.
          type: string
      required:
      - amount
      - unit
      type: object
    GetAddressDetailsFromCallbackRI_totalSpent:
      example:
        amount: "5.2"
        unit: unit
      properties:
        amount:
          description: "Defines the total amount of all spent by this address coins,\
            \ based on confirmed transactions."
          example: "5.2"
          type: string
        unit:
          description: Represents the unit of the total spent amount.
          type: string
      required:
      - amount
      - unit
      type: object
    GetAddressDetailsFromCallbackR_data:
      example:
        item:
          confirmedBalance:
            amount: "12.5"
            unit: unit
          sequence: 25648975
          incomingTransactionsCount: 7
          totalSpent:
            amount: "5.2"
            unit: unit
          totalReceived:
            amount: "5.6"
            unit: unit
          outgoingTransactionsCount: 5
          transactionsCount: 12
      properties:
        item:
          $ref: '#/components/schemas/GetAddressDetailsFromCallbackRI'
      required:
      - item
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSB_vin_inner_scriptSig:
      description: Specifies the required signatures.
      properties:
        asm:
          description: "The asm strands for assembly, which is the symbolic representation\
            \ of the Bitcoin's Script language op-codes."
          example: 304402202eb16569b2c1f5898c1ab5b23d41e0783ae37943bc6745784fb810f955deafbd02203562872c3a3c7c2423a752f27ba6ae01e66ffc56fe8e463a90498dd5659f8d90
          type: string
        hex:
          description: Represents the hex of the public key of the address.
          example: 47304402202eb16569b2c1f5898c1ab5b23d41e0783ae37943bc6745784fb810f955deafbd02203562872c3a3c7c2423a752f27ba6ae01e66ffc56fe8e463a90498dd5659f8d90012102275753690ab58df3c923001e94d407e30b03e60b1f2461729a1dd4f37ebe2469
          type: string
        type:
          description: Represents the script type of the reference transaction identifier.
          example: pubkeyhash
          type: string
      required:
      - asm
      - hex
      - type
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSB_vin_inner:
      properties:
        addresses:
          items:
            description: 2N5PcdirZUzKF9bWuGdugNuzcQrCbBudxv1
            example: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 0399991d20706f6f6c2e656e6a6f79626f646965732e636f6d20393963336532346234374747a53e994c4a000001
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSB_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: fd572c11a7e3eb39251746a9b2f4f53d5218b7cd0fb6e82ba48e678211d677c9
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.00002"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSB_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 2MzakdGTEp8SMWEHKwKM4HYv6uNCBXtHpkV
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d15 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - reqSigs
      - type
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSB_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSB_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.00014400"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSBC_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: bchtest:qqux7gek8sg6r9qjkrdmrvz6t4xet3ax3gztt2drzk
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 386f23363c11a19412b0dbb1b05a5d4d95c7a68a OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914507a5bd8cac1d9efdf4c0a4bfacb3e0abb4f8d1587
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: pubkeyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - reqSigs
      - type
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSBC_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSBC_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.000122"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSL_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: 3LAAY4fp88RsNHkVW5DZJgqUdbMD5rVoqZ
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ca94af32587de4e5006685ffffc65a818ccd3fbc OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ca94af32587de4e5006685ffffc65a818ccd3fbc87
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - reqSigs
      - type
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSL_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSL_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.03505975"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSD_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: 7W7gfYstwDR6a2ZCxEidAuvshyomqJ8yXT
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 03dcf4150c0b2f454233322f414431322f04da88506004565cc01f0c3130fc5f4e050000000000000a626368706f6f6c172f20626974636f696e636173682e6e6574776f726b202f
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD2_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: String representation of the txid
          example: f60cf447159b08e9857cbc96688ba80beff23c6f032f6545044ab40a771b15f5
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: 3045022100c11ea5740bcd69f0f68a4914279838014d28923134d18e05c5a5486dfd06cc8c02200dadccec3f07bed0d1040f9e5a155efa5fdd40fc91f92342578d26848da4c6b901
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.2354"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSD_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 4112d3f2cc01db043c0e638bb6338c83a7b9aa8f OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a9144112d3f2cc01db043c0e638bb6338c83a7b9aa8f88ac
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - reqSigs
      - type
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSD_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSD_vout_inner_scriptPubKey'
        value:
          description: Represents the sent/received amount.
          example: "0.5896"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSD2_vin_inner:
      properties:
        addresses:
          items:
            description: Represents the addresses which send/receive the amount.
            example: DPzdWPsKaGvRn3AH7WjBpnNVHhAPELDY4o
            type: string
          type: array
        coinbase:
          description: Represents the coinbase hex.
          example: 03dcf4150c0b2f454233322f414431322f04da88506004565cc01f0c3130fc5f4e050000000000000a626368706f6f6c172f20626974636f696e636173682e6e6574776f726b202f
          type: string
        scriptSig:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDRIBSD_vin_inner_scriptSig'
        sequence:
          description: Represents the script sequence number.
          example: 4294967295
          format: int64
          type: integer
        txid:
          description: Represents the reference transaction identifier.
          example: 5fc75c94752b81d8a222f9fc36dbd0a2db1b89e6b9f54d0d4615285f4bc5b32b
          type: string
        txinwitness:
          items:
            description: Represents an array hex-encoded witness data (if there is
              any) as strings.
            example: qpq395ljesqakppupe3chd3n3jp60wd23ue00g66xx
            type: string
          type: array
        value:
          description: Represents the sent/received amount.
          example: "0.0225"
          type: string
        vout:
          description: It refers to the index of the output address of this transaction.
            The index starts from 0.
          example: 1
          type: integer
      required:
      - addresses
      - scriptSig
      - sequence
      - txinwitness
      - value
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSD2_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: yd5KMREs3GLMe6mTJYr3YrH1juwNwrFCfB
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_DUP OP_HASH160 430158211605af1f0fa26d90405199621bdae5cd OP_EQUALVERIFY
            OP_CHECKSIG
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: 76a914430158211605af1f0fa26d90405199621bdae5cd88ac
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: scripthash
          type: string
      required:
      - addresses
      - asm
      - hex
      - reqSigs
      - type
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSD2_vout_inner:
      properties:
        isSpent:
          description: Defines whether the output is spent or not.
          example: false
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSD2_vout_inner_scriptPubKey'
        value:
          description: String representation of the amount
          example: "11.25"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSZ_vout_inner_scriptPubKey:
      description: Represents the script public key.
      properties:
        addresses:
          items:
            description: Represents the addresses which send the amount.
            example: t2UNzUUx8mWBCRYPRezvA363EYXyEpHokyi
            type: string
          type: array
        asm:
          description: Represents the assembly of the script public key of the address.
          example: OP_HASH160 ef775f1f997f122a062fff1a2d7443abd1f9c642 OP_EQUAL
          type: string
        hex:
          description: Represents the hex of the script public key of the address.
          example: a914ef775f1f997f122a062fff1a2d7443abd1f9c64287
          type: string
        reqSigs:
          description: Represents the required signatures.
          example: 1
          type: integer
        type:
          description: Represents the script type.
          example: pubkeyhash
          type: string
      required:
      - addresses
      - asm
      - hex
      - reqSigs
      - type
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSZ_vout_inner:
      properties:
        isSpent:
          description: Defines whether the transaction output has been spent or not.
          example: true
          type: boolean
        scriptPubKey:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRIBSZ_vout_inner_scriptPubKey'
        value:
          description: Represents the specific amount.
          example: "0.000144"
          type: string
      required:
      - isSpent
      - scriptPubKey
      - value
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSZ2_gasPrice:
      properties:
        amount:
          description: Defines the price of the gas.
          example: 2994782927
          format: int64
          type: integer
        unit:
          description: "Defines the unit of the gas price amount, e.g. BTC, ETH, XRP."
          example: ZIL
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBSX_value:
      properties:
        amount:
          description: Defines the amount of the value.
          example: "0.000001"
          type: string
        unit:
          description: Defines the unit of the value.
          example: XRP
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBST_bandwidthUsed:
      properties:
        amount:
          description: Represents the bandwidth used for the transaction.
          type: string
        unit:
          description: Defines the bandwidthUsed unit.
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRIBST_energyUsed:
      properties:
        amount:
          description: Representats the used energy for the  transaction.
          type: string
        unit:
          description: Defines the energyUsed unit.
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRI_recipients_inner:
      example:
        amount: "0.00001600"
        address: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
      properties:
        address:
          description: The address which receives this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one recipient.
          example: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
          type: string
        amount:
          description: Represents the amount received to this address.
          example: "0.00001600"
          type: string
      required:
      - address
      - amount
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRI_senders_inner:
      example:
        amount: "0.00002000"
        address: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
      properties:
        address:
          description: Represents the address which sends this transaction. In UTXO-based
            protocols like Bitcoin there could be several senders while in account-based
            protocols like Ethereum there is always only one sender.
          example: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
          type: string
        amount:
          description: Represents the total amount sent by this address including
            the fee.
          example: "0.00002000"
          type: string
      required:
      - address
      - amount
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackRI_fee:
      example:
        amount: "0.00000300"
        unit: BTC
      properties:
        amount:
          description: "When isConfirmed is True - Defines the amount of the transaction\
            \ fee\r\nWhen isConfirmed is False - For ETH-based blockchains this attribute\
            \ represents the max fee value."
          example: "0.00000300"
          type: string
        unit:
          description: Defines the unit of the fee.
          example: BTC
          type: string
      required:
      - amount
      - unit
      type: object
    GetTransactionDetailsByTransactionIDFromCallbackR_data:
      example:
        item:
          recipients:
          - amount: "0.00001600"
            address: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
          - amount: "0.00001600"
            address: 2NGHH9qxCADY5eTNFUKobi1xiMWoW6FYSCd
          fee:
            amount: "0.00000300"
            unit: BTC
          minedInBlockHeight: 2105197
          index: 44
          minedInBlockHash: 00000000cc8c79e1a80d14873ee7e319f8d2525354be26ace50796444a1e0764
          isConfirmed: true
          blockchainSpecific: null
          senders:
          - amount: "0.00002000"
            address: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
          - amount: "0.00002000"
            address: mtFYoSowT3i649wnBDYjCjewenh8AuofQb
          transactionHash: 8888f6c8168ff69aaf6438ab185c690e8c76c63e5f9c472c1c86f08406ea74f2
          timestamp: 1637751304
      properties:
        item:
          $ref: '#/components/schemas/GetTransactionDetailsByTransactionIDFromCallbackRI'
      required:
      - item
      type: object
    GetBlockDetailsByBlockHashFromCallbackR_data:
      example:
        item:
          totalDifficulty: totalDifficulty
          previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
          extraData: 0x7070796520e4b883e5bda9e7a59ee4bb99e9b1bc080c
          blockchainSpecific: null
          nonce: "16"
          difficulty: "21448277761059.71"
          gasLimit: "552020"
          gasUsed: "24673"
          uncles:
          - uncles
          - uncles
          sha3Uncles: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
          size: 1408113
          hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
          transactionsCount: 2755
          minedInSeconds: 17
          height: 673852
          timestamp: 1610365615
      properties:
        item:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHashFromCallbackRI'
      required:
      - item
      type: object
    GetBlockDetailsByBlockHeightFromCallbackR_data:
      example:
        item:
          previousBlockHash: 00000000000000000008953625613e60b56194ea31f07aad43c7505fbddce77f
          blockchainSpecific: null
          hash: 00000000000000000002ad6f9c74faf503bb055c54e0d0746ef34f888f95890f
          transactionsCount: 2755
          height: 673852
          timestamp: 1610365615
      properties:
        item:
          $ref: '#/components/schemas/GetBlockDetailsByBlockHeightFromCallbackRI'
      required:
      - item
      type: object
    NewConfirmedInternalTransactionsR_data:
      example:
        item:
          address: 0xbcc817f057950b0df41206c5d7125e6225cae18e
          createdTimestamp: 1236238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          receiveCallbackOn: 3
          eventType: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED
          isActive: true
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsRI'
      required:
      - item
      type: object
    NewConfirmedInternalTransactionsAndEachConfirmationR_data:
      example:
        item:
          confirmationsCount: 3
          address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          isActive: true
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsAndEachConfirmationRI'
      required:
      - item
      type: object
    NewConfirmedCoinsTransactionsForSpecificAmountR_data:
      example:
        item:
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: CONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          isActive: true
          amountHigherThan: 2
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedCoinsTransactionsForSpecificAmountRI'
      required:
      - item
      type: object
    NewConfirmedTokenTransactionsForSpecificAmountR_data:
      example:
        item:
          createdTimestamp: 1611238648
          contractAddress: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: CONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          isActive: true
          amountHigherThan: 2
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedTokenTransactionsForSpecificAmountRI'
      required:
      - item
      type: object
    NewConfirmedInternalTransactionsForSpecificAmountR_data:
      example:
        item:
          createdTimestamp: 1611238648
          callbackSecretKey: yourSecretKey
          callbackUrl: https://example.com
          eventType: CONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          isActive: true
          amountHigherThan: 2
          referenceId: bc243c86-0902-4386-b30d-e6b30fa1f2aa
      properties:
        item:
          $ref: '#/components/schemas/NewConfirmedInternalTransactionsForSpecificAmountRI'
      required:
      - item
      type: object
    CreateAutomaticCoinsForwardingR_data:
      example:
        item:
          confirmationsCount: 3
          feePriority: standard
          createdTimestamp: 1611238648
          minimumTransferAmount: "0.0002"
          callbackUrl: https://example.com
          fromAddress: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
          toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
          referenceId: 6017c964973cdcf4d4f69e29
      properties:
        item:
          $ref: '#/components/schemas/CreateAutomaticCoinsForwardingRI'
      required:
      - item
      type: object
    ListCoinsForwardingAutomationsR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListCoinsForwardingAutomationsRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    DeleteAutomaticCoinsForwardingR_data:
      example:
        item:
          confirmationsCount: 3
          feePriority: standard
          createdTimestamp: 1611238648
          minimumTransferAmount: "0.00002"
          callbackUrl: https://example.com
          fromAddress: mzAsK3csTnozLnYVdca4gaoH1btBZBC6QB
          toAddress: mzYijhgmzZrmuB7wBDazRKirnChKyow4M3
          referenceId: 601c1f23ec4b80f51245e617
      properties:
        item:
          $ref: '#/components/schemas/DeleteAutomaticCoinsForwardingRI'
      required:
      - item
      type: object
    CreateAutomaticTokensForwardingR_data:
      example:
        item:
          confirmationsCount: 2
          feePriority: standard
          tokenData: null
          createdTimestamp: 1611238648
          feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
          minimumTransferAmount: "0.5"
          callbackUrl: https://example.com
          fromAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
          toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
          referenceId: 6017dd02a309213863be9e55
      properties:
        item:
          $ref: '#/components/schemas/CreateAutomaticTokensForwardingRI'
      required:
      - item
      type: object
    AddTokensToExistingFromAddressR_data:
      example:
        item:
          confirmationsCount: 3
          feePriority: standard
          tokenData: null
          createdTimestamp: 1611238648
          feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
          minimumTransferAmount: "0.0001"
          callbackUrl: https://example.com
          fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
          toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
          referenceId: 6017dd02a309213863be9e55
      properties:
        item:
          $ref: '#/components/schemas/AddTokensToExistingFromAddressRI'
      required:
      - item
      type: object
    ListTokensForwardingAutomationsR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListTokensForwardingAutomationsRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    GetFeeAddressDetailsRI_balance:
      description: Specifies the balance of the fee address.
      example:
        amount: "0.01"
        unit: ETH
      properties:
        amount:
          description: Represents the amount of the units in fee address.
          example: "0.01"
          type: string
        unit:
          description: "Represents the unit of the fee spent for the forwarded tokens,\
            \ e.g. BTC."
          example: ETH
          type: string
      required:
      - amount
      - unit
      type: object
    GetFeeAddressDetailsR_data:
      example:
        item:
          address: 0xe2b5f5e885a268e4b6faae53f99a663f3bb3e036
          balance:
            amount: "0.01"
            unit: ETH
          minimumTransferAmount: "0.0002"
      properties:
        item:
          $ref: '#/components/schemas/GetFeeAddressDetailsRI'
      required:
      - item
      type: object
    DeleteAutomaticTokensForwardingR_data:
      example:
        item:
          confirmationsCount: 2
          feePriority: standard
          tokenData: null
          createdTimestamp: 1611238648
          feeAddress: mojjR51gMXLJ4B3SBPhEXXRFDX7U5UWXNQ
          minimumTransferAmount: "0.5"
          callbackUrl: https://example.com
          fromAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
          toAddress: tb1q54j7qcu7kgsrx87yn0r9zjdvsxrnvxg4qua2z6
          referenceId: 6017dd02a309213863be9e55
      properties:
        item:
          $ref: '#/components/schemas/DeleteAutomaticTokensForwardingRI'
      required:
      - item
      type: object
    ValidateAddressR_data:
      example:
        item:
          address: 15XyNC88pujwuuur8DCsXBCfEhJJMzHayU
          isValid: true
      properties:
        item:
          $ref: '#/components/schemas/ValidateAddressRI'
      required:
      - item
      type: object
    GetEIP1559FeeRecommendationsRI_baseFeePerGas:
      example:
        unit: WEI
        value: "45265143502"
      properties:
        unit:
          description: Represents the unit of the base fee per gas.
          example: WEI
          type: string
        value:
          description: "Represents the expected base fee per gas of the upcoming block,\
            \ calculated from the previous block data."
          example: "45265143502"
          type: string
      required:
      - unit
      - value
      type: object
    GetEIP1559FeeRecommendationsRI_maxFeePerGas:
      example:
        standard: "69996407508"
        unit: WEI
        fast: "75235090892"
        slow: "67416761254"
      properties:
        fast:
          description: "Represents the fast maximum fee per gas, calculated from unconfirmed\
            \ transactions."
          example: "75235090892"
          type: string
        slow:
          description: "Represents the slow maximum fee per gas, calculated from unconfirmed\
            \ transactions."
          example: "67416761254"
          type: string
        standard:
          description: "Represents the standard maximum fee per gas, calculated from\
            \ unconfirmed transactions."
          example: "69996407508"
          type: string
        unit:
          description: Represents the unit of the maximum fee per gas.
          example: WEI
          type: string
      required:
      - fast
      - slow
      - standard
      - unit
      type: object
    GetEIP1559FeeRecommendationsRI_maxPriorityFeePerGas:
      example:
        standard: "41987372497"
        unit: WEI
        fast: "47085140300"
        slow: "37331114417"
      properties:
        fast:
          description: "Represents the fast maximum priority fee per gas, calculated\
            \ from unconfirmed transactions."
          example: "47085140300"
          type: string
        slow:
          description: "Represents the slow maximum priority fee per gas, calculated\
            \ from unconfirmed transactions."
          example: "37331114417"
          type: string
        standard:
          description: "Represents the standard maximum priority fee per gas, calculated\
            \ from unconfirmed transactions."
          example: "41987372497"
          type: string
        unit:
          description: Represents the unit of the maximum priority fee per gas.
          example: WEI
          type: string
      required:
      - fast
      - slow
      - standard
      - unit
      type: object
    GetEIP1559FeeRecommendationsR_data:
      example:
        item:
          baseFeePerGas:
            unit: WEI
            value: "45265143502"
          maxPriorityFeePerGas:
            standard: "41987372497"
            unit: WEI
            fast: "47085140300"
            slow: "37331114417"
          maxFeePerGas:
            standard: "69996407508"
            unit: WEI
            fast: "75235090892"
            slow: "67416761254"
      properties:
        item:
          $ref: '#/components/schemas/GetEIP1559FeeRecommendationsRI'
      required:
      - item
      type: object
    BroadcastLocallySignedTransactionR_data:
      example:
        item:
          transactionId: 347d96855d41b77f1e23048fff11c18e9fe699ee69b0b402338f34189734e0a2
      properties:
        item:
          $ref: '#/components/schemas/BroadcastLocallySignedTransactionRI'
      required:
      - item
      type: object
    EstimateGasLimitR_data:
      example:
        item:
          gasLimit: "550000"
      properties:
        item:
          $ref: '#/components/schemas/EstimateGasLimitRI'
      required:
      - item
      type: object
    EstimateTokenGasLimitR_data:
      example:
        item:
          gasLimit: "550000"
      properties:
        item:
          $ref: '#/components/schemas/EstimateTokenGasLimitRI'
      required:
      - item
      type: object
    DecodeRawTransactionHexR_data:
      example:
        item:
          size: 248
          blockchainSpeficicData: null
          transactionId: 00a8a090a7c78f64e4626e6720b305edd95fcd7865b5b45864a88070a8079cea
      properties:
        item:
          $ref: '#/components/schemas/DecodeRawTransactionHexRI'
      required:
      - item
      type: object
    DecodeX_AddressR_data:
      example:
        item:
          addressTag: 3999472835
          classicAddress: rA9bXGJcXvZKaWofrRphdJsBWzhyCfH3z
      properties:
        item:
          $ref: '#/components/schemas/DecodeX-AddressRI'
      required:
      - item
      type: object
    EncodeX_AddressR_data:
      example:
        item:
          xAddress: TVTMSyg6nRscAm2JtRd8hnpF9nD21CgZx6ibb9iy3EWHotV
      properties:
        item:
          $ref: '#/components/schemas/EncodeX-AddressRI'
      required:
      - item
      type: object
    ListSupportedAssetsR_data:
      example:
        total: 100
        offset: 0
        limit: 50
        items: []
      properties:
        limit:
          description: Defines how many items should be returned in the response per
            page basis.
          example: 50
          type: integer
        offset:
          description: "The starting index of the response items, i.e. where the response\
            \ should start listing the returned items."
          example: 0
          type: integer
        total:
          description: Defines the total number of items returned in the response.
          example: 100
          type: integer
        items:
          example: []
          items:
            $ref: '#/components/schemas/ListSupportedAssetsRI'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    GetExchangeRateByAssetSymbolsR_data:
      example:
        item:
          rate: "54768.26745499848"
          fromAssetSymbol: BTC
          fromAssetId: 5b1ea92e584bf50020130612
          toAssetSymbol: USD
          calculationTimestamp: 1618577849
          toAssetId: 5b1ea92e584bf50020130615
      properties:
        item:
          $ref: '#/components/schemas/GetExchangeRateByAssetSymbolsRI'
      required:
      - item
      type: object
    GetExchangeRateByAssetsIDsR_data:
      example:
        item:
          rate: "54691.40481689715"
          fromAssetSymbol: BTC
          fromAssetId: 5b1ea92e584bf50020130612
          toAssetSymbol: USD
          calculationTimestamp: 1618577849
          toAssetId: 5b1ea92e584bf50020130615
      properties:
        item:
          $ref: '#/components/schemas/GetExchangeRateByAssetsIDsRI'
      required:
      - item
      type: object
    GetAssetDetailsByAssetIDRI_assetLogo:
      example:
        imageData: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiI+PGcgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj48Y2lyY2xlIGN4PSIxNiIgY3k9IjE2IiByPSIxNiIgZmlsbD0iI0Y3OTMxQSIvPjxwYXRoIGZpbGw9IiNGRkYiIGZpbGwtcnVsZT0ibm9uemVybyIgZD0iTTIzLjE4OSAxNC4wMmMuMzE0LTIuMDk2LTEuMjgzLTMuMjIzLTMuNDY1LTMuOTc1bC43MDgtMi44NC0xLjcyOC0uNDMtLjY5IDIuNzY1Yy0uNDU0LS4xMTQtLjkyLS4yMi0xLjM4NS0uMzI2bC42OTUtMi43ODNMMTUuNTk2IDZsLS43MDggMi44MzljLS4zNzYtLjA4Ni0uNzQ2LS4xNy0xLjEwNC0uMjZsLjAwMi0uMDA5LTIuMzg0LS41OTUtLjQ2IDEuODQ2czEuMjgzLjI5NCAxLjI1Ni4zMTJjLjcuMTc1LjgyNi42MzguODA1IDEuMDA2bC0uODA2IDMuMjM1Yy4wNDguMDEyLjExLjAzLjE4LjA1N2wtLjE4My0uMDQ1LTEuMTMgNC41MzJjLS4wODYuMjEyLS4zMDMuNTMxLS43OTMuNDEuMDE4LjAyNS0xLjI1Ni0uMzEzLTEuMjU2LS4zMTNsLS44NTggMS45NzggMi4yNS41NjFjLjQxOC4xMDUuODI4LjIxNSAxLjIzMS4zMThsLS43MTUgMi44NzIgMS43MjcuNDMuNzA4LTIuODRjLjQ3Mi4xMjcuOTMuMjQ1IDEuMzc4LjM1N2wtLjcwNiAyLjgyOCAxLjcyOC40My43MTUtMi44NjZjMi45NDguNTU4IDUuMTY0LjMzMyA2LjA5Ny0yLjMzMy43NTItMi4xNDYtLjAzNy0zLjM4NS0xLjU4OC00LjE5MiAxLjEzLS4yNiAxLjk4LTEuMDAzIDIuMjA3LTIuNTM4em0tMy45NSA1LjUzOGMtLjUzMyAyLjE0Ny00LjE0OC45ODYtNS4zMi42OTVsLjk1LTMuODA1YzEuMTcyLjI5MyA0LjkyOS44NzIgNC4zNyAzLjExem0uNTM1LTUuNTY5Yy0uNDg3IDEuOTUzLTMuNDk1Ljk2LTQuNDcuNzE3bC44Ni0zLjQ1Yy45NzUuMjQzIDQuMTE4LjY5NiAzLjYxIDIuNzMzeiIvPjwvZz48L3N2Zz4=
        mimeType: image/svg+xml
        encoding: base64
      properties:
        encoding:
          description: Defines the encoding of the image data which is usually base64.
          example: base64
          type: string
        imageData:
          description: Defines the encoded image data as a string.
          example: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiI+PGcgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj48Y2lyY2xlIGN4PSIxNiIgY3k9IjE2IiByPSIxNiIgZmlsbD0iI0Y3OTMxQSIvPjxwYXRoIGZpbGw9IiNGRkYiIGZpbGwtcnVsZT0ibm9uemVybyIgZD0iTTIzLjE4OSAxNC4wMmMuMzE0LTIuMDk2LTEuMjgzLTMuMjIzLTMuNDY1LTMuOTc1bC43MDgtMi44NC0xLjcyOC0uNDMtLjY5IDIuNzY1Yy0uNDU0LS4xMTQtLjkyLS4yMi0xLjM4NS0uMzI2bC42OTUtMi43ODNMMTUuNTk2IDZsLS43MDggMi44MzljLS4zNzYtLjA4Ni0uNzQ2LS4xNy0xLjEwNC0uMjZsLjAwMi0uMDA5LTIuMzg0LS41OTUtLjQ2IDEuODQ2czEuMjgzLjI5NCAxLjI1Ni4zMTJjLjcuMTc1LjgyNi42MzguODA1IDEuMDA2bC0uODA2IDMuMjM1Yy4wNDguMDEyLjExLjAzLjE4LjA1N2wtLjE4My0uMDQ1LTEuMTMgNC41MzJjLS4wODYuMjEyLS4zMDMuNTMxLS43OTMuNDEuMDE4LjAyNS0xLjI1Ni0uMzEzLTEuMjU2LS4zMTNsLS44NTggMS45NzggMi4yNS41NjFjLjQxOC4xMDUuODI4LjIxNSAxLjIzMS4zMThsLS43MTUgMi44NzIgMS43MjcuNDMuNzA4LTIuODRjLjQ3Mi4xMjcuOTMuMjQ1IDEuMzc4LjM1N2wtLjcwNiAyLjgyOCAxLjcyOC40My43MTUtMi44NjZjMi45NDguNTU4IDUuMTY0LjMzMyA2LjA5Ny0yLjMzMy43NTItMi4xNDYtLjAzNy0zLjM4NS0xLjU4OC00LjE5MiAxLjEzLS4yNiAxLjk4LTEuMDAzIDIuMjA3LTIuNTM4em0tMy45NSA1LjUzOGMtLjUzMyAyLjE0Ny00LjE0OC45ODYtNS4zMi42OTVsLjk1LTMuODA1YzEuMTcyLjI5MyA0LjkyOS44NzIgNC4zNyAzLjExem0uNTM1LTUuNTY5Yy0uNDg3IDEuOTUzLTMuNDk1Ljk2LTQuNDcuNzE3bC44Ni0zLjQ1Yy45NzUuMjQzIDQuMTE4LjY5NiAzLjYxIDIuNzMzeiIvPjwvZz48L3N2Zz4=
          type: string
        mimeType:
          description: "Defines the image type of the logo - jpg, png, svg, etc."
          example: image/svg+xml
          type: string
      required:
      - encoding
      - imageData
      - mimeType
      type: object
    GetAssetDetailsByAssetIDRI_latestRate:
      description: Specifies the latest price of the asset.
      example:
        amount: "61704.20995670996"
        unit: USD
        calculationTimestamp: 1636107864
      properties:
        amount:
          description: Represents the amount of the latest rate.
          example: "61704.20995670996"
          type: string
        calculationTimestamp:
          description: Defines when the price was calculated in UNIX timestamp. Oldest
            possible timestamp is 30 days.
          example: 1636107864
          type: integer
        unit:
          description: Specifies the unit of the latest price of the asset.
          example: USD
          type: string
      required:
      - amount
      - unit
      type: object
    GetAssetDetailsByAssetIDR_data:
      example:
        item:
          assetSymbol: BTC
          assetId: 5b1ea92e584bf50020130615
          assetLogo:
            imageData: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiI+PGcgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj48Y2lyY2xlIGN4PSIxNiIgY3k9IjE2IiByPSIxNiIgZmlsbD0iI0Y3OTMxQSIvPjxwYXRoIGZpbGw9IiNGRkYiIGZpbGwtcnVsZT0ibm9uemVybyIgZD0iTTIzLjE4OSAxNC4wMmMuMzE0LTIuMDk2LTEuMjgzLTMuMjIzLTMuNDY1LTMuOTc1bC43MDgtMi44NC0xLjcyOC0uNDMtLjY5IDIuNzY1Yy0uNDU0LS4xMTQtLjkyLS4yMi0xLjM4NS0uMzI2bC42OTUtMi43ODNMMTUuNTk2IDZsLS43MDggMi44MzljLS4zNzYtLjA4Ni0uNzQ2LS4xNy0xLjEwNC0uMjZsLjAwMi0uMDA5LTIuMzg0LS41OTUtLjQ2IDEuODQ2czEuMjgzLjI5NCAxLjI1Ni4zMTJjLjcuMTc1LjgyNi42MzguODA1IDEuMDA2bC0uODA2IDMuMjM1Yy4wNDguMDEyLjExLjAzLjE4LjA1N2wtLjE4My0uMDQ1LTEuMTMgNC41MzJjLS4wODYuMjEyLS4zMDMuNTMxLS43OTMuNDEuMDE4LjAyNS0xLjI1Ni0uMzEzLTEuMjU2LS4zMTNsLS44NTggMS45NzggMi4yNS41NjFjLjQxOC4xMDUuODI4LjIxNSAxLjIzMS4zMThsLS43MTUgMi44NzIgMS43MjcuNDMuNzA4LTIuODRjLjQ3Mi4xMjcuOTMuMjQ1IDEuMzc4LjM1N2wtLjcwNiAyLjgyOCAxLjcyOC40My43MTUtMi44NjZjMi45NDguNTU4IDUuMTY0LjMzMyA2LjA5Ny0yLjMzMy43NTItMi4xNDYtLjAzNy0zLjM4NS0xLjU4OC00LjE5MiAxLjEzLS4yNiAxLjk4LTEuMDAzIDIuMjA3LTIuNTM4em0tMy45NSA1LjUzOGMtLjUzMyAyLjE0Ny00LjE0OC45ODYtNS4zMi42OTVsLjk1LTMuODA1YzEuMTcyLjI5MyA0LjkyOS44NzIgNC4zNyAzLjExem0uNTM1LTUuNTY5Yy0uNDg3IDEuOTUzLTMuNDk1Ljk2LTQuNDcuNzE3bC44Ni0zLjQ1Yy45NzUuMjQzIDQuMTE4LjY5NiAzLjYxIDIuNzMzeiIvPjwvZz48L3N2Zz4=
            mimeType: image/svg+xml
            encoding: base64
          assetName: Bitcoin
          latestRate:
            amount: "61704.20995670996"
            unit: USD
            calculationTimestamp: 1636107864
          assetOriginalSymbol: BTC
          slug: bitcoin
          assetType: crypto
          specificData: null
      properties:
        item:
          $ref: '#/components/schemas/GetAssetDetailsByAssetIDRI'
      required:
      - item
      type: object
    GetAssetDetailsByAssetSymbolR_data:
      example:
        item:
          assetSymbol: BTC
          assetId: 5b1ea92e584bf50020130615
          assetLogo:
            imageData: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiI+PGcgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj48Y2lyY2xlIGN4PSIxNiIgY3k9IjE2IiByPSIxNiIgZmlsbD0iI0Y3OTMxQSIvPjxwYXRoIGZpbGw9IiNGRkYiIGZpbGwtcnVsZT0ibm9uemVybyIgZD0iTTIzLjE4OSAxNC4wMmMuMzE0LTIuMDk2LTEuMjgzLTMuMjIzLTMuNDY1LTMuOTc1bC43MDgtMi44NC0xLjcyOC0uNDMtLjY5IDIuNzY1Yy0uNDU0LS4xMTQtLjkyLS4yMi0xLjM4NS0uMzI2bC42OTUtMi43ODNMMTUuNTk2IDZsLS43MDggMi44MzljLS4zNzYtLjA4Ni0uNzQ2LS4xNy0xLjEwNC0uMjZsLjAwMi0uMDA5LTIuMzg0LS41OTUtLjQ2IDEuODQ2czEuMjgzLjI5NCAxLjI1Ni4zMTJjLjcuMTc1LjgyNi42MzguODA1IDEuMDA2bC0uODA2IDMuMjM1Yy4wNDguMDEyLjExLjAzLjE4LjA1N2wtLjE4My0uMDQ1LTEuMTMgNC41MzJjLS4wODYuMjEyLS4zMDMuNTMxLS43OTMuNDEuMDE4LjAyNS0xLjI1Ni0uMzEzLTEuMjU2LS4zMTNsLS44NTggMS45NzggMi4yNS41NjFjLjQxOC4xMDUuODI4LjIxNSAxLjIzMS4zMThsLS43MTUgMi44NzIgMS43MjcuNDMuNzA4LTIuODRjLjQ3Mi4xMjcuOTMuMjQ1IDEuMzc4LjM1N2wtLjcwNiAyLjgyOCAxLjcyOC40My43MTUtMi44NjZjMi45NDguNTU4IDUuMTY0LjMzMyA2LjA5Ny0yLjMzMy43NTItMi4xNDYtLjAzNy0zLjM4NS0xLjU4OC00LjE5MiAxLjEzLS4yNiAxLjk4LTEuMDAzIDIuMjA3LTIuNTM4em0tMy45NSA1LjUzOGMtLjUzMyAyLjE0Ny00LjE0OC45ODYtNS4zMi42OTVsLjk1LTMuODA1YzEuMTcyLjI5MyA0LjkyOS44NzIgNC4zNyAzLjExem0uNTM1LTUuNTY5Yy0uNDg3IDEuOTUzLTMuNDk1Ljk2LTQuNDcuNzE3bC44Ni0zLjQ1Yy45NzUuMjQzIDQuMTE4LjY5NiAzLjYxIDIuNzMzeiIvPjwvZz48L3N2Zz4=
            mimeType: image/svg+xml
            encoding: base64
          assetName: Bitcoin
          latestRate:
            amount: "61704.20995670996"
            unit: USD
            calculationTimestamp: 1636107864
          assetOriginalSymbol: BTC
          slug: bitcoin
          assetType: crypto
          specificData: null
      properties:
        item:
          $ref: '#/components/schemas/GetAssetDetailsByAssetSymbolRI'
      required:
      - item
      type: object
    TransactionRequestApproval_data_item:
      description: Defines an `item` as one result.
      example:
        requiredApprovals: 2
        currentRejections: 0
        blockchain: ethereum
        requiredRejections: 2
        network: ropsten
        currentApprovals: 1
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: ropsten
          type: string
        requiredApprovals:
          description: The required number of approvals needed to approve the transaction.
          example: 2
          type: integer
        requiredRejections:
          description: The required number of rejections needed to reject the transaction.
          example: 2
          type: integer
        currentApprovals:
          description: The current number of approvals given for the transaction.
          example: 1
          type: integer
        currentRejections:
          description: The current number of rejections given for the transaction.
          example: 0
          type: integer
      required:
      - blockchain
      - currentApprovals
      - currentRejections
      - network
      - requiredApprovals
      - requiredRejections
      type: object
    TransactionRequestApproval_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: WALLET_AS_A_SERVICE
        item:
          requiredApprovals: 2
          currentRejections: 0
          blockchain: ethereum
          requiredRejections: 2
          network: ropsten
          currentApprovals: 1
        event: TRANSACTION_REQUEST_APPROVAL
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: WALLET_AS_A_SERVICE
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: TRANSACTION_REQUEST_APPROVAL
          type: string
        item:
          $ref: '#/components/schemas/TransactionRequestApproval_data_item'
      required:
      - event
      - item
      - product
      type: object
    TransactionRequestRejection_data_item:
      description: Defines an `item` as one result.
      example:
        requiredApprovals: 2
        currentRejections: 2
        blockchain: ethereum
        requiredRejections: 2
        network: ropsten
        currentApprovals: 0
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: ropsten
          type: string
        requiredApprovals:
          description: The required number of approvals needed to approve the transaction.
          example: 2
          type: integer
        requiredRejections:
          description: The required number of rejections needed to reject the transaction.
          example: 2
          type: integer
        currentApprovals:
          description: The current number of approvals given for the transaction.
          example: 0
          type: integer
        currentRejections:
          description: The current number of rejections given for the transaction.
          example: 2
          type: integer
      required:
      - blockchain
      - currentApprovals
      - currentRejections
      - network
      - requiredApprovals
      - requiredRejections
      type: object
    TransactionRequestRejection_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: WALLET_AS_A_SERVICE
        item:
          requiredApprovals: 2
          currentRejections: 2
          blockchain: ethereum
          requiredRejections: 2
          network: ropsten
          currentApprovals: 0
        event: TRANSACTION_REQUEST_REJECTION
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: WALLET_AS_A_SERVICE
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: TRANSACTION_REQUEST_REJECTION
          type: string
        item:
          $ref: '#/components/schemas/TransactionRequestRejection_data_item'
      required:
      - event
      - item
      - product
      type: object
    TransactionRequestBroadcasted_data_item:
      description: Defines an `item` as one result.
      example:
        requiredApprovals: 5
        currentRejections: 1
        blockchain: Bitcoin/Ethereum (whichever applicable)
        requiredRejections: 2
        transactionId: 4e78f606bc42534744e223f54b85d5bbd54a3949f54eb8fac31d73028c286e31
        network: Testnet/Mainnet (whichever applicable)
        currentApprovals: 2
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: Bitcoin/Ethereum (whichever applicable)
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: Testnet/Mainnet (whichever applicable)
          type: string
        requiredApprovals:
          description: The required number of approvals needed to approve the transaction.
          example: 5
          type: integer
        requiredRejections:
          description: The required number of rejections needed to reject the transaction.
          example: 2
          type: integer
        currentApprovals:
          description: The current number of approvals given for the transaction.
          example: 2
          type: integer
        currentRejections:
          description: The current number of rejections given for the transaction.
          example: 1
          type: integer
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: 4e78f606bc42534744e223f54b85d5bbd54a3949f54eb8fac31d73028c286e31
          type: string
      required:
      - blockchain
      - currentApprovals
      - currentRejections
      - network
      - requiredApprovals
      - requiredRejections
      - transactionId
      type: object
    TransactionRequestBroadcasted_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: WALLET_AS_A_SERVICE
        item:
          requiredApprovals: 5
          currentRejections: 1
          blockchain: Bitcoin/Ethereum (whichever applicable)
          requiredRejections: 2
          transactionId: 4e78f606bc42534744e223f54b85d5bbd54a3949f54eb8fac31d73028c286e31
          network: Testnet/Mainnet (whichever applicable)
          currentApprovals: 2
        event: TRANSACTION_REQUEST_BROADCASTED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: WALLET_AS_A_SERVICE
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: TRANSACTION_REQUEST_BROADCASTED
          type: string
        item:
          $ref: '#/components/schemas/TransactionRequestBroadcasted_data_item'
      required:
      - event
      - item
      - product
      type: object
    TransactionRequestMined_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: WALLET_AS_A_SERVICE
        item:
          requiredApprovals: 5
          currentRejections: 1
          blockchain: Bitcoin/Ethereum (whichever applicable)
          requiredRejections: 2
          transactionId: 4e78f606bc42534744e223f54b85d5bbd54a3949f54eb8fac31d73028c286e31
          network: Testnet/Mainnet (whichever applicable)
          currentApprovals: 2
        event: TRANSACTION_REQUEST_MINED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: WALLET_AS_A_SERVICE
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: TRANSACTION_REQUEST_MINED
          type: string
        item:
          $ref: '#/components/schemas/TransactionRequestBroadcasted_data_item'
      required:
      - event
      - item
      - product
      type: object
    TransactionRequestFail_data_item:
      description: Defines an `item` as one result.
      example:
        requiredApprovals: 2
        currentRejections: 0
        blockchain: ethereum
        requiredRejections: 2
        errorMessage: Transaction_Request_Failed
        network: ropsten
        currentApprovals: 0
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: ropsten
          type: string
        requiredApprovals:
          description: The required number of approvals needed to approve the transaction.
          example: 2
          type: integer
        requiredRejections:
          description: The required number of rejections needed to reject the transaction.
          example: 2
          type: integer
        currentApprovals:
          description: The current number of approvals given for the transaction.
          example: 0
          type: integer
        currentRejections:
          description: The current number of rejections given for the transaction.
          example: 0
          type: integer
        errorMessage:
          description: Represents the error message received for the transaction.
          example: Transaction_Request_Failed
          type: string
      required:
      - blockchain
      - currentApprovals
      - currentRejections
      - errorMessage
      - network
      - requiredApprovals
      - requiredRejections
      type: object
    TransactionRequestFail_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: WALLET_AS_A_SERVICE
        item:
          requiredApprovals: 2
          currentRejections: 0
          blockchain: ethereum
          requiredRejections: 2
          errorMessage: Transaction_Request_Failed
          network: ropsten
          currentApprovals: 0
        event: TRANSACTION_REQUEST_FAIL
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: WALLET_AS_A_SERVICE
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: TRANSACTION_REQUEST_FAIL
          type: string
        item:
          $ref: '#/components/schemas/TransactionRequestFail_data_item'
      required:
      - event
      - item
      - product
      type: object
    AddressCoinsTransactionUnconfirmed_data_item:
      description: Defines an `item` as one result.
      example:
        amount: "0.6508984"
        unit: BTC
        address: 3CzKAnCXt7ePb5NCp5qrAEimrxjY81oLoT
        blockchain: bitcoin
        firstSeenInMempoolTimestamp: 1610365615
        transactionId: 4b2159770f75a7200ea168eb56ebbf3303b025d838f743fb6e785bc32d5ac65b
        network: testnet
        direction: incoming
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        address:
          description: Defines the specific address to which the coin transaction
            has been sent and is pending confirmation.
          example: 3CzKAnCXt7ePb5NCp5qrAEimrxjY81oLoT
          type: string
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: 4b2159770f75a7200ea168eb56ebbf3303b025d838f743fb6e785bc32d5ac65b
          type: string
        amount:
          description: Defines the amount of coins sent with the transaction that
            is pending confirmation.
          example: "0.6508984"
          type: string
        unit:
          description: "Defines the unit of the transaction, e.g. BTC."
          enum:
          - btc
          - satoshi
          - wei
          - gwei
          - eth
          - doge
          - dash
          - etc
          - xrp
          - zil
          example: BTC
          type: string
        direction:
          description: Defines whether the transaction is "incoming" or "outgoing".
          enum:
          - incoming
          - outgoing
          example: incoming
          type: string
        firstSeenInMempoolTimestamp:
          description: Defines the exact time the transaction has been first accepted
            into the mempool to await confirmation as timestamp.
          example: 1610365615
          type: integer
      required:
      - address
      - amount
      - blockchain
      - direction
      - firstSeenInMempoolTimestamp
      - network
      - transactionId
      - unit
      type: object
    AddressCoinsTransactionUnconfirmed_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          amount: "0.6508984"
          unit: BTC
          address: 3CzKAnCXt7ePb5NCp5qrAEimrxjY81oLoT
          blockchain: bitcoin
          firstSeenInMempoolTimestamp: 1610365615
          transactionId: 4b2159770f75a7200ea168eb56ebbf3303b025d838f743fb6e785bc32d5ac65b
          network: testnet
          direction: incoming
        event: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: ADDRESS_COINS_TRANSACTION_UNCONFIRMED
          type: string
        item:
          $ref: '#/components/schemas/AddressCoinsTransactionUnconfirmed_data_item'
      required:
      - event
      - item
      - product
      type: object
    AddressTokensTransactionUnconfirmed_data_item:
      description: Defines an `item` as one result.
      example:
        address: 0x65b895f400dae5541d70cbbec07527210158f6e2
        blockchain: ethereum
        firstSeenInMempoolTimestamp: 1210363220
        tokenType: ERC-20
        transactionId: 0x76670f3bb45c09e69173fe74834face446edf251c5f02ec30384a0957fce482b
        network: ropsten
        token: null
        direction: incoming
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: ropsten
          type: string
        address:
          description: Defines the specific address to which the token transaction
            has been sent and is pending confirmation.
          example: 0x65b895f400dae5541d70cbbec07527210158f6e2
          type: string
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: 0x76670f3bb45c09e69173fe74834face446edf251c5f02ec30384a0957fce482b
          type: string
        tokenType:
          description: "Defines the type of token sent with the transaction, e.g.\
            \ ERC 20."
          enum:
          - ERC-20
          - ERC-721
          - OMNI
          example: ERC-20
          type: string
        token:
          $ref: '#/components/schemas/AddressTokensTransactionUnconfirmedToken'
        direction:
          description: Defines whether the transaction is "incoming" or "outgoing".
          enum:
          - incoming
          - outgoing
          example: incoming
          type: string
        firstSeenInMempoolTimestamp:
          description: Defines the exact time the transaction has been first accepted
            into the mempool to await confirmation as timestamp.
          example: 1210363220
          type: integer
      required:
      - address
      - blockchain
      - direction
      - firstSeenInMempoolTimestamp
      - network
      - token
      - tokenType
      - transactionId
      type: object
    AddressTokensTransactionUnconfirmed_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          address: 0x65b895f400dae5541d70cbbec07527210158f6e2
          blockchain: ethereum
          firstSeenInMempoolTimestamp: 1210363220
          tokenType: ERC-20
          transactionId: 0x76670f3bb45c09e69173fe74834face446edf251c5f02ec30384a0957fce482b
          network: ropsten
          token: null
          direction: incoming
        event: ADDRESS_TOKENS_TRANSACTION_UNCONFIRMED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: ADDRESS_TOKENS_TRANSACTION_UNCONFIRMED
          type: string
        item:
          $ref: '#/components/schemas/AddressTokensTransactionUnconfirmed_data_item'
      required:
      - event
      - item
      - product
      type: object
    AddressCoinsTransactionConfirmed_data_item_minedInBlock:
      description: Defines the block height in which this transaction was mined and
        confirmed in.
      example:
        hash: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
        height: 667861
        timestamp: 1610365213
      properties:
        height:
          description: Defines the number of blocks in the blockchain preceding this
            specific block.
          example: 667861
          type: integer
        hash:
          description: "Represents the hash of the block's header, i.e. an output\
            \ that has a fixed length."
          example: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
          type: string
        timestamp:
          description: Defines the exact date/time when this transaction was mined
            in seconds since Unix Epoch time.
          example: 1610365213
          type: integer
      required:
      - hash
      - height
      - timestamp
      type: object
    AddressCoinsTransactionConfirmed_data_item:
      description: Defines an `item` as one result.
      example:
        minedInBlock:
          hash: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
          height: 667861
          timestamp: 1610365213
        amount: "0.0315"
        unit: BTC
        address: bc1qmjhy4exylset37e6sfjdtfksm8kpcrxknj7cag
        blockchain: bitcoin
        transactionId: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
        network: testnet
        direction: incoming
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"mordor\" are test networks."
          example: testnet
          type: string
        address:
          description: Defines the specific address to which the coin transaction
            has been sent and is confirmed.
          example: bc1qmjhy4exylset37e6sfjdtfksm8kpcrxknj7cag
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressCoinsTransactionConfirmed_data_item_minedInBlock'
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
          type: string
        amount:
          description: Defines the amount of coins sent with the confirmed transaction.
          example: "0.0315"
          type: string
        unit:
          description: "Defines the unit of the transaction, e.g. BTC."
          example: BTC
          type: string
        direction:
          description: Defines whether the transaction is "incoming" or "outgoing".
          enum:
          - incoming
          - outgoing
          example: incoming
          type: string
      required:
      - address
      - amount
      - blockchain
      - direction
      - minedInBlock
      - network
      - transactionId
      - unit
      type: object
    AddressCoinsTransactionConfirmed_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          minedInBlock:
            hash: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
            height: 667861
            timestamp: 1610365213
          amount: "0.0315"
          unit: BTC
          address: bc1qmjhy4exylset37e6sfjdtfksm8kpcrxknj7cag
          blockchain: bitcoin
          transactionId: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
          network: testnet
          direction: incoming
        event: ADDRESS_COINS_TRANSACTION_CONFIRMED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: ADDRESS_COINS_TRANSACTION_CONFIRMED
          type: string
        item:
          $ref: '#/components/schemas/AddressCoinsTransactionConfirmed_data_item'
      required:
      - event
      - item
      - product
      type: object
    AddressTokensTransactionConfirmed_data_item_minedInBlock:
      description: Refers to the specific block the transaction was mined in.
      example:
        hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
        height: 657915
        timestamp: 1586365500
      properties:
        height:
          description: Defines the number of blocks in the blockchain preceding this
            specific block.
          example: 657915
          type: integer
        hash:
          description: "Represents the hash of the block's header, i.e. an output\
            \ that has a fixed length."
          example: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
          type: string
        timestamp:
          description: Defines the exact date/time when this transaction was mined
            in seconds since Unix Epoch time.
          example: 1586365500
          type: integer
      required:
      - hash
      - height
      - timestamp
      type: object
    AddressTokensTransactionConfirmed_data_item:
      description: Defines an `item` as one result.
      example:
        minedInBlock:
          hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
          height: 657915
          timestamp: 1586365500
        address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
        blockchain: ethereum
        tokenType: ERC-20
        transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
        network: ropsten
        token: null
        direction: incoming
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\",  are test networks."
          example: ropsten
          type: string
        address:
          description: Defines the specific address to which the transaction has been
            sent.
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmed_data_item_minedInBlock'
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          type: string
        tokenType:
          description: "Defines the type of token sent with the transaction, e.g.\
            \ ERC 20."
          enum:
          - ERC-20
          - ERC-721
          - OMNI
          - BEP-20
          example: ERC-20
          type: string
        token:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmedToken'
        direction:
          description: Defines whether the transaction is "incoming" or "outgoing".
          enum:
          - incoming
          - outgoing
          example: incoming
          type: string
      required:
      - address
      - blockchain
      - direction
      - minedInBlock
      - network
      - token
      - tokenType
      - transactionId
      type: object
    AddressTokensTransactionConfirmed_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          minedInBlock:
            hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
            height: 657915
            timestamp: 1586365500
          address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          blockchain: ethereum
          tokenType: ERC-20
          transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          network: ropsten
          token: null
          direction: incoming
        event: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: ADDRESS_TOKENS_TRANSACTION_CONFIRMED
          type: string
        item:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmed_data_item'
      required:
      - event
      - item
      - product
      type: object
    AddressTokensTransactionConfirmedEachConfirmation_data_item:
      description: Defines an `item` as one result.
      example:
        currentConfirmations: 2
        minedInBlock:
          hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
          height: 657915
          timestamp: 1586365500
        address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
        blockchain: ethereum
        tokenType: ERC-20
        transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
        network: ropsten
        targetConfirmations: 3
        token: null
        direction: incoming
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\",  are test networks."
          example: ropsten
          type: string
        address:
          description: Defines the specific address to which the transaction has been
            sent.
          example: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmed_data_item_minedInBlock'
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          type: string
        currentConfirmations:
          description: Defines the number of currently received confirmations for
            the transaction.
          example: 2
          type: integer
        targetConfirmations:
          description: "Defines the number of confirmation transactions requested\
            \ as callbacks, i.e. the system can notify till the n-th confirmation."
          example: 3
          type: integer
        tokenType:
          description: "Defines the type of token sent with the transaction, e.g.\
            \ ERC 20."
          enum:
          - ERC-20
          - ERC-721
          - OMNI
          - BEP-20
          example: ERC-20
          type: string
        token:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmedEachConfirmationToken'
        direction:
          description: Defines whether the transaction is "incoming" or "outgoing".
          enum:
          - incoming
          - outgoing
          example: incoming
          type: string
      required:
      - address
      - blockchain
      - currentConfirmations
      - direction
      - minedInBlock
      - network
      - targetConfirmations
      - token
      - tokenType
      - transactionId
      type: object
    AddressTokensTransactionConfirmedEachConfirmation_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          currentConfirmations: 2
          minedInBlock:
            hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
            height: 657915
            timestamp: 1586365500
          address: 0x7495fede000c8a3b77eeae09cf70fa94cd2d53f5
          blockchain: ethereum
          tokenType: ERC-20
          transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          network: ropsten
          targetConfirmations: 3
          token: null
          direction: incoming
        event: ADDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: ADDRESS_TOKENS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          type: string
        item:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmedEachConfirmation_data_item'
      required:
      - event
      - item
      - product
      type: object
    AddressCoinsTransactionConfirmedEachConfirmation_data_item_minedInBlock:
      description: Refers to the specific block the transaction was mined in.
      example:
        hash: dfe45f6724b550c281107ffaa5880cb280878fb4dbaa742aa21449f3d2340c13
        height: 667754
        timestamp: 1610365314
      properties:
        height:
          description: Defines the number of blocks in the blockchain preceding this
            specific block.
          example: 667754
          type: integer
        hash:
          description: "Represents the hash of the block's header, i.e. an output\
            \ that has a fixed length."
          example: dfe45f6724b550c281107ffaa5880cb280878fb4dbaa742aa21449f3d2340c13
          type: string
        timestamp:
          description: Defines the exact date/time when this transaction was mined
            in seconds since Unix Epoch time.
          example: 1610365314
          type: integer
      required:
      - hash
      - height
      - timestamp
      type: object
    AddressCoinsTransactionConfirmedEachConfirmation_data_item:
      description: Defines an `item` as one result.
      example:
        currentConfirmations: 8
        minedInBlock:
          hash: dfe45f6724b550c281107ffaa5880cb280878fb4dbaa742aa21449f3d2340c13
          height: 667754
          timestamp: 1610365314
        amount: "0.0611"
        unit: BTC
        address: 15282N4BYEwYh3j1dTgJu64Ey5qWn9Po9F
        blockchain: bitcoin
        transactionId: cbd3dea703bd2bc78bca69ee61ca14e6ffcdd809d07ebbc3b8fea3c30ea38f33
        network: testnet
        targetConfirmations: 12
        direction: incoming
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        address:
          description: Defines the specific address to which the transaction has been
            sent.
          example: 15282N4BYEwYh3j1dTgJu64Ey5qWn9Po9F
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressCoinsTransactionConfirmedEachConfirmation_data_item_minedInBlock'
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: cbd3dea703bd2bc78bca69ee61ca14e6ffcdd809d07ebbc3b8fea3c30ea38f33
          type: string
        currentConfirmations:
          description: Defines the number of currently received confirmations for
            the transaction.
          example: 8
          type: integer
        targetConfirmations:
          description: "Defines the number of confirmation transactions requested\
            \ as callbacks, i.e. the system can notify till the n-th confirmation."
          example: 12
          type: integer
        amount:
          description: Defines the amount of coins sent with the confirmed transaction.
          example: "0.0611"
          type: string
        unit:
          description: "Defines the unit of the transaction, e.g. BTC."
          example: BTC
          type: string
        direction:
          description: Defines whether the transaction is "incoming" or "outgoing".
          enum:
          - incoming
          - outgoing
          example: incoming
          type: string
      required:
      - address
      - amount
      - blockchain
      - currentConfirmations
      - direction
      - minedInBlock
      - network
      - targetConfirmations
      - transactionId
      - unit
      type: object
    AddressCoinsTransactionConfirmedEachConfirmation_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          currentConfirmations: 8
          minedInBlock:
            hash: dfe45f6724b550c281107ffaa5880cb280878fb4dbaa742aa21449f3d2340c13
            height: 667754
            timestamp: 1610365314
          amount: "0.0611"
          unit: BTC
          address: 15282N4BYEwYh3j1dTgJu64Ey5qWn9Po9F
          blockchain: bitcoin
          transactionId: cbd3dea703bd2bc78bca69ee61ca14e6ffcdd809d07ebbc3b8fea3c30ea38f33
          network: testnet
          targetConfirmations: 12
          direction: incoming
        event: ADDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: ADDRESS_COINS_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          type: string
        item:
          $ref: '#/components/schemas/AddressCoinsTransactionConfirmedEachConfirmation_data_item'
      required:
      - event
      - item
      - product
      type: object
    TransactionMined_data_item_minedInBlock:
      description: Refers to the specific block the transaction was mined in.
      example:
        hash: e9da0c8ce1861050c20f40fb660df4d13399f50b882e85bcd98126eb1173cc50
        height: 667900
        timestamp: 1610355613
      properties:
        height:
          description: Defines the number of blocks in the blockchain preceding this
            specific block.
          example: 667900
          type: integer
        hash:
          description: "Represents the hash of the block's header, i.e. an output\
            \ that has a fixed length."
          example: e9da0c8ce1861050c20f40fb660df4d13399f50b882e85bcd98126eb1173cc50
          type: string
        timestamp:
          description: Defines the exact date/time when this transaction was mined
            in seconds since Unix Epoch time.
          example: 1610355613
          type: integer
      required:
      - hash
      - height
      - timestamp
      type: object
    TransactionMined_data_item:
      description: Defines an `item` as one result.
      example:
        minedInBlock:
          hash: e9da0c8ce1861050c20f40fb660df4d13399f50b882e85bcd98126eb1173cc50
          height: 667900
          timestamp: 1610355613
        blockchain: bitcoin
        transactionId: e6439461e5bf8920e75740896d4b47730b844837295e8c3f2dbf441542aebcb6
        network: testnet
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: e6439461e5bf8920e75740896d4b47730b844837295e8c3f2dbf441542aebcb6
          type: string
        minedInBlock:
          $ref: '#/components/schemas/TransactionMined_data_item_minedInBlock'
      required:
      - blockchain
      - minedInBlock
      - network
      - transactionId
      type: object
    TransactionMined_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          minedInBlock:
            hash: e9da0c8ce1861050c20f40fb660df4d13399f50b882e85bcd98126eb1173cc50
            height: 667900
            timestamp: 1610355613
          blockchain: bitcoin
          transactionId: e6439461e5bf8920e75740896d4b47730b844837295e8c3f2dbf441542aebcb6
          network: testnet
        event: TRANSACTION_MINED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: TRANSACTION_MINED
          type: string
        item:
          $ref: '#/components/schemas/TransactionMined_data_item'
      required:
      - event
      - item
      - product
      type: object
    BlockMined_data_item:
      description: Defines an `item` as one result.
      example:
        blockchain: bitcoin
        hash: 00000000000000000006ddb5e854505f8b792122b0ac9469c07eb26db414f6fb
        network: testnet
        height: 570008
        timestamp: 1610365615
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        height:
          description: Defines the number of blocks in the blockchain preceding this
            specific block.
          example: 570008
          type: integer
        hash:
          description: "Represents the hash of the block's header, i.e. an output\
            \ that has a fixed length."
          example: 00000000000000000006ddb5e854505f8b792122b0ac9469c07eb26db414f6fb
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in seconds
            since Unix Epoch time.
          example: 1610365615
          type: integer
      required:
      - blockchain
      - hash
      - height
      - network
      - timestamp
      type: object
    BlockMined_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          blockchain: bitcoin
          hash: 00000000000000000006ddb5e854505f8b792122b0ac9469c07eb26db414f6fb
          network: testnet
          height: 570008
          timestamp: 1610365615
        event: BLOCK_MINED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: BLOCK_MINED
          type: string
        item:
          $ref: '#/components/schemas/BlockMined_data_item'
      required:
      - event
      - item
      - product
      type: object
    BlockHeightReached_data_item:
      description: Defines an `item` as one result.
      example:
        blockchain: bitcoin
        hash: 00000000000000000006ddb5e854505f8b792122b0ac9469c07eb26db414f6fb
        network: testnet
        height: 667900
        timestamp: 1610365615
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        height:
          description: Defines the number of blocks in the blockchain preceding this
            specific block.
          example: 667900
          type: integer
        hash:
          description: "Represents the hash of the block's header, i.e. an output\
            \ that has a fixed length."
          example: 00000000000000000006ddb5e854505f8b792122b0ac9469c07eb26db414f6fb
          type: string
        timestamp:
          description: Defines the exact date/time when this block was mined in seconds
            since Unix Epoch time.
          example: 1610365615
          type: integer
      required:
      - blockchain
      - hash
      - height
      - network
      - timestamp
      type: object
    BlockHeightReached_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          blockchain: bitcoin
          hash: 00000000000000000006ddb5e854505f8b792122b0ac9469c07eb26db414f6fb
          network: testnet
          height: 667900
          timestamp: 1610365615
        event: BLOCK_HEIGHT_REACHED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: BLOCK_HEIGHT_REACHED
          type: string
        item:
          $ref: '#/components/schemas/BlockHeightReached_data_item'
      required:
      - event
      - item
      - product
      type: object
    AddressInternalTransactionConfirmed_data_item_minedInBlock:
      description: Refers to the specific block the transaction was mined in.
      example:
        hash: 0xa787415dc7c7025a43b87542a57872d1127f30f95daa87097cf5f26ef79d6950
        height: 12567093
        timestamp: 1622797821
      properties:
        height:
          description: Defines the number of blocks in the blockchain preceding this
            specific block.
          example: 12567093
          type: integer
        hash:
          description: "Represents the hash of the block's header, i.e. an output\
            \ that has a fixed length."
          example: 0xa787415dc7c7025a43b87542a57872d1127f30f95daa87097cf5f26ef79d6950
          type: string
        timestamp:
          description: Defines the exact date/time when this transaction was mined
            in seconds since Unix Epoch time.
          example: 1622797821
          type: integer
      required:
      - hash
      - height
      - timestamp
      type: object
    AddressInternalTransactionConfirmed_data_item:
      description: Defines an `item` as one result.
      example:
        minedInBlock:
          hash: 0xa787415dc7c7025a43b87542a57872d1127f30f95daa87097cf5f26ef79d6950
          height: 12567093
          timestamp: 1622797821
        amount: "0.94891479938916527"
        unit: ETH
        address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
        blockchain: ethereum
        operationId: call_5_0
        network: mainnet
        parentTransactionId: 0xc3be8371b32fa2238c44271643446b14c87ff11b77d58f9a1bceb1d1253e79b2
        direction: outgoing
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: mainnet
          type: string
        address:
          description: Defines the specific address of the internal transaction.
          example: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressInternalTransactionConfirmed_data_item_minedInBlock'
        parentTransactionId:
          description: Defines the Parent Transaction's unique ID.
          example: 0xc3be8371b32fa2238c44271643446b14c87ff11b77d58f9a1bceb1d1253e79b2
          type: string
        operationId:
          description: Defines the specific operation's unique ID.
          example: call_5_0
          type: string
        amount:
          description: Defines the amount of coins sent with the confirmed transaction.
          example: "0.94891479938916527"
          type: string
        unit:
          description: "Defines the unit of the transaction, e.g. Gwei."
          example: ETH
          type: string
        direction:
          description: Defines whether the transaction is "incoming" or "outgoing".
          enum:
          - incoming
          - outgoing
          example: outgoing
          type: string
      required:
      - address
      - amount
      - blockchain
      - direction
      - minedInBlock
      - network
      - operationId
      - parentTransactionId
      - unit
      type: object
    AddressInternalTransactionConfirmed_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_DATA
        item:
          minedInBlock:
            hash: 0xa787415dc7c7025a43b87542a57872d1127f30f95daa87097cf5f26ef79d6950
            height: 12567093
            timestamp: 1622797821
          amount: "0.94891479938916527"
          unit: ETH
          address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
          blockchain: ethereum
          operationId: call_5_0
          network: mainnet
          parentTransactionId: 0xc3be8371b32fa2238c44271643446b14c87ff11b77d58f9a1bceb1d1253e79b2
          direction: outgoing
        event: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_DATA
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED
          type: string
        item:
          $ref: '#/components/schemas/AddressInternalTransactionConfirmed_data_item'
      required:
      - event
      - item
      - product
      type: object
    AddressInternalTransactionConfirmedEachConfirmation_data_item_minedInBlock:
      description: Refers to the specific block the transaction was mined in.
      example:
        hash: 0x936a34ef544e6fc9fc5f68fb086b9e8ea0e5eca52cb45cb67b27d174bccc35a5
        height: 12566992
        timestamp: 1622796751
      properties:
        height:
          description: Defines the number of blocks in the blockchain preceding this
            specific block.
          example: 12566992
          type: integer
        hash:
          description: "Represents the hash of the block's header, i.e. an output\
            \ that has a fixed length."
          example: 0x936a34ef544e6fc9fc5f68fb086b9e8ea0e5eca52cb45cb67b27d174bccc35a5
          type: string
        timestamp:
          description: Defines the exact date/time when this transaction was mined
            in seconds since Unix Epoch time.
          example: 1622796751
          type: integer
      required:
      - hash
      - height
      - timestamp
      type: object
    AddressInternalTransactionConfirmedEachConfirmation_data_item:
      description: Defines an `item` as one result.
      example:
        currentConfirmations: 2
        minedInBlock:
          hash: 0x936a34ef544e6fc9fc5f68fb086b9e8ea0e5eca52cb45cb67b27d174bccc35a5
          height: 12566992
          timestamp: 1622796751
        amount: "0.05710541741945074"
        unit: ETH
        address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
        blockchain: ethereum
        operationId: call_1_0_1_0_3_0
        network: mainnet
        parentTransactionId: 0x5fc77216fdfb8c966387030be7bda4bacce0232f7115722ef5b228a223974784
        targetConfirmations: 3
        direction: outgoing
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: mainnet
          type: string
        address:
          description: Defines the specific address of the internal transaction.
          example: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressInternalTransactionConfirmedEachConfirmation_data_item_minedInBlock'
        parentTransactionId:
          description: Defines the Parent Transaction's unique ID.
          example: 0x5fc77216fdfb8c966387030be7bda4bacce0232f7115722ef5b228a223974784
          type: string
        operationId:
          description: Defines the specific operation's unique ID.
          example: call_1_0_1_0_3_0
          type: string
        currentConfirmations:
          description: Defines the number of currently received confirmations for
            the transaction.
          example: 2
          type: integer
        targetConfirmations:
          description: "Defines the number of confirmation transactions requested\
            \ as callbacks, i.e. the system can notify till the n-th confirmation."
          example: 3
          type: integer
        amount:
          description: Defines the amount of coins sent with the confirmed transaction.
          example: "0.05710541741945074"
          type: string
        unit:
          description: "Defines the unit of the transaction, e.g. Gwei."
          example: ETH
          type: string
        direction:
          description: Defines whether the transaction is "incoming" or "outgoing".
          enum:
          - incoming
          - outgoing
          example: outgoing
          type: string
      required:
      - address
      - amount
      - blockchain
      - currentConfirmations
      - direction
      - minedInBlock
      - network
      - operationId
      - parentTransactionId
      - targetConfirmations
      - unit
      type: object
    AddressInternalTransactionConfirmedEachConfirmation_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_DATA
        item:
          currentConfirmations: 2
          minedInBlock:
            hash: 0x936a34ef544e6fc9fc5f68fb086b9e8ea0e5eca52cb45cb67b27d174bccc35a5
            height: 12566992
            timestamp: 1622796751
          amount: "0.05710541741945074"
          unit: ETH
          address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
          blockchain: ethereum
          operationId: call_1_0_1_0_3_0
          network: mainnet
          parentTransactionId: 0x5fc77216fdfb8c966387030be7bda4bacce0232f7115722ef5b228a223974784
          targetConfirmations: 3
          direction: outgoing
        event: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_DATA
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: ADDRESS_INTERNAL_TRANSACTION_CONFIRMED_EACH_CONFIRMATION
          type: string
        item:
          $ref: '#/components/schemas/AddressInternalTransactionConfirmedEachConfirmation_data_item'
      required:
      - event
      - item
      - product
      type: object
    ConfirmedCoinsTransactionForCertainAmountOrHigher_data_item:
      description: Defines an `item` as one result.
      example:
        minedInBlock:
          hash: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
          height: 667861
          timestamp: 1610365213
        amount: "0.0315"
        unit: BTC
        blockchain: bitcoin
        transactionId: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
        network: testnet
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressCoinsTransactionConfirmed_data_item_minedInBlock'
        amount:
          description: Defines the amount of coins sent with the confirmed transaction.
          example: "0.0315"
          type: string
        unit:
          description: "Defines the unit of the transaction, e.g. BTC."
          example: BTC
          type: string
      required:
      - amount
      - blockchain
      - minedInBlock
      - network
      - transactionId
      - unit
      type: object
    ConfirmedCoinsTransactionForCertainAmountOrHigher_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          minedInBlock:
            hash: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
            height: 667861
            timestamp: 1610365213
          amount: "0.0315"
          unit: BTC
          blockchain: bitcoin
          transactionId: b00d27cccd5e4f4fa1b28824d9a1e5fef88e6c37cdeb09e37eb39aa1d3d63448
          network: testnet
        event: CONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: CONFIRMED_COINS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          type: string
        item:
          $ref: '#/components/schemas/ConfirmedCoinsTransactionForCertainAmountOrHigher_data_item'
      required:
      - event
      - item
      - product
      type: object
    ConfirmedTokensTransactionForCertainAmountOrHigher_data_item:
      description: Defines an `item` as one result.
      example:
        minedInBlock:
          hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
          height: 657915
          timestamp: 1586365500
        blockchain: ethereum
        tokenType: ERC-20
        transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
        network: ropsten
        token: null
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"mordor\" are test networks."
          example: ropsten
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressTokensTransactionConfirmed_data_item_minedInBlock'
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          type: string
        tokenType:
          description: "Defines the type of token sent with the transaction, e.g.\
            \ ERC 20."
          enum:
          - ERC-20
          - ERC-721
          - BEP-20
          example: ERC-20
          type: string
        token:
          $ref: '#/components/schemas/ConfirmedTokensTransactionForCertainAmountOrHigherToken'
      required:
      - blockchain
      - minedInBlock
      - network
      - token
      - tokenType
      - transactionId
      type: object
    ConfirmedTokensTransactionForCertainAmountOrHigher_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          minedInBlock:
            hash: 269b0de44db95beddb6aecc520b375ba8f91f3dc5558a24aa4c26979eb00c7e2
            height: 657915
            timestamp: 1586365500
          blockchain: ethereum
          tokenType: ERC-20
          transactionId: 0xbe38781783b1b9d480219255ff98e20335a39e13979a66112efa33f05fde0a33
          network: ropsten
          token: null
        event: CONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: CONFIRMED_TOKENS_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          type: string
        item:
          $ref: '#/components/schemas/ConfirmedTokensTransactionForCertainAmountOrHigher_data_item'
      required:
      - event
      - item
      - product
      type: object
    ConfirmedInternalTransactionForCertainAmountOrHigher_data_item:
      description: Defines an `item` as one result.
      example:
        minedInBlock:
          hash: 0xa787415dc7c7025a43b87542a57872d1127f30f95daa87097cf5f26ef79d6950
          height: 12567093
          timestamp: 1622797821
        amount: "0.94891479938916527"
        unit: ETH
        address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
        blockchain: ethereum
        operationId: call_5_0
        network: ropsten
        parentTransactionId: 0xc3be8371b32fa2238c44271643446b14c87ff11b77d58f9a1bceb1d1253e79b2
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: ethereum
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\",\"mordor\" are test networks."
          example: ropsten
          type: string
        address:
          description: Defines the specific address of the internal transaction.
          example: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
          type: string
        minedInBlock:
          $ref: '#/components/schemas/AddressInternalTransactionConfirmed_data_item_minedInBlock'
        parentTransactionId:
          description: Defines the Parent Transaction's unique ID.
          example: 0xc3be8371b32fa2238c44271643446b14c87ff11b77d58f9a1bceb1d1253e79b2
          type: string
        operationId:
          description: Defines the specific operation's unique ID.
          example: call_5_0
          type: string
        amount:
          description: Defines the amount of coins sent with the confirmed transaction.
          example: "0.94891479938916527"
          type: string
        unit:
          description: "Defines the unit of the transaction, e.g. Gwei."
          example: ETH
          type: string
      required:
      - address
      - amount
      - blockchain
      - minedInBlock
      - network
      - operationId
      - parentTransactionId
      - unit
      type: object
    ConfirmedInternalTransactionForCertainAmountOrHigher_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_EVENTS
        item:
          minedInBlock:
            hash: 0xa787415dc7c7025a43b87542a57872d1127f30f95daa87097cf5f26ef79d6950
            height: 12567093
            timestamp: 1622797821
          amount: "0.94891479938916527"
          unit: ETH
          address: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
          blockchain: ethereum
          operationId: call_5_0
          network: ropsten
          parentTransactionId: 0xc3be8371b32fa2238c44271643446b14c87ff11b77d58f9a1bceb1d1253e79b2
        event: CONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_EVENTS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: CONFIRMED_INTERNAL_TRANSACTION_FOR_CERTAIN_AMOUNT_OR_HIGHER
          type: string
        item:
          $ref: '#/components/schemas/ConfirmedInternalTransactionForCertainAmountOrHigher_data_item'
      required:
      - event
      - item
      - product
      type: object
    CoinsForwardingSuccess_data_item:
      description: Defines an `item` as one result.
      example:
        spentFeesUnit: BTC
        forwardedUnit: BTC
        spentFeesAmount: "0.00022827"
        blockchain: bitcoin
        forwardingTransactionId: 2241b5264fac8acb92e9fc597035b99cdd22f6578d63c6f52b099729f7c4f979
        fromAddress: mmd963W1fECjLyaDCHcioSCZYHkRwjkGST
        forwardedAmount: "00059441"
        toAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
        network: testnet
        triggerTransactionId: 86a7546bde4ac28b34504909d138592a6d6fc1277ea1f8f2f9c75dc04bdf3b7b
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        fromAddress:
          description: Represents the hash of the address that provides the coins.
          example: mmd963W1fECjLyaDCHcioSCZYHkRwjkGST
          type: string
        toAddress:
          description: Represents the hash of the address to forward the coins to.
          example: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
          type: string
        forwardedAmount:
          description: Represents the amount of coins that have been forwarded.
          example: "00059441"
          type: string
        forwardedUnit:
          description: "Represents the unit of coins that have been forwarded, e.g.\
            \ BTC."
          example: BTC
          type: string
        spentFeesAmount:
          description: Represents the amount of the fee spent for the coins to be
            forwarded.
          example: "0.00022827"
          type: string
        spentFeesUnit:
          description: "Represents the unit of the fee spent for the coins to be forwarded,\
            \ e.g. BTC."
          example: BTC
          type: string
        triggerTransactionId:
          description: Defines the unique Transaction ID that triggered the coin forwarding.
          example: 86a7546bde4ac28b34504909d138592a6d6fc1277ea1f8f2f9c75dc04bdf3b7b
          type: string
        forwardingTransactionId:
          description: Defines the unique Transaction ID that forwarded the coins.
          example: 2241b5264fac8acb92e9fc597035b99cdd22f6578d63c6f52b099729f7c4f979
          type: string
      required:
      - blockchain
      - forwardedAmount
      - forwardedUnit
      - forwardingTransactionId
      - fromAddress
      - network
      - spentFeesAmount
      - spentFeesUnit
      - toAddress
      - triggerTransactionId
      type: object
    CoinsForwardingSuccess_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_AUTOMATIONS
        item:
          spentFeesUnit: BTC
          forwardedUnit: BTC
          spentFeesAmount: "0.00022827"
          blockchain: bitcoin
          forwardingTransactionId: 2241b5264fac8acb92e9fc597035b99cdd22f6578d63c6f52b099729f7c4f979
          fromAddress: mmd963W1fECjLyaDCHcioSCZYHkRwjkGST
          forwardedAmount: "00059441"
          toAddress: ms4KNsbNpoU8g424pzmEjbkFbfAHae1msB
          network: testnet
          triggerTransactionId: 86a7546bde4ac28b34504909d138592a6d6fc1277ea1f8f2f9c75dc04bdf3b7b
        event: COINS_FORWARDING_SUCCESS
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_AUTOMATIONS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: COINS_FORWARDING_SUCCESS
          type: string
        item:
          $ref: '#/components/schemas/CoinsForwardingSuccess_data_item'
      required:
      - event
      - item
      - product
      type: object
    CoinsForwardingFail_data_item:
      description: Defines an `item` as one result.
      example:
        blockchain: bitcoin
        errorMessage: Address not found
        errorCode: blockchain_data_address_not_found
        fromAddress: 38RTQQ8915tEmKFMjpPJPfrh9yV5HbJCRb
        toAddress: 1PkLrGoEGiGdmqNXX8daYNFvVVTjmWjc7m
        network: testnet
        triggerTransactionId: 7e56c9cfaec36c77049ce5298bc153bb03b0b6b5dae760a62915617015f8e2a6
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        fromAddress:
          description: Represents the hash of the address that provides the coins.
          example: 38RTQQ8915tEmKFMjpPJPfrh9yV5HbJCRb
          type: string
        toAddress:
          description: Represents the hash of the address to forward the coins to.
          example: 1PkLrGoEGiGdmqNXX8daYNFvVVTjmWjc7m
          type: string
        triggerTransactionId:
          description: Defines the unique Transaction ID that triggered the coin forwarding.
          example: 7e56c9cfaec36c77049ce5298bc153bb03b0b6b5dae760a62915617015f8e2a6
          type: string
        errorCode:
          description: Represents the error code received for the failed coin forwarding.
          enum:
          - NOT_ENOUGH_CREDITS
          - WRONG_ADDRESS_CREDENTIALS
          example: blockchain_data_address_not_found
          type: string
        errorMessage:
          description: Represents the error message received for the failed coin forwarding.
          example: Address not found
          type: string
      required:
      - blockchain
      - errorCode
      - errorMessage
      - fromAddress
      - network
      - toAddress
      - triggerTransactionId
      type: object
    CoinsForwardingFail_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_AUTOMATIONS
        item:
          blockchain: bitcoin
          errorMessage: Address not found
          errorCode: blockchain_data_address_not_found
          fromAddress: 38RTQQ8915tEmKFMjpPJPfrh9yV5HbJCRb
          toAddress: 1PkLrGoEGiGdmqNXX8daYNFvVVTjmWjc7m
          network: testnet
          triggerTransactionId: 7e56c9cfaec36c77049ce5298bc153bb03b0b6b5dae760a62915617015f8e2a6
        event: COINS_FORWARDING_FAIL
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_AUTOMATIONS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: COINS_FORWARDING_FAIL
          type: string
        item:
          $ref: '#/components/schemas/CoinsForwardingFail_data_item'
      required:
      - event
      - item
      - product
      type: object
    TokensForwardingSuccess_data_item:
      description: Defines an `item` as one result.
      example:
        spentFeesUnit: BTC
        spentFeesAmount: "0.00013601"
        blockchain: bitcoin
        forwardingTransactionId: b15ab5bbaf5107d551ae1b50181f4c55959205c4ff843e3c10d86d00e690fc72
        fromAddress: mySJoZ6wsjrKXZQRWpGoeBW5KkdKGL79Xz
        tokenType: OMNI
        toAddress: mmd963W1fECjLyaDCHcioSCZYHkRwjkGST
        network: testnet
        triggerTransactionId: 6ed1f1c8f2887a78ee8c45a975d928ca63eafc7b63def56324606ddd3cc9854f
        token: null
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\" are test networks."
          example: testnet
          type: string
        fromAddress:
          description: Represents the hash of the address that provides the tokens.
          example: mySJoZ6wsjrKXZQRWpGoeBW5KkdKGL79Xz
          type: string
        toAddress:
          description: Represents the hash of the address to forward the tokens to.
          example: mmd963W1fECjLyaDCHcioSCZYHkRwjkGST
          type: string
        spentFeesAmount:
          description: Represents the amount of the fee spent for the tokens to be
            forwarded.
          example: "0.00013601"
          type: string
        spentFeesUnit:
          description: "Represents the unit of the fee spent for the tokens to be\
            \ forwarded, e.g. BTC."
          example: BTC
          type: string
        triggerTransactionId:
          description: Defines the unique Transaction ID that triggered the token
            forwarding.
          example: 6ed1f1c8f2887a78ee8c45a975d928ca63eafc7b63def56324606ddd3cc9854f
          type: string
        forwardingTransactionId:
          description: Defines the unique Transaction ID that forwarded the tokens.
          example: b15ab5bbaf5107d551ae1b50181f4c55959205c4ff843e3c10d86d00e690fc72
          type: string
        tokenType:
          description: "Defines the type of token sent with the transaction, e.g.\
            \ ERC 20."
          enum:
          - ERC-20
          - ERC-721
          - OMNI
          example: OMNI
          type: string
        token:
          $ref: '#/components/schemas/TokensForwardingSuccessToken'
      required:
      - blockchain
      - forwardingTransactionId
      - fromAddress
      - network
      - spentFeesAmount
      - spentFeesUnit
      - toAddress
      - token
      - tokenType
      - triggerTransactionId
      type: object
    TokensForwardingSuccess_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_AUTOMATIONS
        item:
          spentFeesUnit: BTC
          spentFeesAmount: "0.00013601"
          blockchain: bitcoin
          forwardingTransactionId: b15ab5bbaf5107d551ae1b50181f4c55959205c4ff843e3c10d86d00e690fc72
          fromAddress: mySJoZ6wsjrKXZQRWpGoeBW5KkdKGL79Xz
          tokenType: OMNI
          toAddress: mmd963W1fECjLyaDCHcioSCZYHkRwjkGST
          network: testnet
          triggerTransactionId: 6ed1f1c8f2887a78ee8c45a975d928ca63eafc7b63def56324606ddd3cc9854f
          token: null
        event: TOKENS_FORWARDING_SUCCESS
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_AUTOMATIONS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: TOKENS_FORWARDING_SUCCESS
          type: string
        item:
          $ref: '#/components/schemas/TokensForwardingSuccess_data_item'
      required:
      - event
      - item
      - product
      type: object
    TokensForwardingFail_data_item:
      description: Defines an `item` as one result.
      example:
        blockchain: bitcoin
        errorMessage: You have insufficient credits.
        errorCode: FEE_ADDRESS_OUT_OF_FUNDS
        fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
        toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
        network: testnet
        triggerTransactionId: ba1a4e661d36457abc46ea0effef0105f639912119fc64df8fb866118ce7c0d8
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: bitcoin
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: testnet
          type: string
        fromAddress:
          description: Represents the hash of the address that provides the tokens.
          example: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
          type: string
        toAddress:
          description: Represents the hash of the address to forward the tokens to.
          example: mnumE76iEKN47bUsdni85oped5D1fRwKWi
          type: string
        triggerTransactionId:
          description: Defines the unique Transaction ID that triggered the token
            forwarding.
          example: ba1a4e661d36457abc46ea0effef0105f639912119fc64df8fb866118ce7c0d8
          type: string
        errorCode:
          description: Represents the error code received for the failed token forwarding.
          enum:
          - NOT_ENOUGH_CREDITS
          - FEE_ADDRESS_OUT_OF_FUNDS
          - WRONG_ADDRESS_CREDENTIALS
          example: FEE_ADDRESS_OUT_OF_FUNDS
          type: string
        errorMessage:
          description: Represents the error message received for the failed token
            forwarding.
          example: You have insufficient credits.
          type: string
      required:
      - blockchain
      - errorCode
      - errorMessage
      - fromAddress
      - network
      - toAddress
      - triggerTransactionId
      type: object
    TokensForwardingFail_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_AUTOMATIONS
        item:
          blockchain: bitcoin
          errorMessage: You have insufficient credits.
          errorCode: FEE_ADDRESS_OUT_OF_FUNDS
          fromAddress: mizRduUBKEbJ6uzYJUegPh78gEGgM3WjAr
          toAddress: mnumE76iEKN47bUsdni85oped5D1fRwKWi
          network: testnet
          triggerTransactionId: ba1a4e661d36457abc46ea0effef0105f639912119fc64df8fb866118ce7c0d8
        event: TOKENS_FORWARDING_FAIL
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_AUTOMATIONS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: TOKENS_FORWARDING_FAIL
          type: string
        item:
          $ref: '#/components/schemas/TokensForwardingFail_data_item'
      required:
      - event
      - item
      - product
      type: object
    BroadcastTransactionSuccess_data_item:
      description: Defines an `item` as one result.
      example:
        blockchain: Bitcoin/Ethereum (whichever applicable)
        transactionId: 347d96855d41b77f1e23048fff11c18e9fe699ee69b0b402338f34189734e0a2
        network: Testnet/Mainnet (whichever applicable)
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: Bitcoin/Ethereum (whichever applicable)
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: Testnet/Mainnet (whichever applicable)
          type: string
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: 347d96855d41b77f1e23048fff11c18e9fe699ee69b0b402338f34189734e0a2
          type: string
      required:
      - blockchain
      - network
      - transactionId
      type: object
    BroadcastTransactionSuccess_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_TOOLS
        item:
          blockchain: Bitcoin/Ethereum (whichever applicable)
          transactionId: 347d96855d41b77f1e23048fff11c18e9fe699ee69b0b402338f34189734e0a2
          network: Testnet/Mainnet (whichever applicable)
        event: BROADCAST_TRANSACTION_SUCCESS
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_TOOLS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: BROADCAST_TRANSACTION_SUCCESS
          type: string
        item:
          $ref: '#/components/schemas/BroadcastTransactionSuccess_data_item'
      required:
      - event
      - item
      - product
      type: object
    BroadcastTransactionFail_data_item:
      description: Defines an `item` as one result.
      example:
        blockchain: Bitcoin/Ethereum (whichever applicable)
        errorMessage: Transaction already in block chain
        transactionId: d83c75dd0f73425a1a85023ba25bc7ff47333c823a0ea19fac28d4abe59fd612
        network: Testnet/Mainnet (whichever applicable)
      properties:
        blockchain:
          description: "Represents the specific blockchain protocol name, e.g. Ethereum,\
            \ Bitcoin, etc."
          example: Bitcoin/Ethereum (whichever applicable)
          type: string
        network:
          description: "Represents the name of the blockchain network used; blockchain\
            \ networks are usually identical as technology and software, but they\
            \ differ in data, e.g. - \"mainnet\" is the live network with actual data\
            \ while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks."
          example: Testnet/Mainnet (whichever applicable)
          type: string
        transactionId:
          description: "Defines the unique ID of the specific transaction, i.e. its\
            \ identification number."
          example: d83c75dd0f73425a1a85023ba25bc7ff47333c823a0ea19fac28d4abe59fd612
          type: string
        errorMessage:
          description: Represents the error message received for the transaction.
          example: Transaction already in block chain
          type: string
      required:
      - blockchain
      - errorMessage
      - network
      - transactionId
      type: object
    BroadcastTransactionFail_data:
      description: "Specifies all data, as attributes, included into the callback\
        \ notification, which depends on the `event`."
      example:
        product: BLOCKCHAIN_TOOLS
        item:
          blockchain: Bitcoin/Ethereum (whichever applicable)
          errorMessage: Transaction already in block chain
          transactionId: d83c75dd0f73425a1a85023ba25bc7ff47333c823a0ea19fac28d4abe59fd612
          network: Testnet/Mainnet (whichever applicable)
        event: BROADCAST_TRANSACTION_FAIL
      properties:
        product:
          description: Represents the Crypto APIs 2.0 product which sends the callback.
          example: BLOCKCHAIN_TOOLS
          type: string
        event:
          description: "Defines the specific event, for which a callback subscription\
            \ is set."
          example: BROADCAST_TRANSACTION_FAIL
          type: string
        item:
          $ref: '#/components/schemas/BroadcastTransactionFail_data_item'
      required:
      - event
      - item
      - product
      type: object
  securitySchemes:
    ApiKey:
      description: API Key
      in: header
      name: x-api-key
      type: apiKey
x-tagGroups:
- name: General Information
  tags:
  - Overview
  - Getting Started
  - Authentication
  - What we support
  - Errors and API status
  - Data Flow Limiting
  - Standards and Conventions
  - Callbacks
  - API Versioning
- name: REST APIs
  tags:
  - Wallet as a Service
  - Blockchain Data
  - Blockchain Events
  - Blockchain Automations
  - Blockchain Tools
  - Market Data
- name: Wallet as a Service
  tags:
  - Generating
  - Transactions
  - Informative
- name: Blockchain Data
  tags:
  - Unified Endpoints
  - Tokens
  - Internal
  - HD Wallets
  - XRP (Ripple)
  - Zilliqa
- name: Blockchain Events
  tags:
  - Create Subscriptions for
  - Manage Subscriptions
  - Callback Data
- name: Blockchain Automations
  tags:
  - Automatic Coins Forwarding
  - Automatic Tokens Forwarding
- name: Blockchain Tools
  tags:
  - Features
- name: Market Data
  tags:
  - Metadata
  - Exchange Rates
  - Assets
