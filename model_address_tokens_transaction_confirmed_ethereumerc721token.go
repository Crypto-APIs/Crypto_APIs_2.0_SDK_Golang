/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// AddressTokensTransactionConfirmedEthereumerc721token ethereumERC721Token
type AddressTokensTransactionConfirmedEthereumerc721token struct {
	// Specifies the name of the token.
	Name string `json:"name"`
	// Specifies an identifier of the token, where up to five alphanumeric characters can be used for it.
	Symbol string `json:"symbol"`
	// Specifies the ID of the token.
	TokenId string `json:"tokenId"`
	// Specifies the address of the contract.
	ContractAddress string `json:"contractAddress"`
}

// NewAddressTokensTransactionConfirmedEthereumerc721token instantiates a new AddressTokensTransactionConfirmedEthereumerc721token object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressTokensTransactionConfirmedEthereumerc721token(name string, symbol string, tokenId string, contractAddress string) *AddressTokensTransactionConfirmedEthereumerc721token {
	this := AddressTokensTransactionConfirmedEthereumerc721token{}
	this.Name = name
	this.Symbol = symbol
	this.TokenId = tokenId
	this.ContractAddress = contractAddress
	return &this
}

// NewAddressTokensTransactionConfirmedEthereumerc721tokenWithDefaults instantiates a new AddressTokensTransactionConfirmedEthereumerc721token object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressTokensTransactionConfirmedEthereumerc721tokenWithDefaults() *AddressTokensTransactionConfirmedEthereumerc721token {
	this := AddressTokensTransactionConfirmedEthereumerc721token{}
	return &this
}

// GetName returns the Name field value
func (o *AddressTokensTransactionConfirmedEthereumerc721token) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddressTokensTransactionConfirmedEthereumerc721token) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddressTokensTransactionConfirmedEthereumerc721token) SetName(v string) {
	o.Name = v
}

// GetSymbol returns the Symbol field value
func (o *AddressTokensTransactionConfirmedEthereumerc721token) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *AddressTokensTransactionConfirmedEthereumerc721token) GetSymbolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *AddressTokensTransactionConfirmedEthereumerc721token) SetSymbol(v string) {
	o.Symbol = v
}

// GetTokenId returns the TokenId field value
func (o *AddressTokensTransactionConfirmedEthereumerc721token) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *AddressTokensTransactionConfirmedEthereumerc721token) GetTokenIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *AddressTokensTransactionConfirmedEthereumerc721token) SetTokenId(v string) {
	o.TokenId = v
}

// GetContractAddress returns the ContractAddress field value
func (o *AddressTokensTransactionConfirmedEthereumerc721token) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *AddressTokensTransactionConfirmedEthereumerc721token) GetContractAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *AddressTokensTransactionConfirmedEthereumerc721token) SetContractAddress(v string) {
	o.ContractAddress = v
}

func (o AddressTokensTransactionConfirmedEthereumerc721token) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	return json.Marshal(toSerialize)
}

type NullableAddressTokensTransactionConfirmedEthereumerc721token struct {
	value *AddressTokensTransactionConfirmedEthereumerc721token
	isSet bool
}

func (v NullableAddressTokensTransactionConfirmedEthereumerc721token) Get() *AddressTokensTransactionConfirmedEthereumerc721token {
	return v.value
}

func (v *NullableAddressTokensTransactionConfirmedEthereumerc721token) Set(val *AddressTokensTransactionConfirmedEthereumerc721token) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressTokensTransactionConfirmedEthereumerc721token) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressTokensTransactionConfirmedEthereumerc721token) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressTokensTransactionConfirmedEthereumerc721token(val *AddressTokensTransactionConfirmedEthereumerc721token) *NullableAddressTokensTransactionConfirmedEthereumerc721token {
	return &NullableAddressTokensTransactionConfirmedEthereumerc721token{value: val, isSet: true}
}

func (v NullableAddressTokensTransactionConfirmedEthereumerc721token) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressTokensTransactionConfirmedEthereumerc721token) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


