/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ConfirmedInternalTransactionForCertainAmountOrHigherData Specifies all data, as attributes, included into the callback notification, which depends on the `event`.
type ConfirmedInternalTransactionForCertainAmountOrHigherData struct {
	// Represents the Crypto APIs 2.0 product which sends the callback.
	Product string `json:"product"`
	// Defines the specific event, for which a callback subscription is set.
	Event string `json:"event"`
	Item ConfirmedInternalTransactionForCertainAmountOrHigherDataItem `json:"item"`
}

// NewConfirmedInternalTransactionForCertainAmountOrHigherData instantiates a new ConfirmedInternalTransactionForCertainAmountOrHigherData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfirmedInternalTransactionForCertainAmountOrHigherData(product string, event string, item ConfirmedInternalTransactionForCertainAmountOrHigherDataItem) *ConfirmedInternalTransactionForCertainAmountOrHigherData {
	this := ConfirmedInternalTransactionForCertainAmountOrHigherData{}
	this.Product = product
	this.Event = event
	this.Item = item
	return &this
}

// NewConfirmedInternalTransactionForCertainAmountOrHigherDataWithDefaults instantiates a new ConfirmedInternalTransactionForCertainAmountOrHigherData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfirmedInternalTransactionForCertainAmountOrHigherDataWithDefaults() *ConfirmedInternalTransactionForCertainAmountOrHigherData {
	this := ConfirmedInternalTransactionForCertainAmountOrHigherData{}
	return &this
}

// GetProduct returns the Product field value
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) GetProduct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) GetProductOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) SetProduct(v string) {
	o.Product = v
}

// GetEvent returns the Event field value
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) SetEvent(v string) {
	o.Event = v
}

// GetItem returns the Item field value
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) GetItem() ConfirmedInternalTransactionForCertainAmountOrHigherDataItem {
	if o == nil {
		var ret ConfirmedInternalTransactionForCertainAmountOrHigherDataItem
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) GetItemOk() (*ConfirmedInternalTransactionForCertainAmountOrHigherDataItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *ConfirmedInternalTransactionForCertainAmountOrHigherData) SetItem(v ConfirmedInternalTransactionForCertainAmountOrHigherDataItem) {
	o.Item = v
}

func (o ConfirmedInternalTransactionForCertainAmountOrHigherData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["product"] = o.Product
	}
	if true {
		toSerialize["event"] = o.Event
	}
	if true {
		toSerialize["item"] = o.Item
	}
	return json.Marshal(toSerialize)
}

type NullableConfirmedInternalTransactionForCertainAmountOrHigherData struct {
	value *ConfirmedInternalTransactionForCertainAmountOrHigherData
	isSet bool
}

func (v NullableConfirmedInternalTransactionForCertainAmountOrHigherData) Get() *ConfirmedInternalTransactionForCertainAmountOrHigherData {
	return v.value
}

func (v *NullableConfirmedInternalTransactionForCertainAmountOrHigherData) Set(val *ConfirmedInternalTransactionForCertainAmountOrHigherData) {
	v.value = val
	v.isSet = true
}

func (v NullableConfirmedInternalTransactionForCertainAmountOrHigherData) IsSet() bool {
	return v.isSet
}

func (v *NullableConfirmedInternalTransactionForCertainAmountOrHigherData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfirmedInternalTransactionForCertainAmountOrHigherData(val *ConfirmedInternalTransactionForCertainAmountOrHigherData) *NullableConfirmedInternalTransactionForCertainAmountOrHigherData {
	return &NullableConfirmedInternalTransactionForCertainAmountOrHigherData{value: val, isSet: true}
}

func (v NullableConfirmedInternalTransactionForCertainAmountOrHigherData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfirmedInternalTransactionForCertainAmountOrHigherData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


