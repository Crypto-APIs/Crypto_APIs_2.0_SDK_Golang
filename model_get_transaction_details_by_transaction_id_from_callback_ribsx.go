/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// GetTransactionDetailsByTransactionIDFromCallbackRIBSX XRP
type GetTransactionDetailsByTransactionIDFromCallbackRIBSX struct {
	// Represents additional data that may be needed.
	AdditionalData string `json:"additionalData"`
	// Defines the destination tag value.
	DestinationTag *int64 `json:"destinationTag,omitempty"`
	Offer GetXRPRippleTransactionDetailsByTransactionIDRIOffer `json:"offer"`
	Receive GetXRPRippleTransactionDetailsByTransactionIDRIReceive `json:"receive"`
	// Defines the transaction input's sequence as an integer, which is is used when transactions are replaced with newer versions before LockTime.
	Sequence int64 `json:"sequence"`
	// Defines the status of the transaction.
	Status string `json:"status"`
	// Defines the type of the transaction.
	Type string `json:"type"`
	Value GetTransactionDetailsByTransactionIDFromCallbackRIBSXValue `json:"value"`
}

// NewGetTransactionDetailsByTransactionIDFromCallbackRIBSX instantiates a new GetTransactionDetailsByTransactionIDFromCallbackRIBSX object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTransactionDetailsByTransactionIDFromCallbackRIBSX(additionalData string, offer GetXRPRippleTransactionDetailsByTransactionIDRIOffer, receive GetXRPRippleTransactionDetailsByTransactionIDRIReceive, sequence int64, status string, type_ string, value GetTransactionDetailsByTransactionIDFromCallbackRIBSXValue) *GetTransactionDetailsByTransactionIDFromCallbackRIBSX {
	this := GetTransactionDetailsByTransactionIDFromCallbackRIBSX{}
	this.AdditionalData = additionalData
	this.Offer = offer
	this.Receive = receive
	this.Sequence = sequence
	this.Status = status
	this.Type = type_
	this.Value = value
	return &this
}

// NewGetTransactionDetailsByTransactionIDFromCallbackRIBSXWithDefaults instantiates a new GetTransactionDetailsByTransactionIDFromCallbackRIBSX object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTransactionDetailsByTransactionIDFromCallbackRIBSXWithDefaults() *GetTransactionDetailsByTransactionIDFromCallbackRIBSX {
	this := GetTransactionDetailsByTransactionIDFromCallbackRIBSX{}
	return &this
}

// GetAdditionalData returns the AdditionalData field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetAdditionalData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value
// and a boolean to check if the value has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetAdditionalDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalData, true
}

// SetAdditionalData sets field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) SetAdditionalData(v string) {
	o.AdditionalData = v
}

// GetDestinationTag returns the DestinationTag field value if set, zero value otherwise.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetDestinationTag() int64 {
	if o == nil || o.DestinationTag == nil {
		var ret int64
		return ret
	}
	return *o.DestinationTag
}

// GetDestinationTagOk returns a tuple with the DestinationTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetDestinationTagOk() (*int64, bool) {
	if o == nil || o.DestinationTag == nil {
		return nil, false
	}
	return o.DestinationTag, true
}

// HasDestinationTag returns a boolean if a field has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) HasDestinationTag() bool {
	if o != nil && o.DestinationTag != nil {
		return true
	}

	return false
}

// SetDestinationTag gets a reference to the given int64 and assigns it to the DestinationTag field.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) SetDestinationTag(v int64) {
	o.DestinationTag = &v
}

// GetOffer returns the Offer field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetOffer() GetXRPRippleTransactionDetailsByTransactionIDRIOffer {
	if o == nil {
		var ret GetXRPRippleTransactionDetailsByTransactionIDRIOffer
		return ret
	}

	return o.Offer
}

// GetOfferOk returns a tuple with the Offer field value
// and a boolean to check if the value has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetOfferOk() (*GetXRPRippleTransactionDetailsByTransactionIDRIOffer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offer, true
}

// SetOffer sets field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) SetOffer(v GetXRPRippleTransactionDetailsByTransactionIDRIOffer) {
	o.Offer = v
}

// GetReceive returns the Receive field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetReceive() GetXRPRippleTransactionDetailsByTransactionIDRIReceive {
	if o == nil {
		var ret GetXRPRippleTransactionDetailsByTransactionIDRIReceive
		return ret
	}

	return o.Receive
}

// GetReceiveOk returns a tuple with the Receive field value
// and a boolean to check if the value has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetReceiveOk() (*GetXRPRippleTransactionDetailsByTransactionIDRIReceive, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Receive, true
}

// SetReceive sets field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) SetReceive(v GetXRPRippleTransactionDetailsByTransactionIDRIReceive) {
	o.Receive = v
}

// GetSequence returns the Sequence field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetSequence() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value
// and a boolean to check if the value has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetSequenceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sequence, true
}

// SetSequence sets field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) SetSequence(v int64) {
	o.Sequence = v
}

// GetStatus returns the Status field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetValue() GetTransactionDetailsByTransactionIDFromCallbackRIBSXValue {
	if o == nil {
		var ret GetTransactionDetailsByTransactionIDFromCallbackRIBSXValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) GetValueOk() (*GetTransactionDetailsByTransactionIDFromCallbackRIBSXValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) SetValue(v GetTransactionDetailsByTransactionIDFromCallbackRIBSXValue) {
	o.Value = v
}

func (o GetTransactionDetailsByTransactionIDFromCallbackRIBSX) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["additionalData"] = o.AdditionalData
	}
	if o.DestinationTag != nil {
		toSerialize["destinationTag"] = o.DestinationTag
	}
	if true {
		toSerialize["offer"] = o.Offer
	}
	if true {
		toSerialize["receive"] = o.Receive
	}
	if true {
		toSerialize["sequence"] = o.Sequence
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX struct {
	value *GetTransactionDetailsByTransactionIDFromCallbackRIBSX
	isSet bool
}

func (v NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX) Get() *GetTransactionDetailsByTransactionIDFromCallbackRIBSX {
	return v.value
}

func (v *NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX) Set(val *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX(val *GetTransactionDetailsByTransactionIDFromCallbackRIBSX) *NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX {
	return &NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX{value: val, isSet: true}
}

func (v NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTransactionDetailsByTransactionIDFromCallbackRIBSX) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


