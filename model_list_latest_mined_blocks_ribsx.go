/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListLatestMinedBlocksRIBSX XRP
type ListLatestMinedBlocksRIBSX struct {
	TotalCoins *ListLatestMinedBlocksRIBSXTotalCoins `json:"totalCoins,omitempty"`
	TotalFees ListLatestMinedBlocksRIBSXTotalFees `json:"totalFees"`
}

// NewListLatestMinedBlocksRIBSX instantiates a new ListLatestMinedBlocksRIBSX object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLatestMinedBlocksRIBSX(totalFees ListLatestMinedBlocksRIBSXTotalFees) *ListLatestMinedBlocksRIBSX {
	this := ListLatestMinedBlocksRIBSX{}
	this.TotalFees = totalFees
	return &this
}

// NewListLatestMinedBlocksRIBSXWithDefaults instantiates a new ListLatestMinedBlocksRIBSX object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLatestMinedBlocksRIBSXWithDefaults() *ListLatestMinedBlocksRIBSX {
	this := ListLatestMinedBlocksRIBSX{}
	return &this
}

// GetTotalCoins returns the TotalCoins field value if set, zero value otherwise.
func (o *ListLatestMinedBlocksRIBSX) GetTotalCoins() ListLatestMinedBlocksRIBSXTotalCoins {
	if o == nil || o.TotalCoins == nil {
		var ret ListLatestMinedBlocksRIBSXTotalCoins
		return ret
	}
	return *o.TotalCoins
}

// GetTotalCoinsOk returns a tuple with the TotalCoins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLatestMinedBlocksRIBSX) GetTotalCoinsOk() (*ListLatestMinedBlocksRIBSXTotalCoins, bool) {
	if o == nil || o.TotalCoins == nil {
		return nil, false
	}
	return o.TotalCoins, true
}

// HasTotalCoins returns a boolean if a field has been set.
func (o *ListLatestMinedBlocksRIBSX) HasTotalCoins() bool {
	if o != nil && o.TotalCoins != nil {
		return true
	}

	return false
}

// SetTotalCoins gets a reference to the given ListLatestMinedBlocksRIBSXTotalCoins and assigns it to the TotalCoins field.
func (o *ListLatestMinedBlocksRIBSX) SetTotalCoins(v ListLatestMinedBlocksRIBSXTotalCoins) {
	o.TotalCoins = &v
}

// GetTotalFees returns the TotalFees field value
func (o *ListLatestMinedBlocksRIBSX) GetTotalFees() ListLatestMinedBlocksRIBSXTotalFees {
	if o == nil {
		var ret ListLatestMinedBlocksRIBSXTotalFees
		return ret
	}

	return o.TotalFees
}

// GetTotalFeesOk returns a tuple with the TotalFees field value
// and a boolean to check if the value has been set.
func (o *ListLatestMinedBlocksRIBSX) GetTotalFeesOk() (*ListLatestMinedBlocksRIBSXTotalFees, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalFees, true
}

// SetTotalFees sets field value
func (o *ListLatestMinedBlocksRIBSX) SetTotalFees(v ListLatestMinedBlocksRIBSXTotalFees) {
	o.TotalFees = v
}

func (o ListLatestMinedBlocksRIBSX) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalCoins != nil {
		toSerialize["totalCoins"] = o.TotalCoins
	}
	if true {
		toSerialize["totalFees"] = o.TotalFees
	}
	return json.Marshal(toSerialize)
}

type NullableListLatestMinedBlocksRIBSX struct {
	value *ListLatestMinedBlocksRIBSX
	isSet bool
}

func (v NullableListLatestMinedBlocksRIBSX) Get() *ListLatestMinedBlocksRIBSX {
	return v.value
}

func (v *NullableListLatestMinedBlocksRIBSX) Set(val *ListLatestMinedBlocksRIBSX) {
	v.value = val
	v.isSet = true
}

func (v NullableListLatestMinedBlocksRIBSX) IsSet() bool {
	return v.isSet
}

func (v *NullableListLatestMinedBlocksRIBSX) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLatestMinedBlocksRIBSX(val *ListLatestMinedBlocksRIBSX) *NullableListLatestMinedBlocksRIBSX {
	return &NullableListLatestMinedBlocksRIBSX{value: val, isSet: true}
}

func (v NullableListLatestMinedBlocksRIBSX) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLatestMinedBlocksRIBSX) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


