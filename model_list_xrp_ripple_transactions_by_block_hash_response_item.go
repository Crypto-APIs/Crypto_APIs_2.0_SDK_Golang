/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListXRPRippleTransactionsByBlockHashResponseItem struct for ListXRPRippleTransactionsByBlockHashResponseItem
type ListXRPRippleTransactionsByBlockHashResponseItem struct {
	// Represents any additional data that may be needed.
	AdditionalData *string `json:"additionalData,omitempty"`
	// Represents the index position of the transaction in the specific block.
	Index int32 `json:"index"`
	// Represents the hash of the block where this transaction was mined/confirmed for first time. The hash is defined as a cryptographic digital fingerprint made by hashing the block header twice through the SHA256 algorithm.
	MinedInBlockHash string `json:"minedInBlockHash"`
	// Represents the hight of the block where this transaction was mined/confirmed for first time. The height is defined as the number of blocks in the blockchain preceding this specific block.
	MinedInBlockHeight int32 `json:"minedInBlockHeight"`
	// Represents an object of addresses that receive the transactions.
	Recipients []ListXRPRippleTransactionsByBlockHashResponseItemRecipients `json:"recipients"`
	// Represents an object of addresses that provide the funds.
	Senders []ListXRPRippleTransactionsByBlockHashResponseItemSenders `json:"senders"`
	// Defines the transaction input's sequence as an integer, which is is used when transactions are replaced with newer versions before LockTime.
	Sequence int32 `json:"sequence"`
	// Defines the status of the transaction.
	Status string `json:"status"`
	// Defines the exact date/time in Unix Timestamp when this transaction was mined, confirmed or first seen in Mempool, if it is unconfirmed.
	Timestamp int32 `json:"timestamp"`
	// Represents the same as `transactionId` for account-based protocols like Ethereum, while it could be different in UTXO-based protocols like Bitcoin. E.g., in UTXO-based protocols `hash` is different from `transactionId` for SegWit transactions.
	TransactionHash string `json:"transactionHash"`
	// Defines the type of the transaction.
	Type string `json:"type"`
	Fee ListXRPRippleTransactionsByBlockHashResponseItemFee `json:"fee"`
	Offer ListXRPRippleTransactionsByBlockHashResponseItemOffer `json:"offer"`
	Receive ListXRPRippleTransactionsByBlockHashResponseItemReceive `json:"receive"`
	Value ListXRPRippleTransactionsByBlockHashResponseItemValue `json:"value"`
}

// NewListXRPRippleTransactionsByBlockHashResponseItem instantiates a new ListXRPRippleTransactionsByBlockHashResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListXRPRippleTransactionsByBlockHashResponseItem(index int32, minedInBlockHash string, minedInBlockHeight int32, recipients []ListXRPRippleTransactionsByBlockHashResponseItemRecipients, senders []ListXRPRippleTransactionsByBlockHashResponseItemSenders, sequence int32, status string, timestamp int32, transactionHash string, type_ string, fee ListXRPRippleTransactionsByBlockHashResponseItemFee, offer ListXRPRippleTransactionsByBlockHashResponseItemOffer, receive ListXRPRippleTransactionsByBlockHashResponseItemReceive, value ListXRPRippleTransactionsByBlockHashResponseItemValue) *ListXRPRippleTransactionsByBlockHashResponseItem {
	this := ListXRPRippleTransactionsByBlockHashResponseItem{}
	this.Index = index
	this.MinedInBlockHash = minedInBlockHash
	this.MinedInBlockHeight = minedInBlockHeight
	this.Recipients = recipients
	this.Senders = senders
	this.Sequence = sequence
	this.Status = status
	this.Timestamp = timestamp
	this.TransactionHash = transactionHash
	this.Type = type_
	this.Fee = fee
	this.Offer = offer
	this.Receive = receive
	this.Value = value
	return &this
}

// NewListXRPRippleTransactionsByBlockHashResponseItemWithDefaults instantiates a new ListXRPRippleTransactionsByBlockHashResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListXRPRippleTransactionsByBlockHashResponseItemWithDefaults() *ListXRPRippleTransactionsByBlockHashResponseItem {
	this := ListXRPRippleTransactionsByBlockHashResponseItem{}
	return &this
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetAdditionalData() string {
	if o == nil || o.AdditionalData == nil {
		var ret string
		return ret
	}
	return *o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetAdditionalDataOk() (*string, bool) {
	if o == nil || o.AdditionalData == nil {
		return nil, false
	}
	return o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) HasAdditionalData() bool {
	if o != nil && o.AdditionalData != nil {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given string and assigns it to the AdditionalData field.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetAdditionalData(v string) {
	o.AdditionalData = &v
}

// GetIndex returns the Index field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetIndexOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetIndex(v int32) {
	o.Index = v
}

// GetMinedInBlockHash returns the MinedInBlockHash field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetMinedInBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinedInBlockHash
}

// GetMinedInBlockHashOk returns a tuple with the MinedInBlockHash field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetMinedInBlockHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MinedInBlockHash, true
}

// SetMinedInBlockHash sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetMinedInBlockHash(v string) {
	o.MinedInBlockHash = v
}

// GetMinedInBlockHeight returns the MinedInBlockHeight field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetMinedInBlockHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinedInBlockHeight
}

// GetMinedInBlockHeightOk returns a tuple with the MinedInBlockHeight field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetMinedInBlockHeightOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MinedInBlockHeight, true
}

// SetMinedInBlockHeight sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetMinedInBlockHeight(v int32) {
	o.MinedInBlockHeight = v
}

// GetRecipients returns the Recipients field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetRecipients() []ListXRPRippleTransactionsByBlockHashResponseItemRecipients {
	if o == nil {
		var ret []ListXRPRippleTransactionsByBlockHashResponseItemRecipients
		return ret
	}

	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetRecipientsOk() (*[]ListXRPRippleTransactionsByBlockHashResponseItemRecipients, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Recipients, true
}

// SetRecipients sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetRecipients(v []ListXRPRippleTransactionsByBlockHashResponseItemRecipients) {
	o.Recipients = v
}

// GetSenders returns the Senders field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetSenders() []ListXRPRippleTransactionsByBlockHashResponseItemSenders {
	if o == nil {
		var ret []ListXRPRippleTransactionsByBlockHashResponseItemSenders
		return ret
	}

	return o.Senders
}

// GetSendersOk returns a tuple with the Senders field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetSendersOk() (*[]ListXRPRippleTransactionsByBlockHashResponseItemSenders, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Senders, true
}

// SetSenders sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetSenders(v []ListXRPRippleTransactionsByBlockHashResponseItemSenders) {
	o.Senders = v
}

// GetSequence returns the Sequence field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetSequence() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetSequenceOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Sequence, true
}

// SetSequence sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetSequence(v int32) {
	o.Sequence = v
}

// GetStatus returns the Status field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetStatus(v string) {
	o.Status = v
}

// GetTimestamp returns the Timestamp field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetTimestampOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetTimestamp(v int32) {
	o.Timestamp = v
}

// GetTransactionHash returns the TransactionHash field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetTransactionHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionHash
}

// GetTransactionHashOk returns a tuple with the TransactionHash field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetTransactionHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionHash, true
}

// SetTransactionHash sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetTransactionHash(v string) {
	o.TransactionHash = v
}

// GetType returns the Type field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetType(v string) {
	o.Type = v
}

// GetFee returns the Fee field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetFee() ListXRPRippleTransactionsByBlockHashResponseItemFee {
	if o == nil {
		var ret ListXRPRippleTransactionsByBlockHashResponseItemFee
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetFeeOk() (*ListXRPRippleTransactionsByBlockHashResponseItemFee, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetFee(v ListXRPRippleTransactionsByBlockHashResponseItemFee) {
	o.Fee = v
}

// GetOffer returns the Offer field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetOffer() ListXRPRippleTransactionsByBlockHashResponseItemOffer {
	if o == nil {
		var ret ListXRPRippleTransactionsByBlockHashResponseItemOffer
		return ret
	}

	return o.Offer
}

// GetOfferOk returns a tuple with the Offer field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetOfferOk() (*ListXRPRippleTransactionsByBlockHashResponseItemOffer, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Offer, true
}

// SetOffer sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetOffer(v ListXRPRippleTransactionsByBlockHashResponseItemOffer) {
	o.Offer = v
}

// GetReceive returns the Receive field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetReceive() ListXRPRippleTransactionsByBlockHashResponseItemReceive {
	if o == nil {
		var ret ListXRPRippleTransactionsByBlockHashResponseItemReceive
		return ret
	}

	return o.Receive
}

// GetReceiveOk returns a tuple with the Receive field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetReceiveOk() (*ListXRPRippleTransactionsByBlockHashResponseItemReceive, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Receive, true
}

// SetReceive sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetReceive(v ListXRPRippleTransactionsByBlockHashResponseItemReceive) {
	o.Receive = v
}

// GetValue returns the Value field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetValue() ListXRPRippleTransactionsByBlockHashResponseItemValue {
	if o == nil {
		var ret ListXRPRippleTransactionsByBlockHashResponseItemValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) GetValueOk() (*ListXRPRippleTransactionsByBlockHashResponseItemValue, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ListXRPRippleTransactionsByBlockHashResponseItem) SetValue(v ListXRPRippleTransactionsByBlockHashResponseItemValue) {
	o.Value = v
}

func (o ListXRPRippleTransactionsByBlockHashResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalData != nil {
		toSerialize["additionalData"] = o.AdditionalData
	}
	if true {
		toSerialize["index"] = o.Index
	}
	if true {
		toSerialize["minedInBlockHash"] = o.MinedInBlockHash
	}
	if true {
		toSerialize["minedInBlockHeight"] = o.MinedInBlockHeight
	}
	if true {
		toSerialize["recipients"] = o.Recipients
	}
	if true {
		toSerialize["senders"] = o.Senders
	}
	if true {
		toSerialize["sequence"] = o.Sequence
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["transactionHash"] = o.TransactionHash
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["fee"] = o.Fee
	}
	if true {
		toSerialize["offer"] = o.Offer
	}
	if true {
		toSerialize["receive"] = o.Receive
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableListXRPRippleTransactionsByBlockHashResponseItem struct {
	value *ListXRPRippleTransactionsByBlockHashResponseItem
	isSet bool
}

func (v NullableListXRPRippleTransactionsByBlockHashResponseItem) Get() *ListXRPRippleTransactionsByBlockHashResponseItem {
	return v.value
}

func (v *NullableListXRPRippleTransactionsByBlockHashResponseItem) Set(val *ListXRPRippleTransactionsByBlockHashResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableListXRPRippleTransactionsByBlockHashResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableListXRPRippleTransactionsByBlockHashResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListXRPRippleTransactionsByBlockHashResponseItem(val *ListXRPRippleTransactionsByBlockHashResponseItem) *NullableListXRPRippleTransactionsByBlockHashResponseItem {
	return &NullableListXRPRippleTransactionsByBlockHashResponseItem{value: val, isSet: true}
}

func (v NullableListXRPRippleTransactionsByBlockHashResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListXRPRippleTransactionsByBlockHashResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


