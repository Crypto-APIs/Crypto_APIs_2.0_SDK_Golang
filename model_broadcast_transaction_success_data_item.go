/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// BroadcastTransactionSuccessDataItem Defines an `item` as one result.
type BroadcastTransactionSuccessDataItem struct {
	// Represents the specific blockchain protocol name, e.g. Ethereum, Bitcoin, etc.
	Blockchain string `json:"blockchain"`
	// Represents the name of the blockchain network used; blockchain networks are usually identical as technology and software, but they differ in data, e.g. - \"mainnet\" is the live network with actual data while networks like \"testnet\", \"ropsten\", \"rinkeby\" are test networks.
	Network string `json:"network"`
	// Defines the unique ID of the specific transaction, i.e. its identification number.
	TransactionId string `json:"transactionId"`
}

// NewBroadcastTransactionSuccessDataItem instantiates a new BroadcastTransactionSuccessDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBroadcastTransactionSuccessDataItem(blockchain string, network string, transactionId string) *BroadcastTransactionSuccessDataItem {
	this := BroadcastTransactionSuccessDataItem{}
	this.Blockchain = blockchain
	this.Network = network
	this.TransactionId = transactionId
	return &this
}

// NewBroadcastTransactionSuccessDataItemWithDefaults instantiates a new BroadcastTransactionSuccessDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBroadcastTransactionSuccessDataItemWithDefaults() *BroadcastTransactionSuccessDataItem {
	this := BroadcastTransactionSuccessDataItem{}
	return &this
}

// GetBlockchain returns the Blockchain field value
func (o *BroadcastTransactionSuccessDataItem) GetBlockchain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value
// and a boolean to check if the value has been set.
func (o *BroadcastTransactionSuccessDataItem) GetBlockchainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Blockchain, true
}

// SetBlockchain sets field value
func (o *BroadcastTransactionSuccessDataItem) SetBlockchain(v string) {
	o.Blockchain = v
}

// GetNetwork returns the Network field value
func (o *BroadcastTransactionSuccessDataItem) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *BroadcastTransactionSuccessDataItem) GetNetworkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *BroadcastTransactionSuccessDataItem) SetNetwork(v string) {
	o.Network = v
}

// GetTransactionId returns the TransactionId field value
func (o *BroadcastTransactionSuccessDataItem) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *BroadcastTransactionSuccessDataItem) GetTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *BroadcastTransactionSuccessDataItem) SetTransactionId(v string) {
	o.TransactionId = v
}

func (o BroadcastTransactionSuccessDataItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["blockchain"] = o.Blockchain
	}
	if true {
		toSerialize["network"] = o.Network
	}
	if true {
		toSerialize["transactionId"] = o.TransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableBroadcastTransactionSuccessDataItem struct {
	value *BroadcastTransactionSuccessDataItem
	isSet bool
}

func (v NullableBroadcastTransactionSuccessDataItem) Get() *BroadcastTransactionSuccessDataItem {
	return v.value
}

func (v *NullableBroadcastTransactionSuccessDataItem) Set(val *BroadcastTransactionSuccessDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBroadcastTransactionSuccessDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBroadcastTransactionSuccessDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBroadcastTransactionSuccessDataItem(val *BroadcastTransactionSuccessDataItem) *NullableBroadcastTransactionSuccessDataItem {
	return &NullableBroadcastTransactionSuccessDataItem{value: val, isSet: true}
}

func (v NullableBroadcastTransactionSuccessDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBroadcastTransactionSuccessDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


