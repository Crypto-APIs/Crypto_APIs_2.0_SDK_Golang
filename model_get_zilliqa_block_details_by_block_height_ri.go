/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// GetZilliqaBlockDetailsByBlockHeightRI struct for GetZilliqaBlockDetailsByBlockHeightRI
type GetZilliqaBlockDetailsByBlockHeightRI struct {
	// Represents the hash of the block, which is its unique identifier. It represents a cryptographic digital fingerprint made by hashing the block header twice through the SHA256 algorithm.
	BlockHash string `json:"blockHash"`
	// Defines how difficult it is for a specific miner to mine the block.
	Difficulty string `json:"difficulty"`
	// Represents the Directory Service block which contains metadata about the miners who participate in the consensus protocol.
	DsBlock int32 `json:"dsBlock"`
	// Defines how difficult it is to mine the dsBlocks.
	DsDifficulty string `json:"dsDifficulty"`
	// Represents a part of the DS Committee which leads the consensus protocol for the epoch.
	DsLeader string `json:"dsLeader"`
	// Represents the maximum amount of gas allowed in the block in order to determine how many transactions it can fit.
	GasLimit int32 `json:"gasLimit"`
	// Defines how much of the gas for the block has been used.
	GasUsed int32 `json:"gasUsed"`
	MicroBlocks []string `json:"microBlocks"`
	// Defines the hash of the next block from the specific blockchain.
	NextBlockHash string `json:"nextBlockHash"`
	// Represents the hash of the previous block, also known as the parent block.
	PreviousBlockHash string `json:"previousBlockHash"`
	// Defines the exact date/time when this block was mined in Unix Timestamp.
	Timestamp int32 `json:"timestamp"`
	// Represents the total number of all transactions as part of this block.
	TransactionsCount int32 `json:"transactionsCount"`
}

// NewGetZilliqaBlockDetailsByBlockHeightRI instantiates a new GetZilliqaBlockDetailsByBlockHeightRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetZilliqaBlockDetailsByBlockHeightRI(blockHash string, difficulty string, dsBlock int32, dsDifficulty string, dsLeader string, gasLimit int32, gasUsed int32, microBlocks []string, nextBlockHash string, previousBlockHash string, timestamp int32, transactionsCount int32) *GetZilliqaBlockDetailsByBlockHeightRI {
	this := GetZilliqaBlockDetailsByBlockHeightRI{}
	this.BlockHash = blockHash
	this.Difficulty = difficulty
	this.DsBlock = dsBlock
	this.DsDifficulty = dsDifficulty
	this.DsLeader = dsLeader
	this.GasLimit = gasLimit
	this.GasUsed = gasUsed
	this.MicroBlocks = microBlocks
	this.NextBlockHash = nextBlockHash
	this.PreviousBlockHash = previousBlockHash
	this.Timestamp = timestamp
	this.TransactionsCount = transactionsCount
	return &this
}

// NewGetZilliqaBlockDetailsByBlockHeightRIWithDefaults instantiates a new GetZilliqaBlockDetailsByBlockHeightRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetZilliqaBlockDetailsByBlockHeightRIWithDefaults() *GetZilliqaBlockDetailsByBlockHeightRI {
	this := GetZilliqaBlockDetailsByBlockHeightRI{}
	return &this
}

// GetBlockHash returns the BlockHash field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlockHash
}

// GetBlockHashOk returns a tuple with the BlockHash field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetBlockHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BlockHash, true
}

// SetBlockHash sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetBlockHash(v string) {
	o.BlockHash = v
}

// GetDifficulty returns the Difficulty field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetDifficulty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Difficulty
}

// GetDifficultyOk returns a tuple with the Difficulty field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetDifficultyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Difficulty, true
}

// SetDifficulty sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetDifficulty(v string) {
	o.Difficulty = v
}

// GetDsBlock returns the DsBlock field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetDsBlock() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DsBlock
}

// GetDsBlockOk returns a tuple with the DsBlock field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetDsBlockOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DsBlock, true
}

// SetDsBlock sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetDsBlock(v int32) {
	o.DsBlock = v
}

// GetDsDifficulty returns the DsDifficulty field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetDsDifficulty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DsDifficulty
}

// GetDsDifficultyOk returns a tuple with the DsDifficulty field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetDsDifficultyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DsDifficulty, true
}

// SetDsDifficulty sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetDsDifficulty(v string) {
	o.DsDifficulty = v
}

// GetDsLeader returns the DsLeader field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetDsLeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DsLeader
}

// GetDsLeaderOk returns a tuple with the DsLeader field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetDsLeaderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DsLeader, true
}

// SetDsLeader sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetDsLeader(v string) {
	o.DsLeader = v
}

// GetGasLimit returns the GasLimit field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetGasLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GasLimit
}

// GetGasLimitOk returns a tuple with the GasLimit field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetGasLimitOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GasLimit, true
}

// SetGasLimit sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetGasLimit(v int32) {
	o.GasLimit = v
}

// GetGasUsed returns the GasUsed field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetGasUsed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GasUsed
}

// GetGasUsedOk returns a tuple with the GasUsed field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetGasUsedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GasUsed, true
}

// SetGasUsed sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetGasUsed(v int32) {
	o.GasUsed = v
}

// GetMicroBlocks returns the MicroBlocks field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetMicroBlocks() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MicroBlocks
}

// GetMicroBlocksOk returns a tuple with the MicroBlocks field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetMicroBlocksOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MicroBlocks, true
}

// SetMicroBlocks sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetMicroBlocks(v []string) {
	o.MicroBlocks = v
}

// GetNextBlockHash returns the NextBlockHash field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetNextBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextBlockHash
}

// GetNextBlockHashOk returns a tuple with the NextBlockHash field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetNextBlockHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NextBlockHash, true
}

// SetNextBlockHash sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetNextBlockHash(v string) {
	o.NextBlockHash = v
}

// GetPreviousBlockHash returns the PreviousBlockHash field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetPreviousBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreviousBlockHash
}

// GetPreviousBlockHashOk returns a tuple with the PreviousBlockHash field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetPreviousBlockHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PreviousBlockHash, true
}

// SetPreviousBlockHash sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetPreviousBlockHash(v string) {
	o.PreviousBlockHash = v
}

// GetTimestamp returns the Timestamp field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetTimestampOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetTimestamp(v int32) {
	o.Timestamp = v
}

// GetTransactionsCount returns the TransactionsCount field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetTransactionsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactionsCount
}

// GetTransactionsCountOk returns a tuple with the TransactionsCount field value
// and a boolean to check if the value has been set.
func (o *GetZilliqaBlockDetailsByBlockHeightRI) GetTransactionsCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionsCount, true
}

// SetTransactionsCount sets field value
func (o *GetZilliqaBlockDetailsByBlockHeightRI) SetTransactionsCount(v int32) {
	o.TransactionsCount = v
}

func (o GetZilliqaBlockDetailsByBlockHeightRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["blockHash"] = o.BlockHash
	}
	if true {
		toSerialize["difficulty"] = o.Difficulty
	}
	if true {
		toSerialize["dsBlock"] = o.DsBlock
	}
	if true {
		toSerialize["dsDifficulty"] = o.DsDifficulty
	}
	if true {
		toSerialize["dsLeader"] = o.DsLeader
	}
	if true {
		toSerialize["gasLimit"] = o.GasLimit
	}
	if true {
		toSerialize["gasUsed"] = o.GasUsed
	}
	if true {
		toSerialize["microBlocks"] = o.MicroBlocks
	}
	if true {
		toSerialize["nextBlockHash"] = o.NextBlockHash
	}
	if true {
		toSerialize["previousBlockHash"] = o.PreviousBlockHash
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["transactionsCount"] = o.TransactionsCount
	}
	return json.Marshal(toSerialize)
}

type NullableGetZilliqaBlockDetailsByBlockHeightRI struct {
	value *GetZilliqaBlockDetailsByBlockHeightRI
	isSet bool
}

func (v NullableGetZilliqaBlockDetailsByBlockHeightRI) Get() *GetZilliqaBlockDetailsByBlockHeightRI {
	return v.value
}

func (v *NullableGetZilliqaBlockDetailsByBlockHeightRI) Set(val *GetZilliqaBlockDetailsByBlockHeightRI) {
	v.value = val
	v.isSet = true
}

func (v NullableGetZilliqaBlockDetailsByBlockHeightRI) IsSet() bool {
	return v.isSet
}

func (v *NullableGetZilliqaBlockDetailsByBlockHeightRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetZilliqaBlockDetailsByBlockHeightRI(val *GetZilliqaBlockDetailsByBlockHeightRI) *NullableGetZilliqaBlockDetailsByBlockHeightRI {
	return &NullableGetZilliqaBlockDetailsByBlockHeightRI{value: val, isSet: true}
}

func (v NullableGetZilliqaBlockDetailsByBlockHeightRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetZilliqaBlockDetailsByBlockHeightRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


