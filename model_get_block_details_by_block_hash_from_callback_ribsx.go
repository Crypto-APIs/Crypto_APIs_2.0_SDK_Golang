/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// GetBlockDetailsByBlockHashFromCallbackRIBSX XRP
type GetBlockDetailsByBlockHashFromCallbackRIBSX struct {
	TotalCoins GetLatestMinedXRPRippleBlockRITotalCoins `json:"totalCoins"`
	TotalFees GetLatestMinedXRPRippleBlockRITotalFees `json:"totalFees"`
}

// NewGetBlockDetailsByBlockHashFromCallbackRIBSX instantiates a new GetBlockDetailsByBlockHashFromCallbackRIBSX object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBlockDetailsByBlockHashFromCallbackRIBSX(totalCoins GetLatestMinedXRPRippleBlockRITotalCoins, totalFees GetLatestMinedXRPRippleBlockRITotalFees) *GetBlockDetailsByBlockHashFromCallbackRIBSX {
	this := GetBlockDetailsByBlockHashFromCallbackRIBSX{}
	this.TotalCoins = totalCoins
	this.TotalFees = totalFees
	return &this
}

// NewGetBlockDetailsByBlockHashFromCallbackRIBSXWithDefaults instantiates a new GetBlockDetailsByBlockHashFromCallbackRIBSX object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBlockDetailsByBlockHashFromCallbackRIBSXWithDefaults() *GetBlockDetailsByBlockHashFromCallbackRIBSX {
	this := GetBlockDetailsByBlockHashFromCallbackRIBSX{}
	return &this
}

// GetTotalCoins returns the TotalCoins field value
func (o *GetBlockDetailsByBlockHashFromCallbackRIBSX) GetTotalCoins() GetLatestMinedXRPRippleBlockRITotalCoins {
	if o == nil {
		var ret GetLatestMinedXRPRippleBlockRITotalCoins
		return ret
	}

	return o.TotalCoins
}

// GetTotalCoinsOk returns a tuple with the TotalCoins field value
// and a boolean to check if the value has been set.
func (o *GetBlockDetailsByBlockHashFromCallbackRIBSX) GetTotalCoinsOk() (*GetLatestMinedXRPRippleBlockRITotalCoins, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCoins, true
}

// SetTotalCoins sets field value
func (o *GetBlockDetailsByBlockHashFromCallbackRIBSX) SetTotalCoins(v GetLatestMinedXRPRippleBlockRITotalCoins) {
	o.TotalCoins = v
}

// GetTotalFees returns the TotalFees field value
func (o *GetBlockDetailsByBlockHashFromCallbackRIBSX) GetTotalFees() GetLatestMinedXRPRippleBlockRITotalFees {
	if o == nil {
		var ret GetLatestMinedXRPRippleBlockRITotalFees
		return ret
	}

	return o.TotalFees
}

// GetTotalFeesOk returns a tuple with the TotalFees field value
// and a boolean to check if the value has been set.
func (o *GetBlockDetailsByBlockHashFromCallbackRIBSX) GetTotalFeesOk() (*GetLatestMinedXRPRippleBlockRITotalFees, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalFees, true
}

// SetTotalFees sets field value
func (o *GetBlockDetailsByBlockHashFromCallbackRIBSX) SetTotalFees(v GetLatestMinedXRPRippleBlockRITotalFees) {
	o.TotalFees = v
}

func (o GetBlockDetailsByBlockHashFromCallbackRIBSX) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalCoins"] = o.TotalCoins
	}
	if true {
		toSerialize["totalFees"] = o.TotalFees
	}
	return json.Marshal(toSerialize)
}

type NullableGetBlockDetailsByBlockHashFromCallbackRIBSX struct {
	value *GetBlockDetailsByBlockHashFromCallbackRIBSX
	isSet bool
}

func (v NullableGetBlockDetailsByBlockHashFromCallbackRIBSX) Get() *GetBlockDetailsByBlockHashFromCallbackRIBSX {
	return v.value
}

func (v *NullableGetBlockDetailsByBlockHashFromCallbackRIBSX) Set(val *GetBlockDetailsByBlockHashFromCallbackRIBSX) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBlockDetailsByBlockHashFromCallbackRIBSX) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBlockDetailsByBlockHashFromCallbackRIBSX) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBlockDetailsByBlockHashFromCallbackRIBSX(val *GetBlockDetailsByBlockHashFromCallbackRIBSX) *NullableGetBlockDetailsByBlockHashFromCallbackRIBSX {
	return &NullableGetBlockDetailsByBlockHashFromCallbackRIBSX{value: val, isSet: true}
}

func (v NullableGetBlockDetailsByBlockHashFromCallbackRIBSX) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBlockDetailsByBlockHashFromCallbackRIBSX) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


