/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListUnspentTransactionOutputsByAddressRI struct for ListUnspentTransactionOutputsByAddressRI
type ListUnspentTransactionOutputsByAddressRI struct {
	// Represents the address that has unspend funds per which the result is returned.
	Address string `json:"address"`
	// Represents the sent/received amount.
	Amount string `json:"amount"`
	// Represents the index position of the transaction in the block.
	Index int32 `json:"index"`
	// Represents the state of the transaction whether it is confirmed or not confirmed.
	IsConfirmed bool `json:"isConfirmed"`
	// Defines the exact date/time in Unix Timestamp when this transaction was mined, confirmed or first seen in Mempool, if it is unconfirmed.
	Timestamp int32 `json:"timestamp"`
	// Represents the unique identifier of a transaction, i.e. it could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction `hash` in Ethereum blockchain.
	TransactionId string `json:"transactionId"`
}

// NewListUnspentTransactionOutputsByAddressRI instantiates a new ListUnspentTransactionOutputsByAddressRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUnspentTransactionOutputsByAddressRI(address string, amount string, index int32, isConfirmed bool, timestamp int32, transactionId string) *ListUnspentTransactionOutputsByAddressRI {
	this := ListUnspentTransactionOutputsByAddressRI{}
	this.Address = address
	this.Amount = amount
	this.Index = index
	this.IsConfirmed = isConfirmed
	this.Timestamp = timestamp
	this.TransactionId = transactionId
	return &this
}

// NewListUnspentTransactionOutputsByAddressRIWithDefaults instantiates a new ListUnspentTransactionOutputsByAddressRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUnspentTransactionOutputsByAddressRIWithDefaults() *ListUnspentTransactionOutputsByAddressRI {
	this := ListUnspentTransactionOutputsByAddressRI{}
	return &this
}

// GetAddress returns the Address field value
func (o *ListUnspentTransactionOutputsByAddressRI) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRI) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *ListUnspentTransactionOutputsByAddressRI) SetAddress(v string) {
	o.Address = v
}

// GetAmount returns the Amount field value
func (o *ListUnspentTransactionOutputsByAddressRI) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRI) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ListUnspentTransactionOutputsByAddressRI) SetAmount(v string) {
	o.Amount = v
}

// GetIndex returns the Index field value
func (o *ListUnspentTransactionOutputsByAddressRI) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRI) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *ListUnspentTransactionOutputsByAddressRI) SetIndex(v int32) {
	o.Index = v
}

// GetIsConfirmed returns the IsConfirmed field value
func (o *ListUnspentTransactionOutputsByAddressRI) GetIsConfirmed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsConfirmed
}

// GetIsConfirmedOk returns a tuple with the IsConfirmed field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRI) GetIsConfirmedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsConfirmed, true
}

// SetIsConfirmed sets field value
func (o *ListUnspentTransactionOutputsByAddressRI) SetIsConfirmed(v bool) {
	o.IsConfirmed = v
}

// GetTimestamp returns the Timestamp field value
func (o *ListUnspentTransactionOutputsByAddressRI) GetTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRI) GetTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ListUnspentTransactionOutputsByAddressRI) SetTimestamp(v int32) {
	o.Timestamp = v
}

// GetTransactionId returns the TransactionId field value
func (o *ListUnspentTransactionOutputsByAddressRI) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *ListUnspentTransactionOutputsByAddressRI) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *ListUnspentTransactionOutputsByAddressRI) SetTransactionId(v string) {
	o.TransactionId = v
}

func (o ListUnspentTransactionOutputsByAddressRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["index"] = o.Index
	}
	if true {
		toSerialize["isConfirmed"] = o.IsConfirmed
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["transactionId"] = o.TransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableListUnspentTransactionOutputsByAddressRI struct {
	value *ListUnspentTransactionOutputsByAddressRI
	isSet bool
}

func (v NullableListUnspentTransactionOutputsByAddressRI) Get() *ListUnspentTransactionOutputsByAddressRI {
	return v.value
}

func (v *NullableListUnspentTransactionOutputsByAddressRI) Set(val *ListUnspentTransactionOutputsByAddressRI) {
	v.value = val
	v.isSet = true
}

func (v NullableListUnspentTransactionOutputsByAddressRI) IsSet() bool {
	return v.isSet
}

func (v *NullableListUnspentTransactionOutputsByAddressRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUnspentTransactionOutputsByAddressRI(val *ListUnspentTransactionOutputsByAddressRI) *NullableListUnspentTransactionOutputsByAddressRI {
	return &NullableListUnspentTransactionOutputsByAddressRI{value: val, isSet: true}
}

func (v NullableListUnspentTransactionOutputsByAddressRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUnspentTransactionOutputsByAddressRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


