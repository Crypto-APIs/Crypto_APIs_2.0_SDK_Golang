/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateFungibleTokensTransactionRequestFromAddressRBDataItem struct for CreateFungibleTokensTransactionRequestFromAddressRBDataItem
type CreateFungibleTokensTransactionRequestFromAddressRBDataItem struct {
	// Represents the specific amount of the transaction.
	Amount string `json:"amount"`
	// Represents the Secret Key value provided by the customer. This field is used for security purposes during the callback notification, in order to prove the sender of the callback as Crypto APIs. For more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security).
	CallbackSecretKey *string `json:"callbackSecretKey,omitempty"`
	// Represents the URL that is set by the customer where the callback will be received at. The callback notification will be received only if and when the event occurs. `We support ONLY httpS type of protocol`.
	CallbackUrl *string `json:"callbackUrl,omitempty"`
	// Represents the fee priority of the automation, whether it is \"slow\", \"standard\" or \"fast\".
	FeePriority string `json:"feePriority"`
	// Represents an optional note to add a free text in, explaining or providing additional detail on the transaction request.
	Note *string `json:"note,omitempty"`
	// Defines the specific recipient address for the transaction.
	RecipientAddress string `json:"recipientAddress"`
	// Defines the specific token identifier. For Bitcoin-based transactions it should be the `propertyId` and for Ethereum-based transactions - the `contract`.
	TokenIdentifier string `json:"tokenIdentifier"`
}

// NewCreateFungibleTokensTransactionRequestFromAddressRBDataItem instantiates a new CreateFungibleTokensTransactionRequestFromAddressRBDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFungibleTokensTransactionRequestFromAddressRBDataItem(amount string, feePriority string, recipientAddress string, tokenIdentifier string) *CreateFungibleTokensTransactionRequestFromAddressRBDataItem {
	this := CreateFungibleTokensTransactionRequestFromAddressRBDataItem{}
	this.Amount = amount
	this.FeePriority = feePriority
	this.RecipientAddress = recipientAddress
	this.TokenIdentifier = tokenIdentifier
	return &this
}

// NewCreateFungibleTokensTransactionRequestFromAddressRBDataItemWithDefaults instantiates a new CreateFungibleTokensTransactionRequestFromAddressRBDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFungibleTokensTransactionRequestFromAddressRBDataItemWithDefaults() *CreateFungibleTokensTransactionRequestFromAddressRBDataItem {
	this := CreateFungibleTokensTransactionRequestFromAddressRBDataItem{}
	return &this
}

// GetAmount returns the Amount field value
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) SetAmount(v string) {
	o.Amount = v
}

// GetCallbackSecretKey returns the CallbackSecretKey field value if set, zero value otherwise.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetCallbackSecretKey() string {
	if o == nil || o.CallbackSecretKey == nil {
		var ret string
		return ret
	}
	return *o.CallbackSecretKey
}

// GetCallbackSecretKeyOk returns a tuple with the CallbackSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetCallbackSecretKeyOk() (*string, bool) {
	if o == nil || o.CallbackSecretKey == nil {
		return nil, false
	}
	return o.CallbackSecretKey, true
}

// HasCallbackSecretKey returns a boolean if a field has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) HasCallbackSecretKey() bool {
	if o != nil && o.CallbackSecretKey != nil {
		return true
	}

	return false
}

// SetCallbackSecretKey gets a reference to the given string and assigns it to the CallbackSecretKey field.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) SetCallbackSecretKey(v string) {
	o.CallbackSecretKey = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetCallbackUrl() string {
	if o == nil || o.CallbackUrl == nil {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetCallbackUrlOk() (*string, bool) {
	if o == nil || o.CallbackUrl == nil {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl != nil {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetFeePriority returns the FeePriority field value
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetFeePriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeePriority
}

// GetFeePriorityOk returns a tuple with the FeePriority field value
// and a boolean to check if the value has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetFeePriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeePriority, true
}

// SetFeePriority sets field value
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) SetFeePriority(v string) {
	o.FeePriority = v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetNote() string {
	if o == nil || o.Note == nil {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetNoteOk() (*string, bool) {
	if o == nil || o.Note == nil {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) HasNote() bool {
	if o != nil && o.Note != nil {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) SetNote(v string) {
	o.Note = &v
}

// GetRecipientAddress returns the RecipientAddress field value
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetRecipientAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientAddress
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value
// and a boolean to check if the value has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetRecipientAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientAddress, true
}

// SetRecipientAddress sets field value
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) SetRecipientAddress(v string) {
	o.RecipientAddress = v
}

// GetTokenIdentifier returns the TokenIdentifier field value
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetTokenIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenIdentifier
}

// GetTokenIdentifierOk returns a tuple with the TokenIdentifier field value
// and a boolean to check if the value has been set.
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) GetTokenIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenIdentifier, true
}

// SetTokenIdentifier sets field value
func (o *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) SetTokenIdentifier(v string) {
	o.TokenIdentifier = v
}

func (o CreateFungibleTokensTransactionRequestFromAddressRBDataItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.CallbackSecretKey != nil {
		toSerialize["callbackSecretKey"] = o.CallbackSecretKey
	}
	if o.CallbackUrl != nil {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if true {
		toSerialize["feePriority"] = o.FeePriority
	}
	if o.Note != nil {
		toSerialize["note"] = o.Note
	}
	if true {
		toSerialize["recipientAddress"] = o.RecipientAddress
	}
	if true {
		toSerialize["tokenIdentifier"] = o.TokenIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem struct {
	value *CreateFungibleTokensTransactionRequestFromAddressRBDataItem
	isSet bool
}

func (v NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem) Get() *CreateFungibleTokensTransactionRequestFromAddressRBDataItem {
	return v.value
}

func (v *NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem) Set(val *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem(val *CreateFungibleTokensTransactionRequestFromAddressRBDataItem) *NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem {
	return &NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem{value: val, isSet: true}
}

func (v NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFungibleTokensTransactionRequestFromAddressRBDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


