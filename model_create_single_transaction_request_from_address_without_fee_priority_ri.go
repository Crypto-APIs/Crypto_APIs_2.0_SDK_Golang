/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI struct for CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI
type CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI struct {
	// Represents the Secret Key value provided by the customer. This field is used for security purposes during the callback notification, in order to prove the sender of the callback as Crypto APIs. For more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security).
	CallbackSecretKey *string `json:"callbackSecretKey,omitempty"`
	// Represents the URL that is set by the customer where the callback will be received at. The callback notification will be received only if and when the event occurs. `We support ONLY httpS type of protocol`.
	CallbackUrl *string `json:"callbackUrl,omitempty"`
	// Represents the public address, which is a compressed and shortened form of a public key. The classic address is shown when the source address is an x-Address.
	ClassicAddress *string `json:"classicAddress,omitempty"`
	// Represents an optional note to add a free text in, explaining or providing additional detail on the transaction request.
	Note *string `json:"note,omitempty"`
	// Defines the destination for the transaction, i.e. the recipient(s).
	Recipient []CreateSingleTransactionRequestFromAddressWithoutFeePriorityRIRecipientInner `json:"recipient"`
	Sender CreateSingleTransactionRequestFromAddressWithoutFeePriorityRISender `json:"sender"`
	// Represents a unique identifier of the transaction request (the request sent to make a transaction), which helps in identifying which callback and which `referenceId` concern that specific transaction request.
	TransactionRequestId string `json:"transactionRequestId"`
	// Defines the status of the transaction, e.g. \"created, \"await_approval\", \"pending\", \"prepared\", \"signed\", \"broadcasted\", \"success\", \"failed\", \"rejected\", mined\".
	TransactionRequestStatus string `json:"transactionRequestStatus"`
	TotalAmount *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRITotalAmount `json:"totalAmount,omitempty"`
}

// NewCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI instantiates a new CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI(recipient []CreateSingleTransactionRequestFromAddressWithoutFeePriorityRIRecipientInner, sender CreateSingleTransactionRequestFromAddressWithoutFeePriorityRISender, transactionRequestId string, transactionRequestStatus string) *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI {
	this := CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI{}
	this.Recipient = recipient
	this.Sender = sender
	this.TransactionRequestId = transactionRequestId
	this.TransactionRequestStatus = transactionRequestStatus
	return &this
}

// NewCreateSingleTransactionRequestFromAddressWithoutFeePriorityRIWithDefaults instantiates a new CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSingleTransactionRequestFromAddressWithoutFeePriorityRIWithDefaults() *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI {
	this := CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI{}
	return &this
}

// GetCallbackSecretKey returns the CallbackSecretKey field value if set, zero value otherwise.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetCallbackSecretKey() string {
	if o == nil || o.CallbackSecretKey == nil {
		var ret string
		return ret
	}
	return *o.CallbackSecretKey
}

// GetCallbackSecretKeyOk returns a tuple with the CallbackSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetCallbackSecretKeyOk() (*string, bool) {
	if o == nil || o.CallbackSecretKey == nil {
		return nil, false
	}
	return o.CallbackSecretKey, true
}

// HasCallbackSecretKey returns a boolean if a field has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) HasCallbackSecretKey() bool {
	if o != nil && o.CallbackSecretKey != nil {
		return true
	}

	return false
}

// SetCallbackSecretKey gets a reference to the given string and assigns it to the CallbackSecretKey field.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetCallbackSecretKey(v string) {
	o.CallbackSecretKey = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetCallbackUrl() string {
	if o == nil || o.CallbackUrl == nil {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetCallbackUrlOk() (*string, bool) {
	if o == nil || o.CallbackUrl == nil {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl != nil {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetClassicAddress returns the ClassicAddress field value if set, zero value otherwise.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetClassicAddress() string {
	if o == nil || o.ClassicAddress == nil {
		var ret string
		return ret
	}
	return *o.ClassicAddress
}

// GetClassicAddressOk returns a tuple with the ClassicAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetClassicAddressOk() (*string, bool) {
	if o == nil || o.ClassicAddress == nil {
		return nil, false
	}
	return o.ClassicAddress, true
}

// HasClassicAddress returns a boolean if a field has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) HasClassicAddress() bool {
	if o != nil && o.ClassicAddress != nil {
		return true
	}

	return false
}

// SetClassicAddress gets a reference to the given string and assigns it to the ClassicAddress field.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetClassicAddress(v string) {
	o.ClassicAddress = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetNote() string {
	if o == nil || o.Note == nil {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetNoteOk() (*string, bool) {
	if o == nil || o.Note == nil {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) HasNote() bool {
	if o != nil && o.Note != nil {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetNote(v string) {
	o.Note = &v
}

// GetRecipient returns the Recipient field value
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetRecipient() []CreateSingleTransactionRequestFromAddressWithoutFeePriorityRIRecipientInner {
	if o == nil {
		var ret []CreateSingleTransactionRequestFromAddressWithoutFeePriorityRIRecipientInner
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetRecipientOk() ([]CreateSingleTransactionRequestFromAddressWithoutFeePriorityRIRecipientInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipient, true
}

// SetRecipient sets field value
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetRecipient(v []CreateSingleTransactionRequestFromAddressWithoutFeePriorityRIRecipientInner) {
	o.Recipient = v
}

// GetSender returns the Sender field value
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetSender() CreateSingleTransactionRequestFromAddressWithoutFeePriorityRISender {
	if o == nil {
		var ret CreateSingleTransactionRequestFromAddressWithoutFeePriorityRISender
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetSenderOk() (*CreateSingleTransactionRequestFromAddressWithoutFeePriorityRISender, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetSender(v CreateSingleTransactionRequestFromAddressWithoutFeePriorityRISender) {
	o.Sender = v
}

// GetTransactionRequestId returns the TransactionRequestId field value
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetTransactionRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionRequestId
}

// GetTransactionRequestIdOk returns a tuple with the TransactionRequestId field value
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetTransactionRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionRequestId, true
}

// SetTransactionRequestId sets field value
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetTransactionRequestId(v string) {
	o.TransactionRequestId = v
}

// GetTransactionRequestStatus returns the TransactionRequestStatus field value
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetTransactionRequestStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionRequestStatus
}

// GetTransactionRequestStatusOk returns a tuple with the TransactionRequestStatus field value
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetTransactionRequestStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionRequestStatus, true
}

// SetTransactionRequestStatus sets field value
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetTransactionRequestStatus(v string) {
	o.TransactionRequestStatus = v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetTotalAmount() CreateSingleTransactionRequestFromAddressWithoutFeePriorityRITotalAmount {
	if o == nil || o.TotalAmount == nil {
		var ret CreateSingleTransactionRequestFromAddressWithoutFeePriorityRITotalAmount
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) GetTotalAmountOk() (*CreateSingleTransactionRequestFromAddressWithoutFeePriorityRITotalAmount, bool) {
	if o == nil || o.TotalAmount == nil {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) HasTotalAmount() bool {
	if o != nil && o.TotalAmount != nil {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given CreateSingleTransactionRequestFromAddressWithoutFeePriorityRITotalAmount and assigns it to the TotalAmount field.
func (o *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) SetTotalAmount(v CreateSingleTransactionRequestFromAddressWithoutFeePriorityRITotalAmount) {
	o.TotalAmount = &v
}

func (o CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CallbackSecretKey != nil {
		toSerialize["callbackSecretKey"] = o.CallbackSecretKey
	}
	if o.CallbackUrl != nil {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if o.ClassicAddress != nil {
		toSerialize["classicAddress"] = o.ClassicAddress
	}
	if o.Note != nil {
		toSerialize["note"] = o.Note
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["sender"] = o.Sender
	}
	if true {
		toSerialize["transactionRequestId"] = o.TransactionRequestId
	}
	if true {
		toSerialize["transactionRequestStatus"] = o.TransactionRequestStatus
	}
	if o.TotalAmount != nil {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI struct {
	value *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI
	isSet bool
}

func (v NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) Get() *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI {
	return v.value
}

func (v *NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) Set(val *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI(val *CreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) *NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI {
	return &NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI{value: val, isSet: true}
}

func (v NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSingleTransactionRequestFromAddressWithoutFeePriorityRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


