/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// GetTokenDetailsByContractAddressRI struct for GetTokenDetailsByContractAddressRI
type GetTokenDetailsByContractAddressRI struct {
	// Defines the number of decimals that the token possesses.
	TokenDecimals string `json:"tokenDecimals"`
	// Specifies the token's name.
	TokenName *string `json:"tokenName,omitempty"`
	// Defines the unique symbol of the token.
	TokenSymbol *string `json:"tokenSymbol,omitempty"`
	// Defines the type of the token.
	TokenType string `json:"tokenType"`
	// Defines the total number of tokens created that exist on the market minus the ones that have been burned.
	TotalSupply string `json:"totalSupply"`
}

// NewGetTokenDetailsByContractAddressRI instantiates a new GetTokenDetailsByContractAddressRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTokenDetailsByContractAddressRI(tokenDecimals string, tokenType string, totalSupply string) *GetTokenDetailsByContractAddressRI {
	this := GetTokenDetailsByContractAddressRI{}
	this.TokenDecimals = tokenDecimals
	this.TokenType = tokenType
	this.TotalSupply = totalSupply
	return &this
}

// NewGetTokenDetailsByContractAddressRIWithDefaults instantiates a new GetTokenDetailsByContractAddressRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTokenDetailsByContractAddressRIWithDefaults() *GetTokenDetailsByContractAddressRI {
	this := GetTokenDetailsByContractAddressRI{}
	return &this
}

// GetTokenDecimals returns the TokenDecimals field value
func (o *GetTokenDetailsByContractAddressRI) GetTokenDecimals() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenDecimals
}

// GetTokenDecimalsOk returns a tuple with the TokenDecimals field value
// and a boolean to check if the value has been set.
func (o *GetTokenDetailsByContractAddressRI) GetTokenDecimalsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenDecimals, true
}

// SetTokenDecimals sets field value
func (o *GetTokenDetailsByContractAddressRI) SetTokenDecimals(v string) {
	o.TokenDecimals = v
}

// GetTokenName returns the TokenName field value if set, zero value otherwise.
func (o *GetTokenDetailsByContractAddressRI) GetTokenName() string {
	if o == nil || o.TokenName == nil {
		var ret string
		return ret
	}
	return *o.TokenName
}

// GetTokenNameOk returns a tuple with the TokenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTokenDetailsByContractAddressRI) GetTokenNameOk() (*string, bool) {
	if o == nil || o.TokenName == nil {
		return nil, false
	}
	return o.TokenName, true
}

// HasTokenName returns a boolean if a field has been set.
func (o *GetTokenDetailsByContractAddressRI) HasTokenName() bool {
	if o != nil && o.TokenName != nil {
		return true
	}

	return false
}

// SetTokenName gets a reference to the given string and assigns it to the TokenName field.
func (o *GetTokenDetailsByContractAddressRI) SetTokenName(v string) {
	o.TokenName = &v
}

// GetTokenSymbol returns the TokenSymbol field value if set, zero value otherwise.
func (o *GetTokenDetailsByContractAddressRI) GetTokenSymbol() string {
	if o == nil || o.TokenSymbol == nil {
		var ret string
		return ret
	}
	return *o.TokenSymbol
}

// GetTokenSymbolOk returns a tuple with the TokenSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTokenDetailsByContractAddressRI) GetTokenSymbolOk() (*string, bool) {
	if o == nil || o.TokenSymbol == nil {
		return nil, false
	}
	return o.TokenSymbol, true
}

// HasTokenSymbol returns a boolean if a field has been set.
func (o *GetTokenDetailsByContractAddressRI) HasTokenSymbol() bool {
	if o != nil && o.TokenSymbol != nil {
		return true
	}

	return false
}

// SetTokenSymbol gets a reference to the given string and assigns it to the TokenSymbol field.
func (o *GetTokenDetailsByContractAddressRI) SetTokenSymbol(v string) {
	o.TokenSymbol = &v
}

// GetTokenType returns the TokenType field value
func (o *GetTokenDetailsByContractAddressRI) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *GetTokenDetailsByContractAddressRI) GetTokenTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *GetTokenDetailsByContractAddressRI) SetTokenType(v string) {
	o.TokenType = v
}

// GetTotalSupply returns the TotalSupply field value
func (o *GetTokenDetailsByContractAddressRI) GetTotalSupply() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalSupply
}

// GetTotalSupplyOk returns a tuple with the TotalSupply field value
// and a boolean to check if the value has been set.
func (o *GetTokenDetailsByContractAddressRI) GetTotalSupplyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalSupply, true
}

// SetTotalSupply sets field value
func (o *GetTokenDetailsByContractAddressRI) SetTotalSupply(v string) {
	o.TotalSupply = v
}

func (o GetTokenDetailsByContractAddressRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tokenDecimals"] = o.TokenDecimals
	}
	if o.TokenName != nil {
		toSerialize["tokenName"] = o.TokenName
	}
	if o.TokenSymbol != nil {
		toSerialize["tokenSymbol"] = o.TokenSymbol
	}
	if true {
		toSerialize["tokenType"] = o.TokenType
	}
	if true {
		toSerialize["totalSupply"] = o.TotalSupply
	}
	return json.Marshal(toSerialize)
}

type NullableGetTokenDetailsByContractAddressRI struct {
	value *GetTokenDetailsByContractAddressRI
	isSet bool
}

func (v NullableGetTokenDetailsByContractAddressRI) Get() *GetTokenDetailsByContractAddressRI {
	return v.value
}

func (v *NullableGetTokenDetailsByContractAddressRI) Set(val *GetTokenDetailsByContractAddressRI) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTokenDetailsByContractAddressRI) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTokenDetailsByContractAddressRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTokenDetailsByContractAddressRI(val *GetTokenDetailsByContractAddressRI) *NullableGetTokenDetailsByContractAddressRI {
	return &NullableGetTokenDetailsByContractAddressRI{value: val, isSet: true}
}

func (v NullableGetTokenDetailsByContractAddressRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTokenDetailsByContractAddressRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


