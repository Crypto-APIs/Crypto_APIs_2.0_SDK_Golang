/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token Ethereum erc-20 token
type AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token struct {
	// Represents the specific `contractAddress` of the Token that will be forwarded.
	ContractAddress string `json:"contractAddress"`
}

// NewAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token instantiates a new AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token(contractAddress string) *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token {
	this := AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token{}
	this.ContractAddress = contractAddress
	return &this
}

// NewAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20TokenWithDefaults instantiates a new AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20TokenWithDefaults() *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token {
	this := AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token{}
	return &this
}

// GetContractAddress returns the ContractAddress field value
func (o *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) GetContractAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) SetContractAddress(v string) {
	o.ContractAddress = v
}

func (o AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	return json.Marshal(toSerialize)
}

type NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token struct {
	value *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token
	isSet bool
}

func (v NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) Get() *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token {
	return v.value
}

func (v *NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) Set(val *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token(val *AddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) *NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token {
	return &NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token{value: val, isSet: true}
}

func (v NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTokensToExistingFromAddressRequestBodyTokenDataEthereumErc20Token) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


