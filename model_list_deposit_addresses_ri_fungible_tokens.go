/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListDepositAddressesRIFungibleTokens struct for ListDepositAddressesRIFungibleTokens
type ListDepositAddressesRIFungibleTokens struct {
	// Defines the amount of the fungible tokens.
	Amount string `json:"amount"`
	// Defines the specific token identifier. For Bitcoin-based transactions it should be the propertyId and for Ethereum-based transactions - the contract.
	Identifier string `json:"identifier"`
	// Defines the token's name as a string.
	Name string `json:"name"`
	// Defines the symbol of the fungible tokens.
	Symbol string `json:"symbol"`
	// Defines the decimals of the token, i.e. the number of digits that come after the decimal coma of the token.
	TokenDecimals int32 `json:"tokenDecimals"`
	// Defines the specific token type.
	Type string `json:"type"`
}

// NewListDepositAddressesRIFungibleTokens instantiates a new ListDepositAddressesRIFungibleTokens object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDepositAddressesRIFungibleTokens(amount string, identifier string, name string, symbol string, tokenDecimals int32, type_ string) *ListDepositAddressesRIFungibleTokens {
	this := ListDepositAddressesRIFungibleTokens{}
	this.Amount = amount
	this.Identifier = identifier
	this.Name = name
	this.Symbol = symbol
	this.TokenDecimals = tokenDecimals
	this.Type = type_
	return &this
}

// NewListDepositAddressesRIFungibleTokensWithDefaults instantiates a new ListDepositAddressesRIFungibleTokens object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDepositAddressesRIFungibleTokensWithDefaults() *ListDepositAddressesRIFungibleTokens {
	this := ListDepositAddressesRIFungibleTokens{}
	return &this
}

// GetAmount returns the Amount field value
func (o *ListDepositAddressesRIFungibleTokens) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ListDepositAddressesRIFungibleTokens) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ListDepositAddressesRIFungibleTokens) SetAmount(v string) {
	o.Amount = v
}

// GetIdentifier returns the Identifier field value
func (o *ListDepositAddressesRIFungibleTokens) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *ListDepositAddressesRIFungibleTokens) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *ListDepositAddressesRIFungibleTokens) SetIdentifier(v string) {
	o.Identifier = v
}

// GetName returns the Name field value
func (o *ListDepositAddressesRIFungibleTokens) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListDepositAddressesRIFungibleTokens) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListDepositAddressesRIFungibleTokens) SetName(v string) {
	o.Name = v
}

// GetSymbol returns the Symbol field value
func (o *ListDepositAddressesRIFungibleTokens) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *ListDepositAddressesRIFungibleTokens) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *ListDepositAddressesRIFungibleTokens) SetSymbol(v string) {
	o.Symbol = v
}

// GetTokenDecimals returns the TokenDecimals field value
func (o *ListDepositAddressesRIFungibleTokens) GetTokenDecimals() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TokenDecimals
}

// GetTokenDecimalsOk returns a tuple with the TokenDecimals field value
// and a boolean to check if the value has been set.
func (o *ListDepositAddressesRIFungibleTokens) GetTokenDecimalsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenDecimals, true
}

// SetTokenDecimals sets field value
func (o *ListDepositAddressesRIFungibleTokens) SetTokenDecimals(v int32) {
	o.TokenDecimals = v
}

// GetType returns the Type field value
func (o *ListDepositAddressesRIFungibleTokens) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ListDepositAddressesRIFungibleTokens) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ListDepositAddressesRIFungibleTokens) SetType(v string) {
	o.Type = v
}

func (o ListDepositAddressesRIFungibleTokens) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["identifier"] = o.Identifier
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["tokenDecimals"] = o.TokenDecimals
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableListDepositAddressesRIFungibleTokens struct {
	value *ListDepositAddressesRIFungibleTokens
	isSet bool
}

func (v NullableListDepositAddressesRIFungibleTokens) Get() *ListDepositAddressesRIFungibleTokens {
	return v.value
}

func (v *NullableListDepositAddressesRIFungibleTokens) Set(val *ListDepositAddressesRIFungibleTokens) {
	v.value = val
	v.isSet = true
}

func (v NullableListDepositAddressesRIFungibleTokens) IsSet() bool {
	return v.isSet
}

func (v *NullableListDepositAddressesRIFungibleTokens) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDepositAddressesRIFungibleTokens(val *ListDepositAddressesRIFungibleTokens) *NullableListDepositAddressesRIFungibleTokens {
	return &NullableListDepositAddressesRIFungibleTokens{value: val, isSet: true}
}

func (v NullableListDepositAddressesRIFungibleTokens) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDepositAddressesRIFungibleTokens) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


