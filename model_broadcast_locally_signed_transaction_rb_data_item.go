/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// BroadcastLocallySignedTransactionRBDataItem struct for BroadcastLocallySignedTransactionRBDataItem
type BroadcastLocallySignedTransactionRBDataItem struct {
	// Represents the Secret Key value provided by the customer. This field is used for security purposes during the callback notification, in order to prove the sender of the callback as Crypto APIs. For more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security).
	CallbackSecretKey *string `json:"callbackSecretKey,omitempty"`
	// Represents the URL that is set by the customer where the callback will be received at. The callback notification will be received only if and when the event occurs.
	CallbackUrl string `json:"callbackUrl"`
	// Represents the signed transaction's specific hex.
	SignedTransactionHex string `json:"signedTransactionHex"`
}

// NewBroadcastLocallySignedTransactionRBDataItem instantiates a new BroadcastLocallySignedTransactionRBDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBroadcastLocallySignedTransactionRBDataItem(callbackUrl string, signedTransactionHex string) *BroadcastLocallySignedTransactionRBDataItem {
	this := BroadcastLocallySignedTransactionRBDataItem{}
	this.CallbackUrl = callbackUrl
	this.SignedTransactionHex = signedTransactionHex
	return &this
}

// NewBroadcastLocallySignedTransactionRBDataItemWithDefaults instantiates a new BroadcastLocallySignedTransactionRBDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBroadcastLocallySignedTransactionRBDataItemWithDefaults() *BroadcastLocallySignedTransactionRBDataItem {
	this := BroadcastLocallySignedTransactionRBDataItem{}
	return &this
}

// GetCallbackSecretKey returns the CallbackSecretKey field value if set, zero value otherwise.
func (o *BroadcastLocallySignedTransactionRBDataItem) GetCallbackSecretKey() string {
	if o == nil || o.CallbackSecretKey == nil {
		var ret string
		return ret
	}
	return *o.CallbackSecretKey
}

// GetCallbackSecretKeyOk returns a tuple with the CallbackSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BroadcastLocallySignedTransactionRBDataItem) GetCallbackSecretKeyOk() (*string, bool) {
	if o == nil || o.CallbackSecretKey == nil {
		return nil, false
	}
	return o.CallbackSecretKey, true
}

// HasCallbackSecretKey returns a boolean if a field has been set.
func (o *BroadcastLocallySignedTransactionRBDataItem) HasCallbackSecretKey() bool {
	if o != nil && o.CallbackSecretKey != nil {
		return true
	}

	return false
}

// SetCallbackSecretKey gets a reference to the given string and assigns it to the CallbackSecretKey field.
func (o *BroadcastLocallySignedTransactionRBDataItem) SetCallbackSecretKey(v string) {
	o.CallbackSecretKey = &v
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *BroadcastLocallySignedTransactionRBDataItem) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *BroadcastLocallySignedTransactionRBDataItem) GetCallbackUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *BroadcastLocallySignedTransactionRBDataItem) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

// GetSignedTransactionHex returns the SignedTransactionHex field value
func (o *BroadcastLocallySignedTransactionRBDataItem) GetSignedTransactionHex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignedTransactionHex
}

// GetSignedTransactionHexOk returns a tuple with the SignedTransactionHex field value
// and a boolean to check if the value has been set.
func (o *BroadcastLocallySignedTransactionRBDataItem) GetSignedTransactionHexOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SignedTransactionHex, true
}

// SetSignedTransactionHex sets field value
func (o *BroadcastLocallySignedTransactionRBDataItem) SetSignedTransactionHex(v string) {
	o.SignedTransactionHex = v
}

func (o BroadcastLocallySignedTransactionRBDataItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CallbackSecretKey != nil {
		toSerialize["callbackSecretKey"] = o.CallbackSecretKey
	}
	if true {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if true {
		toSerialize["signedTransactionHex"] = o.SignedTransactionHex
	}
	return json.Marshal(toSerialize)
}

type NullableBroadcastLocallySignedTransactionRBDataItem struct {
	value *BroadcastLocallySignedTransactionRBDataItem
	isSet bool
}

func (v NullableBroadcastLocallySignedTransactionRBDataItem) Get() *BroadcastLocallySignedTransactionRBDataItem {
	return v.value
}

func (v *NullableBroadcastLocallySignedTransactionRBDataItem) Set(val *BroadcastLocallySignedTransactionRBDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBroadcastLocallySignedTransactionRBDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBroadcastLocallySignedTransactionRBDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBroadcastLocallySignedTransactionRBDataItem(val *BroadcastLocallySignedTransactionRBDataItem) *NullableBroadcastLocallySignedTransactionRBDataItem {
	return &NullableBroadcastLocallySignedTransactionRBDataItem{value: val, isSet: true}
}

func (v NullableBroadcastLocallySignedTransactionRBDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBroadcastLocallySignedTransactionRBDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


