/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// GetAddressDetailsFromCallbackRI struct for GetAddressDetailsFromCallbackRI
type GetAddressDetailsFromCallbackRI struct {
	// Defines the received transaction count to the address.
	IncomingTransactionsCount int32 `json:"incomingTransactionsCount"`
	// Defines the sent transaction count from the address.
	OutgoingTransactionsCount int32 `json:"outgoingTransactionsCount"`
	// Represents the total number of confirmed coins transactions for this address, both incoming and outgoing. Applies for coins only and not tokens transfers e.g. for Ethereum. transactionsCount could result as less than incoming and outgoing transactions put together (e.g. in Bitcoin), due to the fact that one and the same address could be in senders and receivers addresses.
	TransactionsCount int32 `json:"transactionsCount"`
	ConfirmedBalance GetAddressDetailsFromCallbackRIConfirmedBalance `json:"confirmedBalance"`
	TotalReceived GetAddressDetailsFromCallbackRITotalReceived `json:"totalReceived"`
	TotalSpent GetAddressDetailsFromCallbackRITotalSpent `json:"totalSpent"`
	// Defines the transaction input's sequence as an integer, which is is used when transactions are replaced with newer versions before LockTime.
	Sequence *int64 `json:"sequence,omitempty"`
}

// NewGetAddressDetailsFromCallbackRI instantiates a new GetAddressDetailsFromCallbackRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAddressDetailsFromCallbackRI(incomingTransactionsCount int32, outgoingTransactionsCount int32, transactionsCount int32, confirmedBalance GetAddressDetailsFromCallbackRIConfirmedBalance, totalReceived GetAddressDetailsFromCallbackRITotalReceived, totalSpent GetAddressDetailsFromCallbackRITotalSpent) *GetAddressDetailsFromCallbackRI {
	this := GetAddressDetailsFromCallbackRI{}
	this.IncomingTransactionsCount = incomingTransactionsCount
	this.OutgoingTransactionsCount = outgoingTransactionsCount
	this.TransactionsCount = transactionsCount
	this.ConfirmedBalance = confirmedBalance
	this.TotalReceived = totalReceived
	this.TotalSpent = totalSpent
	return &this
}

// NewGetAddressDetailsFromCallbackRIWithDefaults instantiates a new GetAddressDetailsFromCallbackRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAddressDetailsFromCallbackRIWithDefaults() *GetAddressDetailsFromCallbackRI {
	this := GetAddressDetailsFromCallbackRI{}
	return &this
}

// GetIncomingTransactionsCount returns the IncomingTransactionsCount field value
func (o *GetAddressDetailsFromCallbackRI) GetIncomingTransactionsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IncomingTransactionsCount
}

// GetIncomingTransactionsCountOk returns a tuple with the IncomingTransactionsCount field value
// and a boolean to check if the value has been set.
func (o *GetAddressDetailsFromCallbackRI) GetIncomingTransactionsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncomingTransactionsCount, true
}

// SetIncomingTransactionsCount sets field value
func (o *GetAddressDetailsFromCallbackRI) SetIncomingTransactionsCount(v int32) {
	o.IncomingTransactionsCount = v
}

// GetOutgoingTransactionsCount returns the OutgoingTransactionsCount field value
func (o *GetAddressDetailsFromCallbackRI) GetOutgoingTransactionsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OutgoingTransactionsCount
}

// GetOutgoingTransactionsCountOk returns a tuple with the OutgoingTransactionsCount field value
// and a boolean to check if the value has been set.
func (o *GetAddressDetailsFromCallbackRI) GetOutgoingTransactionsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutgoingTransactionsCount, true
}

// SetOutgoingTransactionsCount sets field value
func (o *GetAddressDetailsFromCallbackRI) SetOutgoingTransactionsCount(v int32) {
	o.OutgoingTransactionsCount = v
}

// GetTransactionsCount returns the TransactionsCount field value
func (o *GetAddressDetailsFromCallbackRI) GetTransactionsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactionsCount
}

// GetTransactionsCountOk returns a tuple with the TransactionsCount field value
// and a boolean to check if the value has been set.
func (o *GetAddressDetailsFromCallbackRI) GetTransactionsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionsCount, true
}

// SetTransactionsCount sets field value
func (o *GetAddressDetailsFromCallbackRI) SetTransactionsCount(v int32) {
	o.TransactionsCount = v
}

// GetConfirmedBalance returns the ConfirmedBalance field value
func (o *GetAddressDetailsFromCallbackRI) GetConfirmedBalance() GetAddressDetailsFromCallbackRIConfirmedBalance {
	if o == nil {
		var ret GetAddressDetailsFromCallbackRIConfirmedBalance
		return ret
	}

	return o.ConfirmedBalance
}

// GetConfirmedBalanceOk returns a tuple with the ConfirmedBalance field value
// and a boolean to check if the value has been set.
func (o *GetAddressDetailsFromCallbackRI) GetConfirmedBalanceOk() (*GetAddressDetailsFromCallbackRIConfirmedBalance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfirmedBalance, true
}

// SetConfirmedBalance sets field value
func (o *GetAddressDetailsFromCallbackRI) SetConfirmedBalance(v GetAddressDetailsFromCallbackRIConfirmedBalance) {
	o.ConfirmedBalance = v
}

// GetTotalReceived returns the TotalReceived field value
func (o *GetAddressDetailsFromCallbackRI) GetTotalReceived() GetAddressDetailsFromCallbackRITotalReceived {
	if o == nil {
		var ret GetAddressDetailsFromCallbackRITotalReceived
		return ret
	}

	return o.TotalReceived
}

// GetTotalReceivedOk returns a tuple with the TotalReceived field value
// and a boolean to check if the value has been set.
func (o *GetAddressDetailsFromCallbackRI) GetTotalReceivedOk() (*GetAddressDetailsFromCallbackRITotalReceived, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalReceived, true
}

// SetTotalReceived sets field value
func (o *GetAddressDetailsFromCallbackRI) SetTotalReceived(v GetAddressDetailsFromCallbackRITotalReceived) {
	o.TotalReceived = v
}

// GetTotalSpent returns the TotalSpent field value
func (o *GetAddressDetailsFromCallbackRI) GetTotalSpent() GetAddressDetailsFromCallbackRITotalSpent {
	if o == nil {
		var ret GetAddressDetailsFromCallbackRITotalSpent
		return ret
	}

	return o.TotalSpent
}

// GetTotalSpentOk returns a tuple with the TotalSpent field value
// and a boolean to check if the value has been set.
func (o *GetAddressDetailsFromCallbackRI) GetTotalSpentOk() (*GetAddressDetailsFromCallbackRITotalSpent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalSpent, true
}

// SetTotalSpent sets field value
func (o *GetAddressDetailsFromCallbackRI) SetTotalSpent(v GetAddressDetailsFromCallbackRITotalSpent) {
	o.TotalSpent = v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *GetAddressDetailsFromCallbackRI) GetSequence() int64 {
	if o == nil || o.Sequence == nil {
		var ret int64
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAddressDetailsFromCallbackRI) GetSequenceOk() (*int64, bool) {
	if o == nil || o.Sequence == nil {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *GetAddressDetailsFromCallbackRI) HasSequence() bool {
	if o != nil && o.Sequence != nil {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int64 and assigns it to the Sequence field.
func (o *GetAddressDetailsFromCallbackRI) SetSequence(v int64) {
	o.Sequence = &v
}

func (o GetAddressDetailsFromCallbackRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["incomingTransactionsCount"] = o.IncomingTransactionsCount
	}
	if true {
		toSerialize["outgoingTransactionsCount"] = o.OutgoingTransactionsCount
	}
	if true {
		toSerialize["transactionsCount"] = o.TransactionsCount
	}
	if true {
		toSerialize["confirmedBalance"] = o.ConfirmedBalance
	}
	if true {
		toSerialize["totalReceived"] = o.TotalReceived
	}
	if true {
		toSerialize["totalSpent"] = o.TotalSpent
	}
	if o.Sequence != nil {
		toSerialize["sequence"] = o.Sequence
	}
	return json.Marshal(toSerialize)
}

type NullableGetAddressDetailsFromCallbackRI struct {
	value *GetAddressDetailsFromCallbackRI
	isSet bool
}

func (v NullableGetAddressDetailsFromCallbackRI) Get() *GetAddressDetailsFromCallbackRI {
	return v.value
}

func (v *NullableGetAddressDetailsFromCallbackRI) Set(val *GetAddressDetailsFromCallbackRI) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAddressDetailsFromCallbackRI) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAddressDetailsFromCallbackRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAddressDetailsFromCallbackRI(val *GetAddressDetailsFromCallbackRI) *NullableGetAddressDetailsFromCallbackRI {
	return &NullableGetAddressDetailsFromCallbackRI{value: val, isSet: true}
}

func (v NullableGetAddressDetailsFromCallbackRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAddressDetailsFromCallbackRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


