/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateAutomaticTokensForwardingRITSET Ethereum Token
type CreateAutomaticTokensForwardingRITSET struct {
	// Represents the specific `contractAddress` of the Token that will be forwarded.
	ContractAddress string `json:"contractAddress"`
}

// NewCreateAutomaticTokensForwardingRITSET instantiates a new CreateAutomaticTokensForwardingRITSET object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAutomaticTokensForwardingRITSET(contractAddress string) *CreateAutomaticTokensForwardingRITSET {
	this := CreateAutomaticTokensForwardingRITSET{}
	this.ContractAddress = contractAddress
	return &this
}

// NewCreateAutomaticTokensForwardingRITSETWithDefaults instantiates a new CreateAutomaticTokensForwardingRITSET object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAutomaticTokensForwardingRITSETWithDefaults() *CreateAutomaticTokensForwardingRITSET {
	this := CreateAutomaticTokensForwardingRITSET{}
	return &this
}

// GetContractAddress returns the ContractAddress field value
func (o *CreateAutomaticTokensForwardingRITSET) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *CreateAutomaticTokensForwardingRITSET) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *CreateAutomaticTokensForwardingRITSET) SetContractAddress(v string) {
	o.ContractAddress = v
}

func (o CreateAutomaticTokensForwardingRITSET) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAutomaticTokensForwardingRITSET struct {
	value *CreateAutomaticTokensForwardingRITSET
	isSet bool
}

func (v NullableCreateAutomaticTokensForwardingRITSET) Get() *CreateAutomaticTokensForwardingRITSET {
	return v.value
}

func (v *NullableCreateAutomaticTokensForwardingRITSET) Set(val *CreateAutomaticTokensForwardingRITSET) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAutomaticTokensForwardingRITSET) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAutomaticTokensForwardingRITSET) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAutomaticTokensForwardingRITSET(val *CreateAutomaticTokensForwardingRITSET) *NullableCreateAutomaticTokensForwardingRITSET {
	return &NullableCreateAutomaticTokensForwardingRITSET{value: val, isSet: true}
}

func (v NullableCreateAutomaticTokensForwardingRITSET) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAutomaticTokensForwardingRITSET) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


