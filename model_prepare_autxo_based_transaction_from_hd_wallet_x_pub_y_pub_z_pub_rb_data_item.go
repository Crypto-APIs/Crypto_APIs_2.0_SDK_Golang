/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem struct for PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem
type PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem struct {
	// Representation of the additional data.
	AdditionalData *string `json:"additionalData,omitempty"`
	Fee PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemFee `json:"fee"`
	// Represents the time at which a particular transaction can be added to the blockchain.
	Locktime *int32 `json:"locktime,omitempty"`
	// Representation of the transaction's strategy type
	PrepareStrategy *string `json:"prepareStrategy,omitempty"`
	// Represents a list of recipient addresses with the respective amounts. In account-based protocols like Ethereum there is only one address in this list.
	Recipients []PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemRecipientsInner `json:"recipients"`
	// Representation of whether the transaction is replaceable
	Replaceable *bool `json:"replaceable,omitempty"`
	// Defines the account extended publicly known key which is used to derive all child public keys.
	Xpub string `json:"xpub"`
}

// NewPrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem instantiates a new PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem(fee PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemFee, recipients []PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemRecipientsInner, xpub string) *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem {
	this := PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem{}
	this.Fee = fee
	this.Recipients = recipients
	this.Xpub = xpub
	return &this
}

// NewPrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemWithDefaults instantiates a new PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemWithDefaults() *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem {
	this := PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem{}
	return &this
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetAdditionalData() string {
	if o == nil || o.AdditionalData == nil {
		var ret string
		return ret
	}
	return *o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetAdditionalDataOk() (*string, bool) {
	if o == nil || o.AdditionalData == nil {
		return nil, false
	}
	return o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) HasAdditionalData() bool {
	if o != nil && o.AdditionalData != nil {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given string and assigns it to the AdditionalData field.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) SetAdditionalData(v string) {
	o.AdditionalData = &v
}

// GetFee returns the Fee field value
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetFee() PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemFee {
	if o == nil {
		var ret PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemFee
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetFeeOk() (*PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemFee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) SetFee(v PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemFee) {
	o.Fee = v
}

// GetLocktime returns the Locktime field value if set, zero value otherwise.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetLocktime() int32 {
	if o == nil || o.Locktime == nil {
		var ret int32
		return ret
	}
	return *o.Locktime
}

// GetLocktimeOk returns a tuple with the Locktime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetLocktimeOk() (*int32, bool) {
	if o == nil || o.Locktime == nil {
		return nil, false
	}
	return o.Locktime, true
}

// HasLocktime returns a boolean if a field has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) HasLocktime() bool {
	if o != nil && o.Locktime != nil {
		return true
	}

	return false
}

// SetLocktime gets a reference to the given int32 and assigns it to the Locktime field.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) SetLocktime(v int32) {
	o.Locktime = &v
}

// GetPrepareStrategy returns the PrepareStrategy field value if set, zero value otherwise.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetPrepareStrategy() string {
	if o == nil || o.PrepareStrategy == nil {
		var ret string
		return ret
	}
	return *o.PrepareStrategy
}

// GetPrepareStrategyOk returns a tuple with the PrepareStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetPrepareStrategyOk() (*string, bool) {
	if o == nil || o.PrepareStrategy == nil {
		return nil, false
	}
	return o.PrepareStrategy, true
}

// HasPrepareStrategy returns a boolean if a field has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) HasPrepareStrategy() bool {
	if o != nil && o.PrepareStrategy != nil {
		return true
	}

	return false
}

// SetPrepareStrategy gets a reference to the given string and assigns it to the PrepareStrategy field.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) SetPrepareStrategy(v string) {
	o.PrepareStrategy = &v
}

// GetRecipients returns the Recipients field value
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetRecipients() []PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemRecipientsInner {
	if o == nil {
		var ret []PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemRecipientsInner
		return ret
	}

	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value
// and a boolean to check if the value has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetRecipientsOk() ([]PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemRecipientsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipients, true
}

// SetRecipients sets field value
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) SetRecipients(v []PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItemRecipientsInner) {
	o.Recipients = v
}

// GetReplaceable returns the Replaceable field value if set, zero value otherwise.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetReplaceable() bool {
	if o == nil || o.Replaceable == nil {
		var ret bool
		return ret
	}
	return *o.Replaceable
}

// GetReplaceableOk returns a tuple with the Replaceable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetReplaceableOk() (*bool, bool) {
	if o == nil || o.Replaceable == nil {
		return nil, false
	}
	return o.Replaceable, true
}

// HasReplaceable returns a boolean if a field has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) HasReplaceable() bool {
	if o != nil && o.Replaceable != nil {
		return true
	}

	return false
}

// SetReplaceable gets a reference to the given bool and assigns it to the Replaceable field.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) SetReplaceable(v bool) {
	o.Replaceable = &v
}

// GetXpub returns the Xpub field value
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetXpub() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Xpub
}

// GetXpubOk returns a tuple with the Xpub field value
// and a boolean to check if the value has been set.
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) GetXpubOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Xpub, true
}

// SetXpub sets field value
func (o *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) SetXpub(v string) {
	o.Xpub = v
}

func (o PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalData != nil {
		toSerialize["additionalData"] = o.AdditionalData
	}
	if true {
		toSerialize["fee"] = o.Fee
	}
	if o.Locktime != nil {
		toSerialize["locktime"] = o.Locktime
	}
	if o.PrepareStrategy != nil {
		toSerialize["prepareStrategy"] = o.PrepareStrategy
	}
	if true {
		toSerialize["recipients"] = o.Recipients
	}
	if o.Replaceable != nil {
		toSerialize["replaceable"] = o.Replaceable
	}
	if true {
		toSerialize["xpub"] = o.Xpub
	}
	return json.Marshal(toSerialize)
}

type NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem struct {
	value *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem
	isSet bool
}

func (v NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) Get() *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem {
	return v.value
}

func (v *NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) Set(val *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem(val *PrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) *NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem {
	return &NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem{value: val, isSet: true}
}

func (v NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepareAUTXOBasedTransactionFromHDWalletXPubYPubZPubRBDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


