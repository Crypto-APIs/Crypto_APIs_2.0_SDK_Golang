/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// DeriveAndSyncNewChangeAddressesRI struct for DeriveAndSyncNewChangeAddressesRI
type DeriveAndSyncNewChangeAddressesRI struct {
	// Represents the public address, which is a compressed and shortened form of a public key.
	Address string `json:"address"`
	// Represents the format of the address.
	AddressFormat string `json:"addressFormat"`
	// Defines the address type.
	AddressType string `json:"addressType"`
	// Represents the derivation type.
	DerivationType string `json:"derivationType"`
	// Represents the output index. It refers to the UTXO sequence in the transaction outputs (vout).
	Index string `json:"index"`
}

// NewDeriveAndSyncNewChangeAddressesRI instantiates a new DeriveAndSyncNewChangeAddressesRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeriveAndSyncNewChangeAddressesRI(address string, addressFormat string, addressType string, derivationType string, index string) *DeriveAndSyncNewChangeAddressesRI {
	this := DeriveAndSyncNewChangeAddressesRI{}
	this.Address = address
	this.AddressFormat = addressFormat
	this.AddressType = addressType
	this.DerivationType = derivationType
	this.Index = index
	return &this
}

// NewDeriveAndSyncNewChangeAddressesRIWithDefaults instantiates a new DeriveAndSyncNewChangeAddressesRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeriveAndSyncNewChangeAddressesRIWithDefaults() *DeriveAndSyncNewChangeAddressesRI {
	this := DeriveAndSyncNewChangeAddressesRI{}
	return &this
}

// GetAddress returns the Address field value
func (o *DeriveAndSyncNewChangeAddressesRI) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *DeriveAndSyncNewChangeAddressesRI) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *DeriveAndSyncNewChangeAddressesRI) SetAddress(v string) {
	o.Address = v
}

// GetAddressFormat returns the AddressFormat field value
func (o *DeriveAndSyncNewChangeAddressesRI) GetAddressFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressFormat
}

// GetAddressFormatOk returns a tuple with the AddressFormat field value
// and a boolean to check if the value has been set.
func (o *DeriveAndSyncNewChangeAddressesRI) GetAddressFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressFormat, true
}

// SetAddressFormat sets field value
func (o *DeriveAndSyncNewChangeAddressesRI) SetAddressFormat(v string) {
	o.AddressFormat = v
}

// GetAddressType returns the AddressType field value
func (o *DeriveAndSyncNewChangeAddressesRI) GetAddressType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressType
}

// GetAddressTypeOk returns a tuple with the AddressType field value
// and a boolean to check if the value has been set.
func (o *DeriveAndSyncNewChangeAddressesRI) GetAddressTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressType, true
}

// SetAddressType sets field value
func (o *DeriveAndSyncNewChangeAddressesRI) SetAddressType(v string) {
	o.AddressType = v
}

// GetDerivationType returns the DerivationType field value
func (o *DeriveAndSyncNewChangeAddressesRI) GetDerivationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DerivationType
}

// GetDerivationTypeOk returns a tuple with the DerivationType field value
// and a boolean to check if the value has been set.
func (o *DeriveAndSyncNewChangeAddressesRI) GetDerivationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DerivationType, true
}

// SetDerivationType sets field value
func (o *DeriveAndSyncNewChangeAddressesRI) SetDerivationType(v string) {
	o.DerivationType = v
}

// GetIndex returns the Index field value
func (o *DeriveAndSyncNewChangeAddressesRI) GetIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *DeriveAndSyncNewChangeAddressesRI) GetIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *DeriveAndSyncNewChangeAddressesRI) SetIndex(v string) {
	o.Index = v
}

func (o DeriveAndSyncNewChangeAddressesRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["addressFormat"] = o.AddressFormat
	}
	if true {
		toSerialize["addressType"] = o.AddressType
	}
	if true {
		toSerialize["derivationType"] = o.DerivationType
	}
	if true {
		toSerialize["index"] = o.Index
	}
	return json.Marshal(toSerialize)
}

type NullableDeriveAndSyncNewChangeAddressesRI struct {
	value *DeriveAndSyncNewChangeAddressesRI
	isSet bool
}

func (v NullableDeriveAndSyncNewChangeAddressesRI) Get() *DeriveAndSyncNewChangeAddressesRI {
	return v.value
}

func (v *NullableDeriveAndSyncNewChangeAddressesRI) Set(val *DeriveAndSyncNewChangeAddressesRI) {
	v.value = val
	v.isSet = true
}

func (v NullableDeriveAndSyncNewChangeAddressesRI) IsSet() bool {
	return v.isSet
}

func (v *NullableDeriveAndSyncNewChangeAddressesRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeriveAndSyncNewChangeAddressesRI(val *DeriveAndSyncNewChangeAddressesRI) *NullableDeriveAndSyncNewChangeAddressesRI {
	return &NullableDeriveAndSyncNewChangeAddressesRI{value: val, isSet: true}
}

func (v NullableDeriveAndSyncNewChangeAddressesRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeriveAndSyncNewChangeAddressesRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


