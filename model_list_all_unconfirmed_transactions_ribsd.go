/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// ListAllUnconfirmedTransactionsRIBSD Dogecoin
type ListAllUnconfirmedTransactionsRIBSD struct {
	// Represents the locktime on the transaction on the specific blockchain, i.e. the blockheight at which the transaction is valid.
	Locktime int32 `json:"locktime"`
	// Represents the total size of this transaction.
	Size int32 `json:"size"`
	// Defines the version of the transaction.
	Version int32 `json:"version"`
	// Represents the transaction inputs.
	Vin []ListAllUnconfirmedTransactionsRIBSDVin `json:"vin"`
	// Represents the transaction outputs.
	Vout []GetTransactionDetailsByTransactionIDRIBSDVout `json:"vout"`
}

// NewListAllUnconfirmedTransactionsRIBSD instantiates a new ListAllUnconfirmedTransactionsRIBSD object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAllUnconfirmedTransactionsRIBSD(locktime int32, size int32, version int32, vin []ListAllUnconfirmedTransactionsRIBSDVin, vout []GetTransactionDetailsByTransactionIDRIBSDVout) *ListAllUnconfirmedTransactionsRIBSD {
	this := ListAllUnconfirmedTransactionsRIBSD{}
	this.Locktime = locktime
	this.Size = size
	this.Version = version
	this.Vin = vin
	this.Vout = vout
	return &this
}

// NewListAllUnconfirmedTransactionsRIBSDWithDefaults instantiates a new ListAllUnconfirmedTransactionsRIBSD object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAllUnconfirmedTransactionsRIBSDWithDefaults() *ListAllUnconfirmedTransactionsRIBSD {
	this := ListAllUnconfirmedTransactionsRIBSD{}
	return &this
}

// GetLocktime returns the Locktime field value
func (o *ListAllUnconfirmedTransactionsRIBSD) GetLocktime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Locktime
}

// GetLocktimeOk returns a tuple with the Locktime field value
// and a boolean to check if the value has been set.
func (o *ListAllUnconfirmedTransactionsRIBSD) GetLocktimeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Locktime, true
}

// SetLocktime sets field value
func (o *ListAllUnconfirmedTransactionsRIBSD) SetLocktime(v int32) {
	o.Locktime = v
}

// GetSize returns the Size field value
func (o *ListAllUnconfirmedTransactionsRIBSD) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ListAllUnconfirmedTransactionsRIBSD) GetSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ListAllUnconfirmedTransactionsRIBSD) SetSize(v int32) {
	o.Size = v
}

// GetVersion returns the Version field value
func (o *ListAllUnconfirmedTransactionsRIBSD) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ListAllUnconfirmedTransactionsRIBSD) GetVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ListAllUnconfirmedTransactionsRIBSD) SetVersion(v int32) {
	o.Version = v
}

// GetVin returns the Vin field value
func (o *ListAllUnconfirmedTransactionsRIBSD) GetVin() []ListAllUnconfirmedTransactionsRIBSDVin {
	if o == nil {
		var ret []ListAllUnconfirmedTransactionsRIBSDVin
		return ret
	}

	return o.Vin
}

// GetVinOk returns a tuple with the Vin field value
// and a boolean to check if the value has been set.
func (o *ListAllUnconfirmedTransactionsRIBSD) GetVinOk() (*[]ListAllUnconfirmedTransactionsRIBSDVin, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Vin, true
}

// SetVin sets field value
func (o *ListAllUnconfirmedTransactionsRIBSD) SetVin(v []ListAllUnconfirmedTransactionsRIBSDVin) {
	o.Vin = v
}

// GetVout returns the Vout field value
func (o *ListAllUnconfirmedTransactionsRIBSD) GetVout() []GetTransactionDetailsByTransactionIDRIBSDVout {
	if o == nil {
		var ret []GetTransactionDetailsByTransactionIDRIBSDVout
		return ret
	}

	return o.Vout
}

// GetVoutOk returns a tuple with the Vout field value
// and a boolean to check if the value has been set.
func (o *ListAllUnconfirmedTransactionsRIBSD) GetVoutOk() (*[]GetTransactionDetailsByTransactionIDRIBSDVout, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Vout, true
}

// SetVout sets field value
func (o *ListAllUnconfirmedTransactionsRIBSD) SetVout(v []GetTransactionDetailsByTransactionIDRIBSDVout) {
	o.Vout = v
}

func (o ListAllUnconfirmedTransactionsRIBSD) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["locktime"] = o.Locktime
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["vin"] = o.Vin
	}
	if true {
		toSerialize["vout"] = o.Vout
	}
	return json.Marshal(toSerialize)
}

type NullableListAllUnconfirmedTransactionsRIBSD struct {
	value *ListAllUnconfirmedTransactionsRIBSD
	isSet bool
}

func (v NullableListAllUnconfirmedTransactionsRIBSD) Get() *ListAllUnconfirmedTransactionsRIBSD {
	return v.value
}

func (v *NullableListAllUnconfirmedTransactionsRIBSD) Set(val *ListAllUnconfirmedTransactionsRIBSD) {
	v.value = val
	v.isSet = true
}

func (v NullableListAllUnconfirmedTransactionsRIBSD) IsSet() bool {
	return v.isSet
}

func (v *NullableListAllUnconfirmedTransactionsRIBSD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAllUnconfirmedTransactionsRIBSD(val *ListAllUnconfirmedTransactionsRIBSD) *NullableListAllUnconfirmedTransactionsRIBSD {
	return &NullableListAllUnconfirmedTransactionsRIBSD{value: val, isSet: true}
}

func (v NullableListAllUnconfirmedTransactionsRIBSD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAllUnconfirmedTransactionsRIBSD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


