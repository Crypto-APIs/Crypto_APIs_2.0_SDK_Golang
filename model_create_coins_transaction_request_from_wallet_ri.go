/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateCoinsTransactionRequestFromWalletRI struct for CreateCoinsTransactionRequestFromWalletRI
type CreateCoinsTransactionRequestFromWalletRI struct {
	// Represents the Secret Key value provided by the customer. This field is used for security purposes during the callback notification, in order to prove the sender of the callback as Crypto APIs.  For more information please see our [Documentation](https://developers.cryptoapis.io/technical-documentation/general-information/callbacks#callback-security).
	CallbackSecretKey *string `json:"callbackSecretKey,omitempty"`
	// Represents the URL that is set by the customer where the callback will be received at. The callback notification will be received only if and when the event occurs. `We support ONLY httpS type of protocol`.
	CallbackUrl *string `json:"callbackUrl,omitempty"`
	// Represents the fee priority of the automation, whether it is \"slow\", \"standard\" or \"fast\".
	FeePriority string `json:"feePriority"`
	// Represents an optional note to add a free text in, explaining or providing additional detail on the transaction request.
	Note *string `json:"note,omitempty"`
	// Defines the destination of the transaction, whether it is incoming or outgoing.
	Recipients []CreateCoinsTransactionRequestFromWalletRIRecipients `json:"recipients"`
	// Represents the specific amount of the transaction.
	TotalTransactionAmount string `json:"totalTransactionAmount"`
	// Represents a unique identifier of the transaction request (the request sent to make a transaction), which helps in identifying which callback and which `referenceId` concern that specific transaction request.
	TransactionRequestId string `json:"transactionRequestId"`
	// Defines the status of the transaction, e.g. \"created, \"await_approval\", \"pending\", \"prepared\", \"signed\", \"broadcasted\", \"success\", \"failed\", \"rejected\", mined\".
	TransactionRequestStatus string `json:"transactionRequestStatus"`
}

// NewCreateCoinsTransactionRequestFromWalletRI instantiates a new CreateCoinsTransactionRequestFromWalletRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCoinsTransactionRequestFromWalletRI(feePriority string, recipients []CreateCoinsTransactionRequestFromWalletRIRecipients, totalTransactionAmount string, transactionRequestId string, transactionRequestStatus string) *CreateCoinsTransactionRequestFromWalletRI {
	this := CreateCoinsTransactionRequestFromWalletRI{}
	this.FeePriority = feePriority
	this.Recipients = recipients
	this.TotalTransactionAmount = totalTransactionAmount
	this.TransactionRequestId = transactionRequestId
	this.TransactionRequestStatus = transactionRequestStatus
	return &this
}

// NewCreateCoinsTransactionRequestFromWalletRIWithDefaults instantiates a new CreateCoinsTransactionRequestFromWalletRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCoinsTransactionRequestFromWalletRIWithDefaults() *CreateCoinsTransactionRequestFromWalletRI {
	this := CreateCoinsTransactionRequestFromWalletRI{}
	return &this
}

// GetCallbackSecretKey returns the CallbackSecretKey field value if set, zero value otherwise.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetCallbackSecretKey() string {
	if o == nil || o.CallbackSecretKey == nil {
		var ret string
		return ret
	}
	return *o.CallbackSecretKey
}

// GetCallbackSecretKeyOk returns a tuple with the CallbackSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetCallbackSecretKeyOk() (*string, bool) {
	if o == nil || o.CallbackSecretKey == nil {
		return nil, false
	}
	return o.CallbackSecretKey, true
}

// HasCallbackSecretKey returns a boolean if a field has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) HasCallbackSecretKey() bool {
	if o != nil && o.CallbackSecretKey != nil {
		return true
	}

	return false
}

// SetCallbackSecretKey gets a reference to the given string and assigns it to the CallbackSecretKey field.
func (o *CreateCoinsTransactionRequestFromWalletRI) SetCallbackSecretKey(v string) {
	o.CallbackSecretKey = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetCallbackUrl() string {
	if o == nil || o.CallbackUrl == nil {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetCallbackUrlOk() (*string, bool) {
	if o == nil || o.CallbackUrl == nil {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl != nil {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *CreateCoinsTransactionRequestFromWalletRI) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetFeePriority returns the FeePriority field value
func (o *CreateCoinsTransactionRequestFromWalletRI) GetFeePriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeePriority
}

// GetFeePriorityOk returns a tuple with the FeePriority field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetFeePriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeePriority, true
}

// SetFeePriority sets field value
func (o *CreateCoinsTransactionRequestFromWalletRI) SetFeePriority(v string) {
	o.FeePriority = v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetNote() string {
	if o == nil || o.Note == nil {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetNoteOk() (*string, bool) {
	if o == nil || o.Note == nil {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) HasNote() bool {
	if o != nil && o.Note != nil {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *CreateCoinsTransactionRequestFromWalletRI) SetNote(v string) {
	o.Note = &v
}

// GetRecipients returns the Recipients field value
func (o *CreateCoinsTransactionRequestFromWalletRI) GetRecipients() []CreateCoinsTransactionRequestFromWalletRIRecipients {
	if o == nil {
		var ret []CreateCoinsTransactionRequestFromWalletRIRecipients
		return ret
	}

	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetRecipientsOk() ([]CreateCoinsTransactionRequestFromWalletRIRecipients, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipients, true
}

// SetRecipients sets field value
func (o *CreateCoinsTransactionRequestFromWalletRI) SetRecipients(v []CreateCoinsTransactionRequestFromWalletRIRecipients) {
	o.Recipients = v
}

// GetTotalTransactionAmount returns the TotalTransactionAmount field value
func (o *CreateCoinsTransactionRequestFromWalletRI) GetTotalTransactionAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalTransactionAmount
}

// GetTotalTransactionAmountOk returns a tuple with the TotalTransactionAmount field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetTotalTransactionAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTransactionAmount, true
}

// SetTotalTransactionAmount sets field value
func (o *CreateCoinsTransactionRequestFromWalletRI) SetTotalTransactionAmount(v string) {
	o.TotalTransactionAmount = v
}

// GetTransactionRequestId returns the TransactionRequestId field value
func (o *CreateCoinsTransactionRequestFromWalletRI) GetTransactionRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionRequestId
}

// GetTransactionRequestIdOk returns a tuple with the TransactionRequestId field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetTransactionRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionRequestId, true
}

// SetTransactionRequestId sets field value
func (o *CreateCoinsTransactionRequestFromWalletRI) SetTransactionRequestId(v string) {
	o.TransactionRequestId = v
}

// GetTransactionRequestStatus returns the TransactionRequestStatus field value
func (o *CreateCoinsTransactionRequestFromWalletRI) GetTransactionRequestStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionRequestStatus
}

// GetTransactionRequestStatusOk returns a tuple with the TransactionRequestStatus field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromWalletRI) GetTransactionRequestStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionRequestStatus, true
}

// SetTransactionRequestStatus sets field value
func (o *CreateCoinsTransactionRequestFromWalletRI) SetTransactionRequestStatus(v string) {
	o.TransactionRequestStatus = v
}

func (o CreateCoinsTransactionRequestFromWalletRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CallbackSecretKey != nil {
		toSerialize["callbackSecretKey"] = o.CallbackSecretKey
	}
	if o.CallbackUrl != nil {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if true {
		toSerialize["feePriority"] = o.FeePriority
	}
	if o.Note != nil {
		toSerialize["note"] = o.Note
	}
	if true {
		toSerialize["recipients"] = o.Recipients
	}
	if true {
		toSerialize["totalTransactionAmount"] = o.TotalTransactionAmount
	}
	if true {
		toSerialize["transactionRequestId"] = o.TransactionRequestId
	}
	if true {
		toSerialize["transactionRequestStatus"] = o.TransactionRequestStatus
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCoinsTransactionRequestFromWalletRI struct {
	value *CreateCoinsTransactionRequestFromWalletRI
	isSet bool
}

func (v NullableCreateCoinsTransactionRequestFromWalletRI) Get() *CreateCoinsTransactionRequestFromWalletRI {
	return v.value
}

func (v *NullableCreateCoinsTransactionRequestFromWalletRI) Set(val *CreateCoinsTransactionRequestFromWalletRI) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCoinsTransactionRequestFromWalletRI) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCoinsTransactionRequestFromWalletRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCoinsTransactionRequestFromWalletRI(val *CreateCoinsTransactionRequestFromWalletRI) *NullableCreateCoinsTransactionRequestFromWalletRI {
	return &NullableCreateCoinsTransactionRequestFromWalletRI{value: val, isSet: true}
}

func (v NullableCreateCoinsTransactionRequestFromWalletRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCoinsTransactionRequestFromWalletRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


