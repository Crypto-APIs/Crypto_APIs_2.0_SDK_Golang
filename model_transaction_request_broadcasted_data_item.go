/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * API version: 2.0.0
 * Contact: developers@cryptoapis.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// TransactionRequestBroadcastedDataItem struct for TransactionRequestBroadcastedDataItem
type TransactionRequestBroadcastedDataItem struct {
	Blockchain string `json:"blockchain"`
	Network string `json:"network"`
	RequiredApproves int32 `json:"requiredApproves"`
	RequiredRejects int32 `json:"requiredRejects"`
	CurrentApproves int32 `json:"currentApproves"`
	CurrentRejects int32 `json:"currentRejects"`
	TransactionId string `json:"transactionId"`
}

// NewTransactionRequestBroadcastedDataItem instantiates a new TransactionRequestBroadcastedDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionRequestBroadcastedDataItem(blockchain string, network string, requiredApproves int32, requiredRejects int32, currentApproves int32, currentRejects int32, transactionId string) *TransactionRequestBroadcastedDataItem {
	this := TransactionRequestBroadcastedDataItem{}
	this.Blockchain = blockchain
	this.Network = network
	this.RequiredApproves = requiredApproves
	this.RequiredRejects = requiredRejects
	this.CurrentApproves = currentApproves
	this.CurrentRejects = currentRejects
	this.TransactionId = transactionId
	return &this
}

// NewTransactionRequestBroadcastedDataItemWithDefaults instantiates a new TransactionRequestBroadcastedDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionRequestBroadcastedDataItemWithDefaults() *TransactionRequestBroadcastedDataItem {
	this := TransactionRequestBroadcastedDataItem{}
	return &this
}

// GetBlockchain returns the Blockchain field value
func (o *TransactionRequestBroadcastedDataItem) GetBlockchain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value
// and a boolean to check if the value has been set.
func (o *TransactionRequestBroadcastedDataItem) GetBlockchainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Blockchain, true
}

// SetBlockchain sets field value
func (o *TransactionRequestBroadcastedDataItem) SetBlockchain(v string) {
	o.Blockchain = v
}

// GetNetwork returns the Network field value
func (o *TransactionRequestBroadcastedDataItem) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *TransactionRequestBroadcastedDataItem) GetNetworkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *TransactionRequestBroadcastedDataItem) SetNetwork(v string) {
	o.Network = v
}

// GetRequiredApproves returns the RequiredApproves field value
func (o *TransactionRequestBroadcastedDataItem) GetRequiredApproves() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequiredApproves
}

// GetRequiredApprovesOk returns a tuple with the RequiredApproves field value
// and a boolean to check if the value has been set.
func (o *TransactionRequestBroadcastedDataItem) GetRequiredApprovesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequiredApproves, true
}

// SetRequiredApproves sets field value
func (o *TransactionRequestBroadcastedDataItem) SetRequiredApproves(v int32) {
	o.RequiredApproves = v
}

// GetRequiredRejects returns the RequiredRejects field value
func (o *TransactionRequestBroadcastedDataItem) GetRequiredRejects() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequiredRejects
}

// GetRequiredRejectsOk returns a tuple with the RequiredRejects field value
// and a boolean to check if the value has been set.
func (o *TransactionRequestBroadcastedDataItem) GetRequiredRejectsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequiredRejects, true
}

// SetRequiredRejects sets field value
func (o *TransactionRequestBroadcastedDataItem) SetRequiredRejects(v int32) {
	o.RequiredRejects = v
}

// GetCurrentApproves returns the CurrentApproves field value
func (o *TransactionRequestBroadcastedDataItem) GetCurrentApproves() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentApproves
}

// GetCurrentApprovesOk returns a tuple with the CurrentApproves field value
// and a boolean to check if the value has been set.
func (o *TransactionRequestBroadcastedDataItem) GetCurrentApprovesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CurrentApproves, true
}

// SetCurrentApproves sets field value
func (o *TransactionRequestBroadcastedDataItem) SetCurrentApproves(v int32) {
	o.CurrentApproves = v
}

// GetCurrentRejects returns the CurrentRejects field value
func (o *TransactionRequestBroadcastedDataItem) GetCurrentRejects() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentRejects
}

// GetCurrentRejectsOk returns a tuple with the CurrentRejects field value
// and a boolean to check if the value has been set.
func (o *TransactionRequestBroadcastedDataItem) GetCurrentRejectsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CurrentRejects, true
}

// SetCurrentRejects sets field value
func (o *TransactionRequestBroadcastedDataItem) SetCurrentRejects(v int32) {
	o.CurrentRejects = v
}

// GetTransactionId returns the TransactionId field value
func (o *TransactionRequestBroadcastedDataItem) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *TransactionRequestBroadcastedDataItem) GetTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *TransactionRequestBroadcastedDataItem) SetTransactionId(v string) {
	o.TransactionId = v
}

func (o TransactionRequestBroadcastedDataItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["blockchain"] = o.Blockchain
	}
	if true {
		toSerialize["network"] = o.Network
	}
	if true {
		toSerialize["requiredApproves"] = o.RequiredApproves
	}
	if true {
		toSerialize["requiredRejects"] = o.RequiredRejects
	}
	if true {
		toSerialize["currentApproves"] = o.CurrentApproves
	}
	if true {
		toSerialize["currentRejects"] = o.CurrentRejects
	}
	if true {
		toSerialize["transactionId"] = o.TransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionRequestBroadcastedDataItem struct {
	value *TransactionRequestBroadcastedDataItem
	isSet bool
}

func (v NullableTransactionRequestBroadcastedDataItem) Get() *TransactionRequestBroadcastedDataItem {
	return v.value
}

func (v *NullableTransactionRequestBroadcastedDataItem) Set(val *TransactionRequestBroadcastedDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionRequestBroadcastedDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionRequestBroadcastedDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionRequestBroadcastedDataItem(val *TransactionRequestBroadcastedDataItem) *NullableTransactionRequestBroadcastedDataItem {
	return &NullableTransactionRequestBroadcastedDataItem{value: val, isSet: true}
}

func (v NullableTransactionRequestBroadcastedDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionRequestBroadcastedDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


