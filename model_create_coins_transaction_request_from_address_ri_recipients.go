/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// CreateCoinsTransactionRequestFromAddressRIRecipients struct for CreateCoinsTransactionRequestFromAddressRIRecipients
type CreateCoinsTransactionRequestFromAddressRIRecipients struct {
	// Defines the destination address.
	Address string `json:"address"`
	// Defines a specific Tag that is an additional XRP address feature. It helps identify a transaction recipient beyond a wallet address. The tag that was encoded into the x-Address along with the Source Classic Address.
	AddressTag *int32 `json:"addressTag,omitempty"`
	// Defines the amount sent to the destination address.
	Amount string `json:"amount"`
	// Represents the public address, which is a compressed and shortened form of a public key. The classic address is shown when the source address is an x-Address.
	ClassicAddress *string `json:"classicAddress,omitempty"`
}

// NewCreateCoinsTransactionRequestFromAddressRIRecipients instantiates a new CreateCoinsTransactionRequestFromAddressRIRecipients object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCoinsTransactionRequestFromAddressRIRecipients(address string, amount string) *CreateCoinsTransactionRequestFromAddressRIRecipients {
	this := CreateCoinsTransactionRequestFromAddressRIRecipients{}
	this.Address = address
	this.Amount = amount
	return &this
}

// NewCreateCoinsTransactionRequestFromAddressRIRecipientsWithDefaults instantiates a new CreateCoinsTransactionRequestFromAddressRIRecipients object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCoinsTransactionRequestFromAddressRIRecipientsWithDefaults() *CreateCoinsTransactionRequestFromAddressRIRecipients {
	this := CreateCoinsTransactionRequestFromAddressRIRecipients{}
	return &this
}

// GetAddress returns the Address field value
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) SetAddress(v string) {
	o.Address = v
}

// GetAddressTag returns the AddressTag field value if set, zero value otherwise.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) GetAddressTag() int32 {
	if o == nil || o.AddressTag == nil {
		var ret int32
		return ret
	}
	return *o.AddressTag
}

// GetAddressTagOk returns a tuple with the AddressTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) GetAddressTagOk() (*int32, bool) {
	if o == nil || o.AddressTag == nil {
		return nil, false
	}
	return o.AddressTag, true
}

// HasAddressTag returns a boolean if a field has been set.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) HasAddressTag() bool {
	if o != nil && o.AddressTag != nil {
		return true
	}

	return false
}

// SetAddressTag gets a reference to the given int32 and assigns it to the AddressTag field.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) SetAddressTag(v int32) {
	o.AddressTag = &v
}

// GetAmount returns the Amount field value
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) SetAmount(v string) {
	o.Amount = v
}

// GetClassicAddress returns the ClassicAddress field value if set, zero value otherwise.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) GetClassicAddress() string {
	if o == nil || o.ClassicAddress == nil {
		var ret string
		return ret
	}
	return *o.ClassicAddress
}

// GetClassicAddressOk returns a tuple with the ClassicAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) GetClassicAddressOk() (*string, bool) {
	if o == nil || o.ClassicAddress == nil {
		return nil, false
	}
	return o.ClassicAddress, true
}

// HasClassicAddress returns a boolean if a field has been set.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) HasClassicAddress() bool {
	if o != nil && o.ClassicAddress != nil {
		return true
	}

	return false
}

// SetClassicAddress gets a reference to the given string and assigns it to the ClassicAddress field.
func (o *CreateCoinsTransactionRequestFromAddressRIRecipients) SetClassicAddress(v string) {
	o.ClassicAddress = &v
}

func (o CreateCoinsTransactionRequestFromAddressRIRecipients) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if o.AddressTag != nil {
		toSerialize["addressTag"] = o.AddressTag
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.ClassicAddress != nil {
		toSerialize["classicAddress"] = o.ClassicAddress
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCoinsTransactionRequestFromAddressRIRecipients struct {
	value *CreateCoinsTransactionRequestFromAddressRIRecipients
	isSet bool
}

func (v NullableCreateCoinsTransactionRequestFromAddressRIRecipients) Get() *CreateCoinsTransactionRequestFromAddressRIRecipients {
	return v.value
}

func (v *NullableCreateCoinsTransactionRequestFromAddressRIRecipients) Set(val *CreateCoinsTransactionRequestFromAddressRIRecipients) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCoinsTransactionRequestFromAddressRIRecipients) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCoinsTransactionRequestFromAddressRIRecipients) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCoinsTransactionRequestFromAddressRIRecipients(val *CreateCoinsTransactionRequestFromAddressRIRecipients) *NullableCreateCoinsTransactionRequestFromAddressRIRecipients {
	return &NullableCreateCoinsTransactionRequestFromAddressRIRecipients{value: val, isSet: true}
}

func (v NullableCreateCoinsTransactionRequestFromAddressRIRecipients) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCoinsTransactionRequestFromAddressRIRecipients) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


