/*
CryptoAPIs

Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2.0.0
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// DecodeRawTransactionHexRISD2VinInner struct for DecodeRawTransactionHexRISD2VinInner
type DecodeRawTransactionHexRISD2VinInner struct {
	// Represents the addresses which send/receive the amount.
	Address *string `json:"address,omitempty"`
	// Represents the transaction inputs' indentifier.
	InputHash *string `json:"inputHash,omitempty"`
	// Defines the output index of a transaction.
	OutputIndex *string `json:"outputIndex,omitempty"`
	ScriptSig DecodeRawTransactionHexRISD2VinInnerScriptSig `json:"scriptSig"`
	// Represents the script sequence number
	Sequence *string `json:"sequence,omitempty"`
	Txinwitness []string `json:"txinwitness,omitempty"`
}

// NewDecodeRawTransactionHexRISD2VinInner instantiates a new DecodeRawTransactionHexRISD2VinInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecodeRawTransactionHexRISD2VinInner(scriptSig DecodeRawTransactionHexRISD2VinInnerScriptSig) *DecodeRawTransactionHexRISD2VinInner {
	this := DecodeRawTransactionHexRISD2VinInner{}
	this.ScriptSig = scriptSig
	return &this
}

// NewDecodeRawTransactionHexRISD2VinInnerWithDefaults instantiates a new DecodeRawTransactionHexRISD2VinInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecodeRawTransactionHexRISD2VinInnerWithDefaults() *DecodeRawTransactionHexRISD2VinInner {
	this := DecodeRawTransactionHexRISD2VinInner{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DecodeRawTransactionHexRISD2VinInner) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *DecodeRawTransactionHexRISD2VinInner) SetAddress(v string) {
	o.Address = &v
}

// GetInputHash returns the InputHash field value if set, zero value otherwise.
func (o *DecodeRawTransactionHexRISD2VinInner) GetInputHash() string {
	if o == nil || o.InputHash == nil {
		var ret string
		return ret
	}
	return *o.InputHash
}

// GetInputHashOk returns a tuple with the InputHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) GetInputHashOk() (*string, bool) {
	if o == nil || o.InputHash == nil {
		return nil, false
	}
	return o.InputHash, true
}

// HasInputHash returns a boolean if a field has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) HasInputHash() bool {
	if o != nil && o.InputHash != nil {
		return true
	}

	return false
}

// SetInputHash gets a reference to the given string and assigns it to the InputHash field.
func (o *DecodeRawTransactionHexRISD2VinInner) SetInputHash(v string) {
	o.InputHash = &v
}

// GetOutputIndex returns the OutputIndex field value if set, zero value otherwise.
func (o *DecodeRawTransactionHexRISD2VinInner) GetOutputIndex() string {
	if o == nil || o.OutputIndex == nil {
		var ret string
		return ret
	}
	return *o.OutputIndex
}

// GetOutputIndexOk returns a tuple with the OutputIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) GetOutputIndexOk() (*string, bool) {
	if o == nil || o.OutputIndex == nil {
		return nil, false
	}
	return o.OutputIndex, true
}

// HasOutputIndex returns a boolean if a field has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) HasOutputIndex() bool {
	if o != nil && o.OutputIndex != nil {
		return true
	}

	return false
}

// SetOutputIndex gets a reference to the given string and assigns it to the OutputIndex field.
func (o *DecodeRawTransactionHexRISD2VinInner) SetOutputIndex(v string) {
	o.OutputIndex = &v
}

// GetScriptSig returns the ScriptSig field value
func (o *DecodeRawTransactionHexRISD2VinInner) GetScriptSig() DecodeRawTransactionHexRISD2VinInnerScriptSig {
	if o == nil {
		var ret DecodeRawTransactionHexRISD2VinInnerScriptSig
		return ret
	}

	return o.ScriptSig
}

// GetScriptSigOk returns a tuple with the ScriptSig field value
// and a boolean to check if the value has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) GetScriptSigOk() (*DecodeRawTransactionHexRISD2VinInnerScriptSig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScriptSig, true
}

// SetScriptSig sets field value
func (o *DecodeRawTransactionHexRISD2VinInner) SetScriptSig(v DecodeRawTransactionHexRISD2VinInnerScriptSig) {
	o.ScriptSig = v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *DecodeRawTransactionHexRISD2VinInner) GetSequence() string {
	if o == nil || o.Sequence == nil {
		var ret string
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) GetSequenceOk() (*string, bool) {
	if o == nil || o.Sequence == nil {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) HasSequence() bool {
	if o != nil && o.Sequence != nil {
		return true
	}

	return false
}

// SetSequence gets a reference to the given string and assigns it to the Sequence field.
func (o *DecodeRawTransactionHexRISD2VinInner) SetSequence(v string) {
	o.Sequence = &v
}

// GetTxinwitness returns the Txinwitness field value if set, zero value otherwise.
func (o *DecodeRawTransactionHexRISD2VinInner) GetTxinwitness() []string {
	if o == nil || o.Txinwitness == nil {
		var ret []string
		return ret
	}
	return o.Txinwitness
}

// GetTxinwitnessOk returns a tuple with the Txinwitness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) GetTxinwitnessOk() ([]string, bool) {
	if o == nil || o.Txinwitness == nil {
		return nil, false
	}
	return o.Txinwitness, true
}

// HasTxinwitness returns a boolean if a field has been set.
func (o *DecodeRawTransactionHexRISD2VinInner) HasTxinwitness() bool {
	if o != nil && o.Txinwitness != nil {
		return true
	}

	return false
}

// SetTxinwitness gets a reference to the given []string and assigns it to the Txinwitness field.
func (o *DecodeRawTransactionHexRISD2VinInner) SetTxinwitness(v []string) {
	o.Txinwitness = v
}

func (o DecodeRawTransactionHexRISD2VinInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.InputHash != nil {
		toSerialize["inputHash"] = o.InputHash
	}
	if o.OutputIndex != nil {
		toSerialize["outputIndex"] = o.OutputIndex
	}
	if true {
		toSerialize["scriptSig"] = o.ScriptSig
	}
	if o.Sequence != nil {
		toSerialize["sequence"] = o.Sequence
	}
	if o.Txinwitness != nil {
		toSerialize["txinwitness"] = o.Txinwitness
	}
	return json.Marshal(toSerialize)
}

type NullableDecodeRawTransactionHexRISD2VinInner struct {
	value *DecodeRawTransactionHexRISD2VinInner
	isSet bool
}

func (v NullableDecodeRawTransactionHexRISD2VinInner) Get() *DecodeRawTransactionHexRISD2VinInner {
	return v.value
}

func (v *NullableDecodeRawTransactionHexRISD2VinInner) Set(val *DecodeRawTransactionHexRISD2VinInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDecodeRawTransactionHexRISD2VinInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDecodeRawTransactionHexRISD2VinInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecodeRawTransactionHexRISD2VinInner(val *DecodeRawTransactionHexRISD2VinInner) *NullableDecodeRawTransactionHexRISD2VinInner {
	return &NullableDecodeRawTransactionHexRISD2VinInner{value: val, isSet: true}
}

func (v NullableDecodeRawTransactionHexRISD2VinInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecodeRawTransactionHexRISD2VinInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


