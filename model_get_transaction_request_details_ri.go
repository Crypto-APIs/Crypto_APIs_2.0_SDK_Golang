/*
CryptoAPIs

Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

API version: 2021-03-20
Contact: developers@cryptoapis.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptoapis

import (
	"encoding/json"
)

// GetTransactionRequestDetailsRI struct for GetTransactionRequestDetailsRI
type GetTransactionRequestDetailsRI struct {
	// Defines an optional note for additional details.
	AdditionalDetails string `json:"additionalDetails"`
	// Represents the specific blockchain protocol name, e.g. Ethereum, Bitcoin, etc.
	Blockchain string `json:"blockchain"`
	// Defines the priority for the fee, if it is \"slow\", \"standard\" or \"fast\".
	FeePriority string `json:"feePriority"`
	// Represents the name of the blockchain network used; blockchain networks are usually identical as technology and software, but they differ in data, e.g. - \"mainnet\" is the live network with actual data while networks like \"testnet\", \"ropsten\" are test networks.
	Network string `json:"network"`
	// Represents a list of recipient addresses with the respective amounts. In account-based protocols like Ethereum there is only one address in this list.
	Recipients []GetTransactionRequestDetailsRIRecipientsInner `json:"recipients"`
	// Defines the total transaction amount.
	TotalTransactionAmount string `json:"totalTransactionAmount"`
	// Represents the unique identifier of a transaction, i.e. it could be transactionId in UTXO-based protocols like Bitcoin, and transaction hash in Ethereum blockchain.
	TransactionId *string `json:"transactionId,omitempty"`
	// Defines the status of the transaction request, e.g. pending.
	TransactionRequestStatus string `json:"transactionRequestStatus"`
	// Defines the transaction type, if it is for coins or tokens.
	TransactionType string `json:"transactionType"`
	// Defines the unit of the amount.
	Unit string `json:"unit"`
	// Defines the unique ID of the Wallet.
	WalletId string `json:"walletId"`
}

// NewGetTransactionRequestDetailsRI instantiates a new GetTransactionRequestDetailsRI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTransactionRequestDetailsRI(additionalDetails string, blockchain string, feePriority string, network string, recipients []GetTransactionRequestDetailsRIRecipientsInner, totalTransactionAmount string, transactionRequestStatus string, transactionType string, unit string, walletId string) *GetTransactionRequestDetailsRI {
	this := GetTransactionRequestDetailsRI{}
	this.AdditionalDetails = additionalDetails
	this.Blockchain = blockchain
	this.FeePriority = feePriority
	this.Network = network
	this.Recipients = recipients
	this.TotalTransactionAmount = totalTransactionAmount
	this.TransactionRequestStatus = transactionRequestStatus
	this.TransactionType = transactionType
	this.Unit = unit
	this.WalletId = walletId
	return &this
}

// NewGetTransactionRequestDetailsRIWithDefaults instantiates a new GetTransactionRequestDetailsRI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTransactionRequestDetailsRIWithDefaults() *GetTransactionRequestDetailsRI {
	this := GetTransactionRequestDetailsRI{}
	return &this
}

// GetAdditionalDetails returns the AdditionalDetails field value
func (o *GetTransactionRequestDetailsRI) GetAdditionalDetails() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetAdditionalDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalDetails, true
}

// SetAdditionalDetails sets field value
func (o *GetTransactionRequestDetailsRI) SetAdditionalDetails(v string) {
	o.AdditionalDetails = v
}

// GetBlockchain returns the Blockchain field value
func (o *GetTransactionRequestDetailsRI) GetBlockchain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetBlockchainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Blockchain, true
}

// SetBlockchain sets field value
func (o *GetTransactionRequestDetailsRI) SetBlockchain(v string) {
	o.Blockchain = v
}

// GetFeePriority returns the FeePriority field value
func (o *GetTransactionRequestDetailsRI) GetFeePriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeePriority
}

// GetFeePriorityOk returns a tuple with the FeePriority field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetFeePriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeePriority, true
}

// SetFeePriority sets field value
func (o *GetTransactionRequestDetailsRI) SetFeePriority(v string) {
	o.FeePriority = v
}

// GetNetwork returns the Network field value
func (o *GetTransactionRequestDetailsRI) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *GetTransactionRequestDetailsRI) SetNetwork(v string) {
	o.Network = v
}

// GetRecipients returns the Recipients field value
func (o *GetTransactionRequestDetailsRI) GetRecipients() []GetTransactionRequestDetailsRIRecipientsInner {
	if o == nil {
		var ret []GetTransactionRequestDetailsRIRecipientsInner
		return ret
	}

	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetRecipientsOk() ([]GetTransactionRequestDetailsRIRecipientsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipients, true
}

// SetRecipients sets field value
func (o *GetTransactionRequestDetailsRI) SetRecipients(v []GetTransactionRequestDetailsRIRecipientsInner) {
	o.Recipients = v
}

// GetTotalTransactionAmount returns the TotalTransactionAmount field value
func (o *GetTransactionRequestDetailsRI) GetTotalTransactionAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalTransactionAmount
}

// GetTotalTransactionAmountOk returns a tuple with the TotalTransactionAmount field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetTotalTransactionAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTransactionAmount, true
}

// SetTotalTransactionAmount sets field value
func (o *GetTransactionRequestDetailsRI) SetTotalTransactionAmount(v string) {
	o.TotalTransactionAmount = v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *GetTransactionRequestDetailsRI) GetTransactionId() string {
	if o == nil || o.TransactionId == nil {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetTransactionIdOk() (*string, bool) {
	if o == nil || o.TransactionId == nil {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *GetTransactionRequestDetailsRI) HasTransactionId() bool {
	if o != nil && o.TransactionId != nil {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *GetTransactionRequestDetailsRI) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetTransactionRequestStatus returns the TransactionRequestStatus field value
func (o *GetTransactionRequestDetailsRI) GetTransactionRequestStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionRequestStatus
}

// GetTransactionRequestStatusOk returns a tuple with the TransactionRequestStatus field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetTransactionRequestStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionRequestStatus, true
}

// SetTransactionRequestStatus sets field value
func (o *GetTransactionRequestDetailsRI) SetTransactionRequestStatus(v string) {
	o.TransactionRequestStatus = v
}

// GetTransactionType returns the TransactionType field value
func (o *GetTransactionRequestDetailsRI) GetTransactionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetTransactionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionType, true
}

// SetTransactionType sets field value
func (o *GetTransactionRequestDetailsRI) SetTransactionType(v string) {
	o.TransactionType = v
}

// GetUnit returns the Unit field value
func (o *GetTransactionRequestDetailsRI) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *GetTransactionRequestDetailsRI) SetUnit(v string) {
	o.Unit = v
}

// GetWalletId returns the WalletId field value
func (o *GetTransactionRequestDetailsRI) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *GetTransactionRequestDetailsRI) GetWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *GetTransactionRequestDetailsRI) SetWalletId(v string) {
	o.WalletId = v
}

func (o GetTransactionRequestDetailsRI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["additionalDetails"] = o.AdditionalDetails
	}
	if true {
		toSerialize["blockchain"] = o.Blockchain
	}
	if true {
		toSerialize["feePriority"] = o.FeePriority
	}
	if true {
		toSerialize["network"] = o.Network
	}
	if true {
		toSerialize["recipients"] = o.Recipients
	}
	if true {
		toSerialize["totalTransactionAmount"] = o.TotalTransactionAmount
	}
	if o.TransactionId != nil {
		toSerialize["transactionId"] = o.TransactionId
	}
	if true {
		toSerialize["transactionRequestStatus"] = o.TransactionRequestStatus
	}
	if true {
		toSerialize["transactionType"] = o.TransactionType
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	if true {
		toSerialize["walletId"] = o.WalletId
	}
	return json.Marshal(toSerialize)
}

type NullableGetTransactionRequestDetailsRI struct {
	value *GetTransactionRequestDetailsRI
	isSet bool
}

func (v NullableGetTransactionRequestDetailsRI) Get() *GetTransactionRequestDetailsRI {
	return v.value
}

func (v *NullableGetTransactionRequestDetailsRI) Set(val *GetTransactionRequestDetailsRI) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTransactionRequestDetailsRI) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTransactionRequestDetailsRI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTransactionRequestDetailsRI(val *GetTransactionRequestDetailsRI) *NullableGetTransactionRequestDetailsRI {
	return &NullableGetTransactionRequestDetailsRI{value: val, isSet: true}
}

func (v NullableGetTransactionRequestDetailsRI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTransactionRequestDetailsRI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


